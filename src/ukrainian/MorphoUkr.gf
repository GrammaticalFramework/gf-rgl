resource MorphoUkr = open CatUkr, ResUkr, Predef in {

oper

mkN001 : Str -> N ;
mkN001 base =
  case base of {
    base_1+"ка" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ка" ;
                       Pl => base_1+"ки"
                     } ;
              Acc => table {
                       Sg => base_1+"ку" ;
                       Pl => base_1+"ки"
                     } ;
              Dat => table {
                       Sg => base_1+"ці" ;
                       Pl => base_1+"кам"
                     } ;
              Gen => table {
                       Sg => base_1+"ки" ;
                       Pl => base_1+"к"
                     } ;
              Loc => table {
                       Sg => base_1+"ці" ;
                       Pl => base_1+"ках"
                     } ;
              Instr => table {
                         Sg => base_1+"кою" ;
                         Pl => base_1+"ками"
                       }
            } ;
        Voc = table {
                Sg => base_1+"ко" ;
                Pl => base_1+"ки"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN001"
  } ;

mkN002 : Str -> N ;
mkN002 base =
  case base of {
    base_1+"ка" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ка" ;
                       Pl => base_1+"ки"
                     } ;
              Acc => table {
                       Sg => base_1+"ку" ;
                       Pl => base_1+"к"
                     } ;
              Dat => table {
                       Sg => base_1+"ці" ;
                       Pl => base_1+"кам"
                     } ;
              Gen => table {
                       Sg => base_1+"ки" ;
                       Pl => base_1+"к"
                     } ;
              Loc => table {
                       Sg => base_1+"ці" ;
                       Pl => base_1+"ках"
                     } ;
              Instr => table {
                         Sg => base_1+"кою" ;
                         Pl => base_1+"ками"
                       }
            } ;
        Voc = table {
                Sg => base_1+"ко" ;
                Pl => base_1+"ки"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN002"
  } ;

mkN003 : Str -> N ;
mkN003 base =
  case base of {
    base_1 => lin N
      { s = table {
              Nom => table {
                       Sg => base_1 ;
                       Pl => base_1+"и"
                     } ;
              Acc => table {
                       Sg => base_1 ;
                       Pl => base_1+"и"
                     } ;
              Dat => table {
                       Sg => base_1+"ові" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"ів"
                     } ;
              Loc => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ом" ;
                         Pl => base_1+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"е" ;
                Pl => base_1+"и"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN003"
  } ;

mkN004 : Str -> N ;
mkN004 base =
  case base of {
    base_1 => lin N
      { s = table {
              Nom => table {
                       Sg => base_1 ;
                       Pl => base_1+"и"
                     } ;
              Acc => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"ів"
                     } ;
              Dat => table {
                       Sg => base_1+"ові" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"ів"
                     } ;
              Loc => table {
                       Sg => base_1+"ові" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ом" ;
                         Pl => base_1+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"у" ;
                Pl => base_1+"и"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN004"
  } ;

mkN005 : Str -> N ;
mkN005 base =
  case base of {
    base_1+"е"+base_2@?+"ь" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"е"+base_2+"ь" ;
                       Pl => base_1+base_2+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"е"+base_2+"ь" ;
                       Pl => base_1+base_2+"і"
                     } ;
              Dat => table {
                       Sg => base_1+base_2+"еві" ;
                       Pl => base_1+base_2+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+base_2+"я" ;
                       Pl => base_1+base_2+"ів"
                     } ;
              Loc => table {
                       Sg => base_1+base_2+"ю" ;
                       Pl => base_1+base_2+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+base_2+"ем" ;
                         Pl => base_1+base_2+"ями"
                       }
            } ;
        Voc = table {
                Sg => base_1+base_2+"ю" ;
                Pl => base_1+base_2+"і"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN005"
  } ;

mkN006 : Str -> N ;
mkN006 base =
  case base of {
    base_1 => lin N
      { s = table {
              Nom => table {
                       Sg => base_1 ;
                       Pl => base_1+"и"
                     } ;
              Acc => table {
                       Sg => base_1 ;
                       Pl => base_1+"и"
                     } ;
              Dat => table {
                       Sg => base_1+"ові" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"ів"
                     } ;
              Loc => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ом" ;
                         Pl => base_1+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"е" ;
                Pl => base_1+"и"
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN006"
  } ;

mkN007 : Str -> N ;
mkN007 base =
  case base of {
    base_1+"ка" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ка" ;
                       Pl => base_1+"ки"
                     } ;
              Acc => table {
                       Sg => base_1+"ку" ;
                       Pl => base_1+"ки"
                     } ;
              Dat => table {
                       Sg => base_1+"ці" ;
                       Pl => base_1+"кам"
                     } ;
              Gen => table {
                       Sg => base_1+"ки" ;
                       Pl => base_1+"ок"
                     } ;
              Loc => table {
                       Sg => base_1+"ці" ;
                       Pl => base_1+"ках"
                     } ;
              Instr => table {
                         Sg => base_1+"кою" ;
                         Pl => base_1+"ками"
                       }
            } ;
        Voc = table {
                Sg => base_1+"ко" ;
                Pl => base_1+"ки"
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN007"
  } ;

mkN008 : Str -> N ;
mkN008 base =
  case base of {
    base_1+"а" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"и"
                     } ;
              Acc => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"и"
                     } ;
              Dat => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"и" ;
                       Pl => base_1
                     } ;
              Loc => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ою" ;
                         Pl => base_1+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"о" ;
                Pl => base_1+"и"
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN008"
  } ;

mkN009 : Str -> N ;
mkN009 base =
  case base of {
    base_1 => lin N
      { s = table {
              Nom => table {
                       Sg => base_1 ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => base_1 ;
                       Pl => base_1+"і"
                     } ;
              Dat => table {
                       Sg => base_1+"еві" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"ів"
                     } ;
              Loc => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ем" ;
                         Pl => base_1+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"у" ;
                Pl => base_1+"і"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN009"
  } ;

mkN010 : Str -> N ;
mkN010 base =
  case base of {
    base_1+"ь" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ь" ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"ь" ;
                       Pl => base_1+"і"
                     } ;
              Dat => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ей"
                     } ;
              Loc => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"сю" ;
                         Pl => base_1+"ями"
                       }
            } ;
        Voc = table {
                Sg => base_1+"е" ;
                Pl => base_1+"і"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN010"
  } ;

mkN011 : Str -> N ;
mkN011 base =
  case base of {
    base_1 => lin N
      { s = table {
              Nom => table {
                       Sg => base_1 ;
                       Pl => base_1+"и"
                     } ;
              Acc => table {
                       Sg => base_1 ;
                       Pl => base_1+"и"
                     } ;
              Dat => table {
                       Sg => base_1+"ові" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"ів"
                     } ;
              Loc => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ом" ;
                         Pl => base_1+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"у" ;
                Pl => base_1+"и"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN011"
  } ;

mkN012 : Str -> N ;
mkN012 base =
  case base of {
    base_1 => lin N
      { s = table {
              Nom => table {
                       Sg => base_1 ;
                       Pl => base_1+"и"
                     } ;
              Acc => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"и"
                     } ;
              Dat => table {
                       Sg => base_1+"ові" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"ів"
                     } ;
              Loc => table {
                       Sg => base_1+"ові" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ом" ;
                         Pl => base_1+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"е" ;
                Pl => base_1+"и"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN012"
  } ;

mkN013 : Str -> N ;
mkN013 base =
  case base of {
    base_1+"о" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"о" ;
                       Pl => base_1+"а"
                     } ;
              Acc => table {
                       Sg => base_1+"о" ;
                       Pl => base_1+"а"
                     } ;
              Dat => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"а" ;
                       Pl => base_1
                     } ;
              Loc => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ом" ;
                         Pl => base_1+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"о" ;
                Pl => base_1+"а"
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN013"
  } ;

mkN014 : Str -> N ;
mkN014 base =
  case base of {
    base_1+"ко" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ко" ;
                       Pl => base_1+"чі"
                     } ;
              Acc => table {
                       Sg => base_1+"ко" ;
                       Pl => base_1+"чі"
                     } ;
              Dat => table {
                       Sg => base_1+"ку" ;
                       Pl => base_1+"чам"
                     } ;
              Gen => table {
                       Sg => base_1+"ка" ;
                       Pl => base_1+"чей"
                     } ;
              Loc => table {
                       Sg => base_1+"ку" ;
                       Pl => base_1+"чах"
                     } ;
              Instr => table {
                         Sg => base_1+"ком" ;
                         Pl => base_1+"чима"
                       }
            } ;
        Voc = table {
                Sg => base_1+"ко" ;
                Pl => base_1+"чі"
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN014"
  } ;

mkN015 : Str -> N ;
mkN015 base =
  case base of {
    base_1+"о" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"о" ;
                       Pl => base_1+"а"
                     } ;
              Acc => table {
                       Sg => base_1+"о" ;
                       Pl => base_1+"а"
                     } ;
              Dat => table {
                       Sg => base_1+"ові" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"а" ;
                       Pl => base_1
                     } ;
              Loc => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ом" ;
                         Pl => base_1+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"о" ;
                Pl => base_1+"а"
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN015"
  } ;

mkN016 : Str -> N ;
mkN016 base =
  case base of {
    base_1+"й" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"й" ;
                       Pl => base_1+"ї"
                     } ;
              Acc => table {
                       Sg => base_1+"й" ;
                       Pl => base_1+"ї"
                     } ;
              Dat => table {
                       Sg => base_1+"ю" ;
                       Pl => base_1+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"ю" ;
                       Pl => base_1+"їв"
                     } ;
              Loc => table {
                       Sg => base_1+"ю" ;
                       Pl => base_1+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"єм" ;
                         Pl => base_1+"ями"
                       }
            } ;
        Voc = table {
                Sg => base_1+"ю" ;
                Pl => base_1+"ї"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN016"
  } ;

mkN017 : Str -> N ;
mkN017 base =
  case base of {
    base_1 => lin N
      { s = table {
              Nom => table {
                       Sg => base_1 ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"і"
                     } ;
              Dat => table {
                       Sg => base_1+"ові" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"ів"
                     } ;
              Loc => table {
                       Sg => base_1+"ові" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ом" ;
                         Pl => base_1+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"е" ;
                Pl => base_1+"і"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN017"
  } ;

mkN018 : Str -> N ;
mkN018 base =
  case base of {
    base_1+"к" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"к" ;
                       Pl => base_1+"ки"
                     } ;
              Acc => table {
                       Sg => base_1+"ка" ;
                       Pl => base_1+"ки"
                     } ;
              Dat => table {
                       Sg => base_1+"кові" ;
                       Pl => base_1+"кам"
                     } ;
              Gen => table {
                       Sg => base_1+"ка" ;
                       Pl => base_1+"ків"
                     } ;
              Loc => table {
                       Sg => base_1+"кові" ;
                       Pl => base_1+"ках"
                     } ;
              Instr => table {
                         Sg => base_1+"ком" ;
                         Pl => base_1+"ками"
                       }
            } ;
        Voc = table {
                Sg => base_1+"че" ;
                Pl => base_1+"ки"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN018"
  } ;

mkN019 : Str -> N ;
mkN019 base =
  case base of {
    base_1+"к" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"к" ;
                       Pl => base_1+"ки"
                     } ;
              Acc => table {
                       Sg => base_1+"ка" ;
                       Pl => base_1+"ків"
                     } ;
              Dat => table {
                       Sg => base_1+"кові" ;
                       Pl => base_1+"кам"
                     } ;
              Gen => table {
                       Sg => base_1+"ка" ;
                       Pl => base_1+"ків"
                     } ;
              Loc => table {
                       Sg => base_1+"кові" ;
                       Pl => base_1+"ках"
                     } ;
              Instr => table {
                         Sg => base_1+"ком" ;
                         Pl => base_1+"ками"
                       }
            } ;
        Voc = table {
                Sg => base_1+"че" ;
                Pl => base_1+"ки"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN019"
  } ;

mkN020 : Str -> N ;
mkN020 base =
  case base of {
    base_1+"о"+base_2@?+"а" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"о"+base_2+"а" ;
                       Pl => base_1+"о"+base_2+"и"
                     } ;
              Acc => table {
                       Sg => base_1+"о"+base_2+"у" ;
                       Pl => base_1+"о"+base_2+"и"
                     } ;
              Dat => table {
                       Sg => base_1+"о"+base_2+"і" ;
                       Pl => base_1+"о"+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"о"+base_2+"и" ;
                       Pl => base_1+"і"+base_2
                     } ;
              Loc => table {
                       Sg => base_1+"о"+base_2+"і" ;
                       Pl => base_1+"о"+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"о"+base_2+"ою" ;
                         Pl => base_1+"о"+base_2+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"о"+base_2+"о" ;
                Pl => base_1+"о"+base_2+"и"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN020"
  } ;

mkN021 : Str -> N ;
mkN021 base =
  case base of {
    base_1+"о"+base_2@?+"а" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"о"+base_2+"а" ;
                       Pl => base_1+"о"+base_2+"и"
                     } ;
              Acc => table {
                       Sg => base_1+"о"+base_2+"у" ;
                       Pl => base_1+"і"+base_2
                     } ;
              Dat => table {
                       Sg => base_1+"о"+base_2+"і" ;
                       Pl => base_1+"о"+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"о"+base_2+"и" ;
                       Pl => base_1+"і"+base_2
                     } ;
              Loc => table {
                       Sg => base_1+"о"+base_2+"і" ;
                       Pl => base_1+"о"+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"о"+base_2+"ою" ;
                         Pl => base_1+"о"+base_2+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"о"+base_2+"о" ;
                Pl => base_1+"о"+base_2+"и"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN021"
  } ;

mkN022 : Str -> N ;
mkN022 base =
  case base of {
    base_1+"ка" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ка" ;
                       Pl => base_1+"ки"
                     } ;
              Acc => table {
                       Sg => base_1+"ку" ;
                       Pl => base_1+"ки"
                     } ;
              Dat => table {
                       Sg => base_1+"ці" ;
                       Pl => base_1+"кам"
                     } ;
              Gen => table {
                       Sg => base_1+"ки" ;
                       Pl => base_1+"к"
                     } ;
              Loc => table {
                       Sg => base_1+"ці" ;
                       Pl => base_1+"ках"
                     } ;
              Instr => table {
                         Sg => base_1+"кою" ;
                         Pl => base_1+"ками"
                       }
            } ;
        Voc = table {
                Sg => base_1+"ко" ;
                Pl => base_1+"ки"
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN022"
  } ;

mkN023 : Str -> N ;
mkN023 base =
  case base of {
    base_1 => lin N
      { s = table {
              Nom => table {
                       Sg => base_1 ;
                       Pl => base_1+"и"
                     } ;
              Acc => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"ів"
                     } ;
              Dat => table {
                       Sg => base_1+"ові" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"ів"
                     } ;
              Loc => table {
                       Sg => base_1+"ові" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ом" ;
                         Pl => base_1+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"е" ;
                Pl => base_1+"и"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN023"
  } ;

mkN024 : Str -> N ;
mkN024 base =
  case base of {
    base_1+"о"+base_2@? => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"о"+base_2 ;
                       Pl => base_1+base_2+"и"
                     } ;
              Acc => table {
                       Sg => base_1+"о"+base_2 ;
                       Pl => base_1+base_2+"и"
                     } ;
              Dat => table {
                       Sg => base_1+base_2+"ові" ;
                       Pl => base_1+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+base_2+"а" ;
                       Pl => base_1+base_2+"ів"
                     } ;
              Loc => table {
                       Sg => base_1+base_2+"ові" ;
                       Pl => base_1+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+base_2+"ом" ;
                         Pl => base_1+base_2+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+base_2+"у" ;
                Pl => base_1+base_2+"и"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN024"
  } ;

mkN025 : Str -> N ;
mkN025 base =
  case base of {
    base_1+"ь" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ь" ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"ь" ;
                       Pl => base_1+"і"
                     } ;
              Dat => table {
                       Sg => base_1+"еві" ;
                       Pl => base_1+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"я" ;
                       Pl => base_1+"ів"
                     } ;
              Loc => table {
                       Sg => base_1+"ю" ;
                       Pl => base_1+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"ем" ;
                         Pl => base_1+"ями"
                       }
            } ;
        Voc = table {
                Sg => base_1+"ю" ;
                Pl => base_1+"і"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN025"
  } ;

mkN026 : Str -> N ;
mkN026 base =
  case base of {
    base_1+"о"+base_2@? => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"о"+base_2 ;
                       Pl => base_1+base_2+"и"
                     } ;
              Acc => table {
                       Sg => base_1+"о"+base_2 ;
                       Pl => base_1+base_2+"и"
                     } ;
              Dat => table {
                       Sg => base_1+base_2+"ові" ;
                       Pl => base_1+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+base_2+"у" ;
                       Pl => base_1+base_2+"ів"
                     } ;
              Loc => table {
                       Sg => base_1+base_2+"ові" ;
                       Pl => base_1+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+base_2+"ом" ;
                         Pl => base_1+base_2+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+base_2+"у" ;
                Pl => base_1+base_2+"и"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN026"
  } ;

mkN027 : Str -> N ;
mkN027 base =
  case base of {
    base_1+"а" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"и"
                     } ;
              Acc => table {
                       Sg => base_1+"у" ;
                       Pl => base_1
                     } ;
              Dat => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"и" ;
                       Pl => base_1
                     } ;
              Loc => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ою" ;
                         Pl => base_1+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"о" ;
                Pl => base_1+"и"
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN027"
  } ;

mkN028 : Str -> N ;
mkN028 base =
  case base of {
    base_1+"и" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"и" ;
                       Pl => base_1+"ері"
                     } ;
              Acc => table {
                       Sg => base_1+"ір" ;
                       Pl => base_1+"ерів"
                     } ;
              Dat => table {
                       Sg => base_1+"ері" ;
                       Pl => base_1+"ерям"
                     } ;
              Gen => table {
                       Sg => base_1+"ері" ;
                       Pl => base_1+"ерів"
                     } ;
              Loc => table {
                       Sg => base_1+"ері" ;
                       Pl => base_1+"ерях"
                     } ;
              Instr => table {
                         Sg => base_1+"ір'ю" ;
                         Pl => base_1+"ерями"
                       }
            } ;
        Voc = table {
                Sg => base_1+"и" ;
                Pl => base_1+"ері"
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN028"
  } ;

mkN029 : Str -> N ;
mkN029 base =
  case base of {
    base_1 => lin N
      { s = table {
              Nom => table {
                       Sg => base_1 ;
                       Pl => base_1+"и"
                     } ;
              Acc => table {
                       Sg => base_1 ;
                       Pl => base_1+"и"
                     } ;
              Dat => table {
                       Sg => base_1+"ові" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"ів"
                     } ;
              Loc => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ом" ;
                         Pl => base_1+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"е" ;
                Pl => base_1+"и"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN029"
  } ;

mkN030 : Str -> N ;
mkN030 base =
  case base of {
    base_1+"ь" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ь" ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"я" ;
                       Pl => base_1+"і"
                     } ;
              Dat => table {
                       Sg => base_1+"еві" ;
                       Pl => base_1+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"я" ;
                       Pl => base_1+"ів"
                     } ;
              Loc => table {
                       Sg => base_1+"еві" ;
                       Pl => base_1+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"ем" ;
                         Pl => base_1+"ями"
                       }
            } ;
        Voc = table {
                Sg => base_1+"ю" ;
                Pl => base_1+"і"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN030"
  } ;

mkN031 : Str -> N ;
mkN031 base =
  case base of {
    base_1 => lin N
      { s = table {
              Nom => table {
                       Sg => base_1 ;
                       Pl => base_1+"и"
                     } ;
              Acc => table {
                       Sg => base_1 ;
                       Pl => base_1+"ів"
                     } ;
              Dat => table {
                       Sg => base_1+"ові" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"ів"
                     } ;
              Loc => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ом" ;
                         Pl => base_1+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"е" ;
                Pl => base_1+"и"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN031"
  } ;

mkN032 : Str -> N ;
mkN032 base =
  case base of {
    base_1+"ко" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ко" ;
                       Pl => nonExist
                     } ;
              Acc => table {
                       Sg => base_1+"ко" ;
                       Pl => nonExist
                     } ;
              Dat => table {
                       Sg => base_1+"ку" ;
                       Pl => nonExist
                     } ;
              Gen => table {
                       Sg => base_1+"ка" ;
                       Pl => nonExist
                     } ;
              Loc => table {
                       Sg => base_1+"ці" ;
                       Pl => nonExist
                     } ;
              Instr => table {
                         Sg => base_1+"ком" ;
                         Pl => nonExist
                       }
            } ;
        Voc = table {
                Sg => base_1+"ко" ;
                Pl => nonExist
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN032"
  } ;

mkN033 : Str -> N ;
mkN033 base =
  case base of {
    base_1+"га" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"га" ;
                       Pl => base_1+"ги"
                     } ;
              Acc => table {
                       Sg => base_1+"гу" ;
                       Pl => base_1+"ги"
                     } ;
              Dat => table {
                       Sg => base_1+"зі" ;
                       Pl => base_1+"гам"
                     } ;
              Gen => table {
                       Sg => base_1+"ги" ;
                       Pl => base_1+"г"
                     } ;
              Loc => table {
                       Sg => base_1+"зі" ;
                       Pl => base_1+"гах"
                     } ;
              Instr => table {
                         Sg => base_1+"гою" ;
                         Pl => base_1+"гами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"го" ;
                Pl => base_1+"ги"
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN033"
  } ;

mkN034 : Str -> N ;
mkN034 base =
  case base of {
    base_1+"е"+base_2@? => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"е"+base_2 ;
                       Pl => base_1+base_2+"и"
                     } ;
              Acc => table {
                       Sg => base_1+base_2+"а" ;
                       Pl => base_1+base_2+"и"
                     } ;
              Dat => table {
                       Sg => base_1+base_2+"ові" ;
                       Pl => base_1+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+base_2+"а" ;
                       Pl => base_1+base_2+"ів"
                     } ;
              Loc => table {
                       Sg => base_1+base_2+"ові" ;
                       Pl => base_1+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+base_2+"ом" ;
                         Pl => base_1+base_2+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+base_2+"е" ;
                Pl => base_1+base_2+"и"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN034"
  } ;

mkN035 : Str -> N ;
mkN035 base =
  case base of {
    base_1 => lin N
      { s = table {
              Nom => table {
                       Sg => base_1 ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"я" ;
                       Pl => base_1+"ів"
                     } ;
              Dat => table {
                       Sg => base_1+"еві" ;
                       Pl => base_1+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"я" ;
                       Pl => base_1+"ів"
                     } ;
              Loc => table {
                       Sg => base_1+"еві" ;
                       Pl => base_1+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"ем" ;
                         Pl => base_1+"ями"
                       }
            } ;
        Voc = table {
                Sg => base_1+"ю" ;
                Pl => base_1+"і"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN035"
  } ;

mkN036 : Str -> N ;
mkN036 base =
  case base of {
    base_1 => lin N
      { s = table {
              Nom => table {
                       Sg => base_1 ;
                       Pl => base_1+"и"
                     } ;
              Acc => table {
                       Sg => base_1 ;
                       Pl => base_1+"и"
                     } ;
              Dat => table {
                       Sg => base_1+"ові" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"ів"
                     } ;
              Loc => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ом" ;
                         Pl => base_1+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"у" ;
                Pl => base_1+"и"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN036"
  } ;

mkN037 : Str -> N ;
mkN037 base =
  case base of {
    base_1+"й" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"й" ;
                       Pl => base_1+"ї"
                     } ;
              Acc => table {
                       Sg => base_1+"я" ;
                       Pl => base_1+"їв"
                     } ;
              Dat => table {
                       Sg => base_1+"ю" ;
                       Pl => base_1+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"я" ;
                       Pl => base_1+"їв"
                     } ;
              Loc => table {
                       Sg => base_1+"ю" ;
                       Pl => base_1+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"єм" ;
                         Pl => base_1+"ями"
                       }
            } ;
        Voc = table {
                Sg => base_1+"ю" ;
                Pl => base_1+"ї"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN037"
  } ;

mkN038 : Str -> N ;
mkN038 base =
  case base of {
    base_1+"ка" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ка" ;
                       Pl => base_1+"ки"
                     } ;
              Acc => table {
                       Sg => base_1+"ку" ;
                       Pl => base_1+"ок"
                     } ;
              Dat => table {
                       Sg => base_1+"ці" ;
                       Pl => base_1+"кам"
                     } ;
              Gen => table {
                       Sg => base_1+"ки" ;
                       Pl => base_1+"ок"
                     } ;
              Loc => table {
                       Sg => base_1+"ці" ;
                       Pl => base_1+"ках"
                     } ;
              Instr => table {
                         Sg => base_1+"кою" ;
                         Pl => base_1+"ками"
                       }
            } ;
        Voc = table {
                Sg => base_1+"ко" ;
                Pl => base_1+"ки"
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN038"
  } ;

mkN039 : Str -> N ;
mkN039 base =
  case base of {
    base_1+base_2@?+"я" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+base_2+"я" ;
                       Pl => base_1+base_2+"і"
                     } ;
              Acc => table {
                       Sg => base_1+base_2+"ю" ;
                       Pl => base_1+base_2+"і"
                     } ;
              Dat => table {
                       Sg => base_1+base_2+"і" ;
                       Pl => base_1+base_2+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+base_2+"і" ;
                       Pl => base_1+"е"+base_2+"ь"
                     } ;
              Loc => table {
                       Sg => base_1+base_2+"і" ;
                       Pl => base_1+base_2+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+base_2+"ею" ;
                         Pl => base_1+base_2+"ями"
                       }
            } ;
        Voc = table {
                Sg => base_1+base_2+"е" ;
                Pl => base_1+base_2+"і"
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN039"
  } ;

mkN040 : Str -> N ;
mkN040 base =
  case base of {
    base_1+"ь" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ь" ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"ь" ;
                       Pl => base_1+"і"
                     } ;
              Dat => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ей"
                     } ;
              Loc => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"тю" ;
                         Pl => base_1+"ями"
                       }
            } ;
        Voc = table {
                Sg => base_1+"е" ;
                Pl => base_1+"і"
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN040"
  } ;

mkN041 : Str -> N ;
mkN041 base =
  case base of {
    base_1+"о"+base_2@?+"о" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"о"+base_2+"о" ;
                       Pl => base_1+"о"+base_2+"а"
                     } ;
              Acc => table {
                       Sg => base_1+"о"+base_2+"о" ;
                       Pl => base_1+"о"+base_2+"а"
                     } ;
              Dat => table {
                       Sg => base_1+"о"+base_2+"у" ;
                       Pl => base_1+"о"+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"о"+base_2+"а" ;
                       Pl => base_1+"і"+base_2
                     } ;
              Loc => table {
                       Sg => base_1+"о"+base_2+"і" ;
                       Pl => base_1+"о"+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"о"+base_2+"ом" ;
                         Pl => base_1+"о"+base_2+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"о"+base_2+"о" ;
                Pl => base_1+"о"+base_2+"а"
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN041"
  } ;

mkN042 : Str -> N ;
mkN042 base =
  case base of {
    base_1+base_2@?+"а" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+base_2+"а" ;
                       Pl => base_1+base_2+"и"
                     } ;
              Acc => table {
                       Sg => base_1+base_2+"у" ;
                       Pl => base_1+base_2+"и"
                     } ;
              Dat => table {
                       Sg => base_1+base_2+"і" ;
                       Pl => base_1+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+base_2+"и" ;
                       Pl => base_1+"о"+base_2
                     } ;
              Loc => table {
                       Sg => base_1+base_2+"і" ;
                       Pl => base_1+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+base_2+"ою" ;
                         Pl => base_1+base_2+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+base_2+"о" ;
                Pl => base_1+base_2+"и"
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN042"
  } ;

mkN043 : Str -> N ;
mkN043 base =
  case base of {
    base_1+"г" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"г" ;
                       Pl => base_1+"ги"
                     } ;
              Acc => table {
                       Sg => base_1+"га" ;
                       Pl => base_1+"гів"
                     } ;
              Dat => table {
                       Sg => base_1+"гові" ;
                       Pl => base_1+"гам"
                     } ;
              Gen => table {
                       Sg => base_1+"га" ;
                       Pl => base_1+"гів"
                     } ;
              Loc => table {
                       Sg => base_1+"гові" ;
                       Pl => base_1+"гах"
                     } ;
              Instr => table {
                         Sg => base_1+"гом" ;
                         Pl => base_1+"гами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"же" ;
                Pl => base_1+"ги"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN043"
  } ;

mkN044 : Str -> N ;
mkN044 base =
  case base of {
    base_1+"ога" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ога" ;
                       Pl => base_1+"оги"
                     } ;
              Acc => table {
                       Sg => base_1+"огу" ;
                       Pl => base_1+"оги"
                     } ;
              Dat => table {
                       Sg => base_1+"озі" ;
                       Pl => base_1+"огам"
                     } ;
              Gen => table {
                       Sg => base_1+"оги" ;
                       Pl => base_1+"іг"
                     } ;
              Loc => table {
                       Sg => base_1+"озі" ;
                       Pl => base_1+"огах"
                     } ;
              Instr => table {
                         Sg => base_1+"огою" ;
                         Pl => base_1+"огами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"ого" ;
                Pl => base_1+"оги"
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN044"
  } ;

mkN045 : Str -> N ;
mkN045 base =
  case base of {
    base_1+"е" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"е" ;
                       Pl => base_1+"я"
                     } ;
              Acc => table {
                       Sg => base_1+"е" ;
                       Pl => base_1+"я"
                     } ;
              Dat => table {
                       Sg => base_1+"ю" ;
                       Pl => base_1+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"я" ;
                       Pl => base_1+"ів"
                     } ;
              Loc => table {
                       Sg => base_1+"ю" ;
                       Pl => base_1+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"ем" ;
                         Pl => base_1+"ями"
                       }
            } ;
        Voc = table {
                Sg => base_1+"е" ;
                Pl => base_1+"я"
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN045"
  } ;

mkN046 : Str -> N ;
mkN046 base =
  case base of {
    base_1+"я" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"я" ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"ю" ;
                       Pl => base_1+"і"
                     } ;
              Dat => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"і" ;
                       Pl => base_1
                     } ;
              Loc => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"ею" ;
                         Pl => base_1+"ями"
                       }
            } ;
        Voc = table {
                Sg => base_1+"е" ;
                Pl => base_1+"і"
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN046"
  } ;

mkN047 : Str -> N ;
mkN047 base =
  case base of {
    base_1+"а" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"і"
                     } ;
              Dat => table {
                       Sg => base_1+"ій" ;
                       Pl => base_1+"им"
                     } ;
              Gen => table {
                       Sg => base_1+"ої" ;
                       Pl => base_1+"их"
                     } ;
              Loc => table {
                       Sg => base_1+"ій" ;
                       Pl => base_1+"их"
                     } ;
              Instr => table {
                         Sg => base_1+"ою" ;
                         Pl => base_1+"ими"
                       }
            } ;
        Voc = table {
                Sg => base_1+"а" ;
                Pl => base_1+"і"
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN047"
  } ;

mkN048 : Str -> N ;
mkN048 base =
  case base of {
    base_1+"о"+base_2@?+"а" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"о"+base_2+"а" ;
                       Pl => base_1+"о"+base_2+"и"
                     } ;
              Acc => table {
                       Sg => base_1+"о"+base_2+"у" ;
                       Pl => base_1+"о"+base_2+"и"
                     } ;
              Dat => table {
                       Sg => base_1+"о"+base_2+"і" ;
                       Pl => base_1+"о"+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"о"+base_2+"и" ;
                       Pl => base_1+"і"+base_2
                     } ;
              Loc => table {
                       Sg => base_1+"о"+base_2+"і" ;
                       Pl => base_1+"о"+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"о"+base_2+"ою" ;
                         Pl => base_1+"о"+base_2+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"о"+base_2+"о" ;
                Pl => base_1+"о"+base_2+"и"
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN048"
  } ;

mkN049 : Str -> N ;
mkN049 base =
  case base of {
    base_1 => lin N
      { s = table {
              Nom => table {
                       Sg => base_1 ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => base_1 ;
                       Pl => base_1+"і"
                     } ;
              Dat => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ей"
                     } ;
              Loc => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"'ю" ;
                         Pl => base_1+"ями"
                       }
            } ;
        Voc = table {
                Sg => base_1+"е" ;
                Pl => base_1+"і"
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN049"
  } ;

mkN050 : Str -> N ;
mkN050 base =
  case base of {
    base_1 => lin N
      { s = table {
              Nom => table {
                       Sg => base_1 ;
                       Pl => base_1+"и"
                     } ;
              Acc => table {
                       Sg => base_1 ;
                       Pl => base_1+"и"
                     } ;
              Dat => table {
                       Sg => base_1+"ові" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"ів"
                     } ;
              Loc => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ом" ;
                         Pl => base_1+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"е" ;
                Pl => base_1+"и"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN050"
  } ;

mkN051 : Str -> N ;
mkN051 base =
  case base of {
    base_1+"и" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"и" ;
                       Pl => base_1+"и"
                     } ;
              Acc => table {
                       Sg => nonExist ;
                       Pl => base_1+"и"
                     } ;
              Dat => table {
                       Sg => nonExist ;
                       Pl => base_1+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"ей" ;
                       Pl => base_1+"ей"
                     } ;
              Loc => table {
                       Sg => nonExist ;
                       Pl => base_1+"ях"
                     } ;
              Instr => table {
                         Sg => nonExist ;
                         Pl => base_1+"ьми"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => base_1+"и"
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN051"
  } ;

mkN052 : Str -> N ;
mkN052 base =
  case base of {
    base_1 => lin N
      { s = table {
              Nom => table {
                       Sg => base_1 ;
                       Pl => base_1+"и"
                     } ;
              Acc => table {
                       Sg => base_1 ;
                       Pl => base_1+"и"
                     } ;
              Dat => table {
                       Sg => base_1+"ові" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"у" ;
                       Pl => base_1
                     } ;
              Loc => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ом" ;
                         Pl => base_1+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"е" ;
                Pl => base_1+"и"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN052"
  } ;

mkN053 : Str -> N ;
mkN053 base =
  case base of {
    base_1+"г" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"г" ;
                       Pl => base_1+"зі"
                     } ;
              Acc => table {
                       Sg => base_1+"га" ;
                       Pl => base_1+"зів"
                     } ;
              Dat => table {
                       Sg => base_1+"гові" ;
                       Pl => base_1+"зям"
                     } ;
              Gen => table {
                       Sg => base_1+"га" ;
                       Pl => base_1+"зів"
                     } ;
              Loc => table {
                       Sg => base_1+"гові" ;
                       Pl => base_1+"зях"
                     } ;
              Instr => table {
                         Sg => base_1+"гом" ;
                         Pl => base_1+"зями"
                       }
            } ;
        Voc = table {
                Sg => base_1+"же" ;
                Pl => base_1+"зі"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN053"
  } ;

mkN054 : Str -> N ;
mkN054 base =
  case base of {
    base_1+"г" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"г" ;
                       Pl => base_1+"ги"
                     } ;
              Acc => table {
                       Sg => base_1+"г" ;
                       Pl => base_1+"ги"
                     } ;
              Dat => table {
                       Sg => base_1+"гові" ;
                       Pl => base_1+"гам"
                     } ;
              Gen => table {
                       Sg => base_1+"га" ;
                       Pl => base_1+"гів"
                     } ;
              Loc => table {
                       Sg => base_1+"зі" ;
                       Pl => base_1+"гах"
                     } ;
              Instr => table {
                         Sg => base_1+"гом" ;
                         Pl => base_1+"гами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"гу" ;
                Pl => base_1+"ги"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN054"
  } ;

mkN055 : Str -> N ;
mkN055 base =
  case base of {
    base_1 => lin N
      { s = table {
              Nom => table {
                       Sg => base_1 ;
                       Pl => base_1+"та"
                     } ;
              Acc => table {
                       Sg => base_1 ;
                       Pl => base_1+"т"
                     } ;
              Dat => table {
                       Sg => base_1+"ті" ;
                       Pl => base_1+"там"
                     } ;
              Gen => table {
                       Sg => base_1+"ти" ;
                       Pl => base_1+"т"
                     } ;
              Loc => table {
                       Sg => base_1+"ті" ;
                       Pl => base_1+"тах"
                     } ;
              Instr => table {
                         Sg => base_1+"м" ;
                         Pl => base_1+"тами"
                       }
            } ;
        Voc = table {
                Sg => base_1 ;
                Pl => base_1+"та"
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN055"
  } ;

mkN056 : Str -> N ;
mkN056 base =
  case base of {
    base_1 => lin N
      { s = table {
              Nom => table {
                       Sg => base_1 ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => base_1 ;
                       Pl => base_1+"і"
                     } ;
              Dat => table {
                       Sg => base_1+"еві" ;
                       Pl => base_1+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"я" ;
                       Pl => base_1+"ів"
                     } ;
              Loc => table {
                       Sg => base_1+"ю" ;
                       Pl => base_1+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"ем" ;
                         Pl => base_1+"ями"
                       }
            } ;
        Voc = table {
                Sg => base_1+"ю" ;
                Pl => base_1+"і"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN056"
  } ;

mkN057 : Str -> N ;
mkN057 base =
  case base of {
    base_1+"а" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"и"
                     } ;
              Acc => table {
                       Sg => base_1+"у" ;
                       Pl => base_1
                     } ;
              Dat => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"и" ;
                       Pl => base_1
                     } ;
              Loc => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ою" ;
                         Pl => base_1+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"о" ;
                Pl => base_1+"и"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN057"
  } ;

mkN058 : Str -> N ;
mkN058 base =
  case base of {
    base_1+"ь" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ь" ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"я" ;
                       Pl => base_1+"ів"
                     } ;
              Dat => table {
                       Sg => base_1+"еві" ;
                       Pl => base_1+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"я" ;
                       Pl => base_1+"ів"
                     } ;
              Loc => table {
                       Sg => base_1+"еві" ;
                       Pl => base_1+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"ем" ;
                         Pl => base_1+"ями"
                       }
            } ;
        Voc = table {
                Sg => base_1+"ю" ;
                Pl => base_1+"і"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN058"
  } ;

mkN059 : Str -> N ;
mkN059 base =
  case base of {
    base_1+"х" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"х" ;
                       Pl => base_1+"хи"
                     } ;
              Acc => table {
                       Sg => base_1+"х" ;
                       Pl => base_1+"хи"
                     } ;
              Dat => table {
                       Sg => base_1+"хові" ;
                       Pl => base_1+"хам"
                     } ;
              Gen => table {
                       Sg => base_1+"ху" ;
                       Pl => base_1+"хів"
                     } ;
              Loc => table {
                       Sg => base_1+"сі" ;
                       Pl => base_1+"хах"
                     } ;
              Instr => table {
                         Sg => base_1+"хом" ;
                         Pl => base_1+"хами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"ху" ;
                Pl => base_1+"хи"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN059"
  } ;

mkN060 : Str -> N ;
mkN060 base =
  case base of {
    base_1+"а" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"і"
                     } ;
              Dat => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"і" ;
                       Pl => base_1
                     } ;
              Loc => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ею" ;
                         Pl => base_1+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"е" ;
                Pl => base_1+"і"
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN060"
  } ;

mkN061 : Str -> N ;
mkN061 base =
  case base of {
    base_1+"ь" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ь" ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"ь" ;
                       Pl => base_1+"і"
                     } ;
              Dat => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ей"
                     } ;
              Loc => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"ю" ;
                         Pl => base_1+"ями"
                       }
            } ;
        Voc = table {
                Sg => base_1+"е" ;
                Pl => base_1+"і"
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN061"
  } ;

mkN062 : Str -> N ;
mkN062 base =
  case base of {
    base_1+"ха" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ха" ;
                       Pl => base_1+"хи"
                     } ;
              Acc => table {
                       Sg => base_1+"ху" ;
                       Pl => base_1+"хи"
                     } ;
              Dat => table {
                       Sg => base_1+"сі" ;
                       Pl => base_1+"хам"
                     } ;
              Gen => table {
                       Sg => base_1+"хи" ;
                       Pl => base_1+"х"
                     } ;
              Loc => table {
                       Sg => base_1+"сі" ;
                       Pl => base_1+"хах"
                     } ;
              Instr => table {
                         Sg => base_1+"хою" ;
                         Pl => base_1+"хами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"хо" ;
                Pl => base_1+"хи"
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN062"
  } ;

mkN063 : Str -> N ;
mkN063 base =
  case base of {
    base_1 => lin N
      { s = table {
              Nom => table {
                       Sg => base_1 ;
                       Pl => base_1+"и" --guessed
                     } ;
              Acc => table {
                       Sg => base_1 ; --guessed
                       Pl => base_1+"и" --guessed
                     } ;
              Dat => table {
                       Sg => base_1+"ові" ; --guessed
                       Pl => base_1+"ам" --guessed
                     } ;
              Gen => table {
                       Sg => base_1+"у" ; --guessed
                       Pl => base_1+"ів" --guessed
                     } ;
              Loc => table {
                       Sg => base_1+"і" ; --guessed
                       Pl => base_1+"ах" --guessed
                     } ;
              Instr => table {
                         Sg => base_1+"ом" ; --guessed
                         Pl => base_1+"ами" --guessed
                       }
            } ;
        Voc = table {
                Sg => base_1+"е" ; --guessed
                Pl => base_1+"и" --guessed
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN063"
  } ;

mkN064 : Str -> N ;
mkN064 base =
  case base of {
    base_1+base_2@?+"о" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+base_2+"о" ;
                       Pl => base_1+"е"+base_2+"а"
                     } ;
              Acc => table {
                       Sg => nonExist ;
                       Pl => nonExist
                     } ;
              Dat => table {
                       Sg => nonExist ;
                       Pl => nonExist
                     } ;
              Gen => table {
                       Sg => base_1+base_2+"а" ;
                       Pl => base_1+"е"+base_2
                     } ;
              Loc => table {
                       Sg => nonExist ;
                       Pl => nonExist
                     } ;
              Instr => table {
                         Sg => nonExist ;
                         Pl => nonExist
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN064"
  } ;

mkN065 : Str -> N ;
mkN065 base =
  case base of {
    base_1+"ь" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ь" ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"ь" ;
                       Pl => base_1+"і"
                     } ;
              Dat => table {
                       Sg => base_1+"еві" ;
                       Pl => base_1+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"ю" ;
                       Pl => base_1+"ів"
                     } ;
              Loc => table {
                       Sg => base_1+"ю" ;
                       Pl => base_1+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"ем" ;
                         Pl => base_1+"ями"
                       }
            } ;
        Voc = table {
                Sg => base_1+"ю" ;
                Pl => base_1+"і"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN065"
  } ;

mkN066 : Str -> N ;
mkN066 base =
  case base of {
    base_1+"й" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"й" ;
                       Pl => base_1+"ї"
                     } ;
              Acc => table {
                       Sg => base_1+"й" ;
                       Pl => base_1+"ї"
                     } ;
              Dat => table {
                       Sg => base_1+"ю" ;
                       Pl => base_1+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"я" ;
                       Pl => base_1+"їв"
                     } ;
              Loc => table {
                       Sg => base_1+"ю" ;
                       Pl => base_1+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"єм" ;
                         Pl => base_1+"ями"
                       }
            } ;
        Voc = table {
                Sg => base_1+"ю" ;
                Pl => base_1+"ї"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN066"
  } ;

mkN067 : Str -> N ;
mkN067 base =
  case base of {
    base_1 => lin N
      { s = table {
              Nom => table {
                       Sg => base_1 ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => base_1 ;
                       Pl => base_1+"і"
                     } ;
              Dat => table {
                       Sg => base_1+"еві" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"ів"
                     } ;
              Loc => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ем" ;
                         Pl => base_1+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"у" ;
                Pl => base_1+"і"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN067"
  } ;

mkN068 : Str -> N ;
mkN068 base =
  case base of {
    base_1+"а" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"а"
                     } ;
              Acc => table {
                       Sg => nonExist ;
                       Pl => base_1+"а"
                     } ;
              Dat => table {
                       Sg => nonExist ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1 ;
                       Pl => base_1
                     } ;
              Loc => table {
                       Sg => nonExist ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => nonExist ;
                         Pl => base_1+"ами"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => base_1+"а"
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN068"
  } ;

mkN069 : Str -> N ;
mkN069 base =
  case base of {
    base_1 => lin N
      { s = table {
              Nom => table {
                       Sg => base_1 ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => base_1 ;
                       Pl => base_1+"і"
                     } ;
              Dat => table {
                       Sg => base_1+"еві" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"ів"
                     } ;
              Loc => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ем" ;
                         Pl => base_1+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"е" ;
                Pl => base_1+"і"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN069"
  } ;

mkN070 : Str -> N ;
mkN070 base =
  case base of {
    base_1+base_2@?+"о" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+base_2+"о" ;
                       Pl => base_1+base_2+"а"
                     } ;
              Acc => table {
                       Sg => base_1+base_2+"о" ;
                       Pl => base_1+base_2+"а"
                     } ;
              Dat => table {
                       Sg => base_1+base_2+"у" ;
                       Pl => base_1+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+base_2+"а" ;
                       Pl => base_1+"е"+base_2
                     } ;
              Loc => table {
                       Sg => base_1+base_2+"і" ;
                       Pl => base_1+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+base_2+"ом" ;
                         Pl => base_1+base_2+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+base_2+"о" ;
                Pl => base_1+base_2+"а"
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN070"
  } ;

mkN071 : Str -> N ;
mkN071 base =
  case base of {
    base_1 => lin N
      { s = table {
              Nom => table {
                       Sg => base_1 ;
                       Pl => base_1+"ги"
                     } ;
              Acc => table {
                       Sg => base_1 ;
                       Pl => base_1+"ги"
                     } ;
              Dat => table {
                       Sg => base_1+"гові" ;
                       Pl => base_1+"гам"
                     } ;
              Gen => table {
                       Sg => base_1+"га" ;
                       Pl => base_1+"гів"
                     } ;
              Loc => table {
                       Sg => base_1+"гу" ;
                       Pl => base_1+"гах"
                     } ;
              Instr => table {
                         Sg => base_1+"гом" ;
                         Pl => base_1+"гами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"гу" ;
                Pl => base_1+"ги"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN071"
  } ;

mkN072 : Str -> N ;
mkN072 base =
  case base of {
    base_1+"я" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"я" ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"ю" ;
                       Pl => base_1+"і"
                     } ;
              Dat => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ь"
                     } ;
              Loc => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"ею" ;
                         Pl => base_1+"ями"
                       }
            } ;
        Voc = table {
                Sg => base_1+"е" ;
                Pl => base_1+"і"
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN072"
  } ;

mkN073 : Str -> N ;
mkN073 base =
  case base of {
    base_1+"ь"+base_2@?+"а" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ь"+base_2+"а" ;
                       Pl => base_1+"ь"+base_2+"и"
                     } ;
              Acc => table {
                       Sg => base_1+"ь"+base_2+"у" ;
                       Pl => base_1+"ь"+base_2+"и"
                     } ;
              Dat => table {
                       Sg => base_1+"ь"+base_2+"і" ;
                       Pl => base_1+"ь"+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"ь"+base_2+"и" ;
                       Pl => base_1+"е"+base_2
                     } ;
              Loc => table {
                       Sg => base_1+"ь"+base_2+"і" ;
                       Pl => base_1+"ь"+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ь"+base_2+"ою" ;
                         Pl => base_1+"ь"+base_2+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"ь"+base_2+"о" ;
                Pl => base_1+"ь"+base_2+"и"
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN073"
  } ;

mkN074 : Str -> N ;
mkN074 base =
  case base of {
    base_1+"к" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"к" ;
                       Pl => base_1+"ки"
                     } ;
              Acc => table {
                       Sg => base_1+"к" ;
                       Pl => base_1+"ки"
                     } ;
              Dat => table {
                       Sg => base_1+"кові" ;
                       Pl => base_1+"кам"
                     } ;
              Gen => table {
                       Sg => base_1+"ка" ;
                       Pl => base_1+"ків"
                     } ;
              Loc => table {
                       Sg => base_1+"ці" ;
                       Pl => base_1+"ках"
                     } ;
              Instr => table {
                         Sg => base_1+"ком" ;
                         Pl => base_1+"ками"
                       }
            } ;
        Voc = table {
                Sg => base_1+"ку" ;
                Pl => base_1+"ки"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN074"
  } ;

mkN075 : Str -> N ;
mkN075 base =
  case base of {
    base_1+"к" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"к" ;
                       Pl => base_1+"ки"
                     } ;
              Acc => table {
                       Sg => base_1+"к" ;
                       Pl => base_1+"ки"
                     } ;
              Dat => table {
                       Sg => base_1+"кові" ;
                       Pl => base_1+"кам"
                     } ;
              Gen => table {
                       Sg => base_1+"ку" ;
                       Pl => base_1+"ків"
                     } ;
              Loc => table {
                       Sg => base_1+"ці" ;
                       Pl => base_1+"ках"
                     } ;
              Instr => table {
                         Sg => base_1+"ком" ;
                         Pl => base_1+"ками"
                       }
            } ;
        Voc = table {
                Sg => base_1+"ку" ;
                Pl => base_1+"ки"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN075"
  } ;

mkN076 : Str -> N ;
mkN076 base =
  case base of {
    base_1+base_2@?+"ня" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+base_2+"ня" ;
                       Pl => base_1+base_2+"ні"
                     } ;
              Acc => table {
                       Sg => base_1+base_2+"ню" ;
                       Pl => base_1+base_2+"ні"
                     } ;
              Dat => table {
                       Sg => base_1+base_2+"ні" ;
                       Pl => base_1+base_2+"ням"
                     } ;
              Gen => table {
                       Sg => base_1+base_2+"ні" ;
                       Pl => base_1+"ен"+base_2
                     } ;
              Loc => table {
                       Sg => base_1+base_2+"ні" ;
                       Pl => base_1+base_2+"нях"
                     } ;
              Instr => table {
                         Sg => base_1+base_2+"нею" ;
                         Pl => base_1+base_2+"нями"
                       }
            } ;
        Voc = table {
                Sg => base_1+base_2+"не" ;
                Pl => base_1+base_2+"ні"
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN076"
  } ;

mkN077 : Str -> N ;
mkN077 base =
  case base of {
    base_1+base_2@?+"я" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+base_2+"я" ;
                       Pl => base_1+base_2+"і"
                     } ;
              Acc => table {
                       Sg => base_1+base_2+"ю" ;
                       Pl => base_1+base_2+"і"
                     } ;
              Dat => table {
                       Sg => base_1+base_2+"і" ;
                       Pl => base_1+base_2+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+base_2+"і" ;
                       Pl => base_1+"о"+base_2+"ь"
                     } ;
              Loc => table {
                       Sg => base_1+base_2+"і" ;
                       Pl => base_1+base_2+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+base_2+"ею" ;
                         Pl => base_1+base_2+"ями"
                       }
            } ;
        Voc = table {
                Sg => base_1+base_2+"е" ;
                Pl => base_1+base_2+"і"
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN077"
  } ;

mkN078 : Str -> N ;
mkN078 base =
  case base of {
    base_1+"о" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"о" ;
                       Pl => base_1+"а"
                     } ;
              Acc => table {
                       Sg => base_1+"о" ;
                       Pl => base_1+"а"
                     } ;
              Dat => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"а" ;
                       Pl => base_1
                     } ;
              Loc => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ом" ;
                         Pl => base_1+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"о" ;
                Pl => base_1+"а"
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN078"
  } ;

mkN079 : Str -> N ;
mkN079 base =
  case base of {
    base_1+"е"+base_2@?+"ь" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"е"+base_2+"ь" ;
                       Pl => base_1+base_2+"і"
                     } ;
              Acc => table {
                       Sg => base_1+base_2+"я" ;
                       Pl => base_1+base_2+"ів"
                     } ;
              Dat => table {
                       Sg => base_1+base_2+"еві" ;
                       Pl => base_1+base_2+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+base_2+"я" ;
                       Pl => base_1+base_2+"ів"
                     } ;
              Loc => table {
                       Sg => base_1+base_2+"еві" ;
                       Pl => base_1+base_2+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+base_2+"ем" ;
                         Pl => base_1+base_2+"ями"
                       }
            } ;
        Voc = table {
                Sg => base_1+base_2+"ю" ;
                Pl => base_1+base_2+"і"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN079"
  } ;

mkN080 : Str -> N ;
mkN080 base =
  case base of {
    base_1+"а" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"и"
                     } ;
              Acc => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"и"
                     } ;
              Dat => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"и" ;
                       Pl => base_1+"іх"
                     } ;
              Loc => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ою" ;
                         Pl => base_1+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"о" ;
                Pl => base_1+"и"
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN080"
  } ;

mkN081 : Str -> N ;
mkN081 base =
  case base of {
    base_1 => lin N
      { s = table {
              Nom => table {
                       Sg => base_1 ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"ів"
                     } ;
              Dat => table {
                       Sg => base_1+"еві" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"ів"
                     } ;
              Loc => table {
                       Sg => base_1+"еві" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ем" ;
                         Pl => base_1+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"е" ;
                Pl => base_1+"і"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN081"
  } ;

mkN082 : Str -> N ;
mkN082 base =
  case base of {
    base_1 => lin N
      { s = table {
              Nom => table {
                       Sg => base_1 ;
                       Pl => base_1+"и"
                     } ;
              Acc => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"и"
                     } ;
              Dat => table {
                       Sg => base_1+"ові" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"ів"
                     } ;
              Loc => table {
                       Sg => base_1+"ові" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ом" ;
                         Pl => base_1+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"у" ;
                Pl => base_1+"и"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN082"
  } ;

mkN083 : Str -> N ;
mkN083 base =
  case base of {
    base_1+"я" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"я" ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"ю" ;
                       Pl => base_1+"ь"
                     } ;
              Dat => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ь"
                     } ;
              Loc => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"ею" ;
                         Pl => base_1+"ями"
                       }
            } ;
        Voc = table {
                Sg => base_1+"е" ;
                Pl => base_1+"і"
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN083"
  } ;

mkN084 : Str -> N ;
mkN084 base =
  case base of {
    base_1+"о" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"о" ;
                       Pl => base_1+"а"
                     } ;
              Acc => table {
                       Sg => base_1+"о" ;
                       Pl => base_1+"а"
                     } ;
              Dat => table {
                       Sg => base_1+"ові" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"а" ;
                       Pl => base_1
                     } ;
              Loc => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ом" ;
                         Pl => base_1+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"о" ;
                Pl => base_1+"а"
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN084"
  } ;

mkN085 : Str -> N ;
mkN085 base =
  case base of {
    base_1 => lin N
      { s = table {
              Nom => table {
                       Sg => base_1 ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"ів"
                     } ;
              Dat => table {
                       Sg => base_1+"еві" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"ів"
                     } ;
              Loc => table {
                       Sg => base_1+"еві" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ем" ;
                         Pl => base_1+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"у" ;
                Pl => base_1+"і"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN085"
  } ;

mkN086 : Str -> N ;
mkN086 base =
  case base of {
    base_1+"я" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"я" ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"ю" ;
                       Pl => base_1+"ь"
                     } ;
              Dat => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ь"
                     } ;
              Loc => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"ею" ;
                         Pl => base_1+"ями"
                       }
            } ;
        Voc = table {
                Sg => base_1+"ю" ;
                Pl => base_1+"і"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN086"
  } ;

mkN087 : Str -> N ;
mkN087 base =
  case base of {
    base_1+"а" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"у" ;
                       Pl => base_1
                     } ;
              Dat => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"і" ;
                       Pl => base_1
                     } ;
              Loc => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ею" ;
                         Pl => base_1+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"е" ;
                Pl => base_1+"і"
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN087"
  } ;

mkN088 : Str -> N ;
mkN088 base =
  case base of {
    base_1+"о"+base_2@? => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"о"+base_2 ;
                       Pl => base_1+base_2+"и"
                     } ;
              Acc => table {
                       Sg => base_1+base_2+"а" ;
                       Pl => base_1+base_2+"ів"
                     } ;
              Dat => table {
                       Sg => base_1+base_2+"ові" ;
                       Pl => base_1+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+base_2+"а" ;
                       Pl => base_1+base_2+"ів"
                     } ;
              Loc => table {
                       Sg => base_1+base_2+"ові" ;
                       Pl => base_1+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+base_2+"ом" ;
                         Pl => base_1+base_2+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+base_2+"е" ;
                Pl => base_1+base_2+"и"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN088"
  } ;

mkN089 : Str -> N ;
mkN089 base =
  case base of {
    base_1 => lin N
      { s = table {
              Nom => table {
                       Sg => base_1 ;
                       Pl => base_1+"и"
                     } ;
              Acc => table {
                       Sg => base_1 ;
                       Pl => base_1+"и"
                     } ;
              Dat => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"ів"
                     } ;
              Loc => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ом" ;
                         Pl => base_1+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"е" ;
                Pl => base_1+"и"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN089"
  } ;

mkN090 : Str -> N ;
mkN090 base =
  case base of {
    base_1+"е" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"е" ;
                       Pl => nonExist
                     } ;
              Acc => table {
                       Sg => base_1+"е" ;
                       Pl => nonExist
                     } ;
              Dat => table {
                       Sg => base_1+"ю" ;
                       Pl => nonExist
                     } ;
              Gen => table {
                       Sg => base_1+"я" ;
                       Pl => nonExist
                     } ;
              Loc => table {
                       Sg => base_1+"і" ;
                       Pl => nonExist
                     } ;
              Instr => table {
                         Sg => base_1+"ем" ;
                         Pl => nonExist
                       }
            } ;
        Voc = table {
                Sg => base_1+"е" ;
                Pl => nonExist
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN090"
  } ;

mkN091 : Str -> N ;
mkN091 base =
  case base of {
    base_1+"о" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"о" ;
                       Pl => base_1+"а"
                     } ;
              Acc => table {
                       Sg => base_1+"о" ;
                       Pl => base_1+"а"
                     } ;
              Dat => table {
                       Sg => base_1+"ові" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"а" ;
                       Pl => base_1
                     } ;
              Loc => table {
                       Sg => base_1+"ові" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ом" ;
                         Pl => base_1+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"о" ;
                Pl => base_1+"а"
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN091"
  } ;

mkN092 : Str -> N ;
mkN092 base =
  case base of {
    base_1+"і"+base_2@? => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"і"+base_2 ;
                       Pl => base_1+"о"+base_2+"и"
                     } ;
              Acc => table {
                       Sg => base_1+"і"+base_2 ;
                       Pl => base_1+"о"+base_2+"и"
                     } ;
              Dat => table {
                       Sg => base_1+"о"+base_2+"ові" ;
                       Pl => base_1+"о"+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"о"+base_2+"а" ;
                       Pl => base_1+"о"+base_2+"ів"
                     } ;
              Loc => table {
                       Sg => base_1+"о"+base_2+"і" ;
                       Pl => base_1+"о"+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"о"+base_2+"ом" ;
                         Pl => base_1+"о"+base_2+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"о"+base_2+"е" ;
                Pl => base_1+"о"+base_2+"и"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN092"
  } ;

mkN093 : Str -> N ;
mkN093 base =
  case base of {
    base_1+"ь" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ь" ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"ь" ;
                       Pl => base_1+"і"
                     } ;
              Dat => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ей"
                     } ;
              Loc => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"лю" ;
                         Pl => base_1+"ями"
                       }
            } ;
        Voc = table {
                Sg => base_1+"е" ;
                Pl => base_1+"і"
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN093"
  } ;

mkN094 : Str -> N ;
mkN094 base =
  case base of {
    base_1+"г" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"г" ;
                       Pl => base_1+"ги"
                     } ;
              Acc => table {
                       Sg => base_1+"г" ;
                       Pl => base_1+"ги"
                     } ;
              Dat => table {
                       Sg => base_1+"гові" ;
                       Pl => base_1+"гам"
                     } ;
              Gen => table {
                       Sg => base_1+"гу" ;
                       Pl => base_1+"гів"
                     } ;
              Loc => table {
                       Sg => base_1+"зі" ;
                       Pl => base_1+"гах"
                     } ;
              Instr => table {
                         Sg => base_1+"гом" ;
                         Pl => base_1+"гами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"гу" ;
                Pl => base_1+"ги"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN094"
  } ;

mkN095 : Str -> N ;
mkN095 base =
  case base of {
    base_1 => lin N
      { s = table {
              Nom => table {
                       Sg => base_1 ;
                       Pl => base_1+"а"
                     } ;
              Acc => table {
                       Sg => base_1 ;
                       Pl => base_1+"а"
                     } ;
              Dat => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"ів"
                     } ;
              Loc => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ом" ;
                         Pl => base_1+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"е" ;
                Pl => base_1+"а"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN095"
  } ;

mkN096 : Str -> N ;
mkN096 base =
  case base of {
    base_1+"ей" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ей" ;
                       Pl => base_1+"'ї"
                     } ;
              Acc => table {
                       Sg => base_1+"'я" ;
                       Pl => base_1+"'ї"
                     } ;
              Dat => table {
                       Sg => base_1+"'ю" ;
                       Pl => base_1+"'ям"
                     } ;
              Gen => table {
                       Sg => base_1+"'я" ;
                       Pl => base_1+"'їв"
                     } ;
              Loc => table {
                       Sg => base_1+"'ю" ;
                       Pl => base_1+"'ях"
                     } ;
              Instr => table {
                         Sg => base_1+"'єм" ;
                         Pl => base_1+"'ями"
                       }
            } ;
        Voc = table {
                Sg => base_1+"'ю" ;
                Pl => base_1+"'ї"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN096"
  } ;

mkN097 : Str -> N ;
mkN097 base =
  case base of {
    base_1+"я" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"я" ;
                       Pl => base_1+"ї"
                     } ;
              Acc => table {
                       Sg => base_1+"ю" ;
                       Pl => base_1+"ї"
                     } ;
              Dat => table {
                       Sg => base_1+"ї" ;
                       Pl => base_1+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"ї" ;
                       Pl => base_1+"й"
                     } ;
              Loc => table {
                       Sg => base_1+"ї" ;
                       Pl => base_1+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"єю" ;
                         Pl => base_1+"ями"
                       }
            } ;
        Voc = table {
                Sg => base_1+"є" ;
                Pl => base_1+"ї"
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN097"
  } ;

mkN098 : Str -> N ;
mkN098 base =
  case base of {
    base_1+"оха" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"оха" ;
                       Pl => base_1+"охи"
                     } ;
              Acc => table {
                       Sg => base_1+"оху" ;
                       Pl => base_1+"охи"
                     } ;
              Dat => table {
                       Sg => base_1+"осі" ;
                       Pl => base_1+"охам"
                     } ;
              Gen => table {
                       Sg => base_1+"охи" ;
                       Pl => base_1+"іх"
                     } ;
              Loc => table {
                       Sg => base_1+"осі" ;
                       Pl => base_1+"охах"
                     } ;
              Instr => table {
                         Sg => base_1+"охою" ;
                         Pl => base_1+"охами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"охо" ;
                Pl => base_1+"охи"
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN098"
  } ;

mkN099 : Str -> N ;
mkN099 base =
  case base of {
    base_1 => lin N
      { s = table {
              Nom => table {
                       Sg => base_1 ;
                       Pl => base_1+"и"
                     } ;
              Acc => table {
                       Sg => base_1 ;
                       Pl => base_1+"и"
                     } ;
              Dat => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"ів"
                     } ;
              Loc => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ом" ;
                         Pl => base_1+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"е" ;
                Pl => base_1+"и"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN099"
  } ;

mkN100 : Str -> N ;
mkN100 base =
  case base of {
    base_1+"о"+base_2@? => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"о"+base_2 ;
                       Pl => base_1+base_2+"и"
                     } ;
              Acc => table {
                       Sg => base_1+"о"+base_2 ;
                       Pl => base_1+base_2+"и"
                     } ;
              Dat => table {
                       Sg => base_1+base_2+"ові" ;
                       Pl => base_1+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+base_2+"у" ;
                       Pl => base_1+base_2+"ів"
                     } ;
              Loc => table {
                       Sg => base_1+base_2+"і" ;
                       Pl => base_1+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+base_2+"ом" ;
                         Pl => base_1+base_2+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+base_2+"у" ;
                Pl => base_1+base_2+"и"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN100"
  } ;

mkN101 : Str -> N ;
mkN101 base =
  case base of {
    base_1+"га" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"га" ;
                       Pl => base_1+"ги"
                     } ;
              Acc => table {
                       Sg => base_1+"гу" ;
                       Pl => base_1+"г"
                     } ;
              Dat => table {
                       Sg => base_1+"зі" ;
                       Pl => base_1+"гам"
                     } ;
              Gen => table {
                       Sg => base_1+"ги" ;
                       Pl => base_1+"г"
                     } ;
              Loc => table {
                       Sg => base_1+"зі" ;
                       Pl => base_1+"гах"
                     } ;
              Instr => table {
                         Sg => base_1+"гою" ;
                         Pl => base_1+"гами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"го" ;
                Pl => base_1+"ги"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN101"
  } ;

mkN102 : Str -> N ;
mkN102 base =
  case base of {
    base_1+"г" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"г" ;
                       Pl => base_1+"ги"
                     } ;
              Acc => table {
                       Sg => base_1+"г" ;
                       Pl => base_1+"ги"
                     } ;
              Dat => table {
                       Sg => base_1+"гові" ;
                       Pl => base_1+"гам"
                     } ;
              Gen => table {
                       Sg => base_1+"гу" ;
                       Pl => base_1+"гів"
                     } ;
              Loc => table {
                       Sg => base_1+"зі" ;
                       Pl => base_1+"гах"
                     } ;
              Instr => table {
                         Sg => base_1+"гом" ;
                         Pl => base_1+"гами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"же" ;
                Pl => base_1+"ги"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN102"
  } ;

mkN103 : Str -> N ;
mkN103 base =
  case base of {
    base_1+"і"+base_2@("ст"|?) => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"і"+base_2 ;
                       Pl => base_1+"о"+base_2+"и"
                     } ;
              Acc => table {
                       Sg => base_1+"і"+base_2 ;
                       Pl => base_1+"о"+base_2+"и"
                     } ;
              Dat => table {
                       Sg => base_1+"о"+base_2+"ові" ;
                       Pl => base_1+"о"+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"о"+base_2+"у" ;
                       Pl => base_1+"о"+base_2+"ів"
                     } ;
              Loc => table {
                       Sg => base_1+"о"+base_2+"і" ;
                       Pl => base_1+"о"+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"о"+base_2+"ом" ;
                         Pl => base_1+"о"+base_2+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"о"+base_2+"е" ;
                Pl => base_1+"о"+base_2+"и"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN103"
  } ;

mkN104 : Str -> N ;
mkN104 base =
  case base of {
    base_1+"ь" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ь" ;
                       Pl => base_1+"и"
                     } ;
              Acc => table {
                       Sg => base_1+"я" ;
                       Pl => base_1+"и"
                     } ;
              Dat => table {
                       Sg => base_1+"еві" ;
                       Pl => base_1+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"я" ;
                       Pl => base_1+"ей"
                     } ;
              Loc => table {
                       Sg => base_1+"еві" ;
                       Pl => base_1+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"ем" ;
                         Pl => base_1+"ьми"
                       }
            } ;
        Voc = table {
                Sg => base_1+"ю" ;
                Pl => base_1+"и"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN104"
  } ;

mkN105 : Str -> N ;
mkN105 base =
  case base of {
    base_1+"це" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"це" ;
                       Pl => base_1+"ця"
                     } ;
              Acc => table {
                       Sg => base_1+"це" ;
                       Pl => base_1+"ця"
                     } ;
              Dat => table {
                       Sg => base_1+"цю" ;
                       Pl => base_1+"цям"
                     } ;
              Gen => table {
                       Sg => base_1+"ця" ;
                       Pl => base_1+"ець"
                     } ;
              Loc => table {
                       Sg => base_1+"цю" ;
                       Pl => base_1+"цях"
                     } ;
              Instr => table {
                         Sg => base_1+"цем" ;
                         Pl => base_1+"цями"
                       }
            } ;
        Voc = table {
                Sg => base_1+"че" ;
                Pl => base_1+"ця"
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN105"
  } ;

mkN106 : Str -> N ;
mkN106 base =
  case base of {
    base_1+"ь" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ь" ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"ь" ;
                       Pl => base_1+"і"
                     } ;
              Dat => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ей"
                     } ;
              Loc => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"дю" ;
                         Pl => base_1+"ями"
                       }
            } ;
        Voc = table {
                Sg => base_1+"е" ;
                Pl => base_1+"і"
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN106"
  } ;

mkN107 : Str -> N ;
mkN107 base =
  case base of {
    "о"+base_1+"е"+base_2@? => lin N
      { s = table {
              Nom => table {
                       Sg => "о"+base_1+"е"+base_2 ;
                       Pl => "ві"+base_1+base_2+"а"
                     } ;
              Acc => table {
                       Sg => "о"+base_1+"е"+base_2 ;
                       Pl => "ві"+base_1+base_2+"а"
                     } ;
              Dat => table {
                       Sg => "ві"+base_1+base_2+"ові" ;
                       Pl => "ві"+base_1+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => "ві"+base_1+base_2+"а" ;
                       Pl => "ві"+base_1+base_2+"ів"
                     } ;
              Loc => table {
                       Sg => "ві"+base_1+base_2+"і" ;
                       Pl => "ві"+base_1+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => "ві"+base_1+base_2+"ом" ;
                         Pl => "ві"+base_1+base_2+"ами"
                       }
            } ;
        Voc = table {
                Sg => "ві"+base_1+base_2+"е" ;
                Pl => "ві"+base_1+base_2+"а"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN107"
  } ;

mkN108 : Str -> N ;
mkN108 base =
  case base of {
    base_1+"га" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"га" ;
                       Pl => base_1+"ги"
                     } ;
              Acc => table {
                       Sg => base_1+"гу" ;
                       Pl => base_1+"ги"
                     } ;
              Dat => table {
                       Sg => base_1+"зі" ;
                       Pl => base_1+"гам"
                     } ;
              Gen => table {
                       Sg => base_1+"ги" ;
                       Pl => base_1+"г"
                     } ;
              Loc => table {
                       Sg => base_1+"зі" ;
                       Pl => base_1+"гах"
                     } ;
              Instr => table {
                         Sg => base_1+"гою" ;
                         Pl => base_1+"гами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"го" ;
                Pl => base_1+"ги"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN108"
  } ;

mkN109 : Str -> N ;
mkN109 base =
  case base of {
    base_1+"ь" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ь" ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"ь" ;
                       Pl => base_1+"ей"
                     } ;
              Dat => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ей"
                     } ;
              Loc => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"дю" ;
                         Pl => base_1+"ями"
                       }
            } ;
        Voc = table {
                Sg => base_1+"е" ;
                Pl => base_1+"і"
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN109"
  } ;

mkN110 : Str -> N ;
mkN110 base =
  case base of {
    base_1+"о"+base_2@?+"а" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"о"+base_2+"а" ;
                       Pl => base_1+"о"+base_2+"а"
                     } ;
              Acc => table {
                       Sg => nonExist ;
                       Pl => base_1+"о"+base_2+"а"
                     } ;
              Dat => table {
                       Sg => nonExist ;
                       Pl => base_1+"о"+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"і"+base_2 ;
                       Pl => base_1+"і"+base_2
                     } ;
              Loc => table {
                       Sg => nonExist ;
                       Pl => base_1+"о"+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => nonExist ;
                         Pl => base_1+"о"+base_2+"ами"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => base_1+"о"+base_2+"а"
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN110"
  } ;

mkN111 : Str -> N ;
mkN111 base =
  case base of {
    base_1 => lin N
      { s = table {
              Nom => table {
                       Sg => base_1 ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => base_1 ;
                       Pl => base_1+"і"
                     } ;
              Dat => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ей"
                     } ;
              Loc => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"чю" ;
                         Pl => base_1+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"е" ;
                Pl => base_1+"і"
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN111"
  } ;

mkN112 : Str -> N ;
mkN112 base =
  case base of {
    base_1+"і"+base_2@? => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"і"+base_2 ;
                       Pl => base_1+"о"+base_2+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"і"+base_2 ;
                       Pl => base_1+"о"+base_2+"і"
                     } ;
              Dat => table {
                       Sg => base_1+"о"+base_2+"і" ;
                       Pl => base_1+"о"+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"о"+base_2+"і" ;
                       Pl => base_1+"о"+base_2+"ей"
                     } ;
              Loc => table {
                       Sg => base_1+"о"+base_2+"і" ;
                       Pl => base_1+"о"+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"і"+base_2+"чю" ;
                         Pl => base_1+"о"+base_2+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"о"+base_2+"е" ;
                Pl => base_1+"о"+base_2+"і"
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN112"
  } ;

mkN113 : Str -> N ;
mkN113 base =
  case base of {
    base_1+"е"+base_2@?+"о" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"е"+base_2+"о" ;
                       Pl => base_1+"е"+base_2+"а"
                     } ;
              Acc => table {
                       Sg => base_1+"е"+base_2+"о" ;
                       Pl => base_1+"е"+base_2+"а"
                     } ;
              Dat => table {
                       Sg => base_1+"е"+base_2+"у" ;
                       Pl => base_1+"е"+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"е"+base_2+"а" ;
                       Pl => base_1+"і"+base_2
                     } ;
              Loc => table {
                       Sg => base_1+"е"+base_2+"у" ;
                       Pl => base_1+"е"+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"е"+base_2+"ом" ;
                         Pl => base_1+"е"+base_2+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"е"+base_2+"о" ;
                Pl => base_1+"е"+base_2+"а"
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN113"
  } ;

mkN114 : Str -> N ;
mkN114 base =
  case base of {
    base_1+"к" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"к" ;
                       Pl => base_1+"ки"
                     } ;
              Acc => table {
                       Sg => base_1+"к" ;
                       Pl => base_1+"ки"
                     } ;
              Dat => table {
                       Sg => base_1+"кові" ;
                       Pl => base_1+"кам"
                     } ;
              Gen => table {
                       Sg => base_1+"ка" ;
                       Pl => base_1+"ків"
                     } ;
              Loc => table {
                       Sg => base_1+"ку" ;
                       Pl => base_1+"ках"
                     } ;
              Instr => table {
                         Sg => base_1+"ком" ;
                         Pl => base_1+"ками"
                       }
            } ;
        Voc = table {
                Sg => base_1+"че" ;
                Pl => base_1+"ки"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN114"
  } ;

mkN115 : Str -> N ;
mkN115 base =
  case base of {
    base_1+"'я" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"'я" ;
                       Pl => base_1+"ена"
                     } ;
              Acc => table {
                       Sg => base_1+"'я" ;
                       Pl => base_1+"ена"
                     } ;
              Dat => table {
                       Sg => base_1+"ені" ;
                       Pl => base_1+"енам"
                     } ;
              Gen => table {
                       Sg => base_1+"ені" ;
                       Pl => base_1+"ен"
                     } ;
              Loc => table {
                       Sg => base_1+"ені" ;
                       Pl => base_1+"енах"
                     } ;
              Instr => table {
                         Sg => base_1+"енем" ;
                         Pl => base_1+"енами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"'я" ;
                Pl => base_1+"ена"
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN115"
  } ;

mkN116 : Str -> N ;
mkN116 base =
  case base of {
    base_1+"е"+base_2@?+"ь" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"е"+base_2+"ь" ;
                       Pl => base_1+base_2+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"е"+base_2+"ь" ;
                       Pl => base_1+base_2+"і"
                     } ;
              Dat => table {
                       Sg => base_1+base_2+"еві" ;
                       Pl => base_1+base_2+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+base_2+"ю" ;
                       Pl => base_1+base_2+"ів"
                     } ;
              Loc => table {
                       Sg => base_1+base_2+"ю" ;
                       Pl => base_1+base_2+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+base_2+"ем" ;
                         Pl => base_1+base_2+"ями"
                       }
            } ;
        Voc = table {
                Sg => base_1+base_2+"ю" ;
                Pl => base_1+base_2+"і"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN116"
  } ;

mkN117 : Str -> N ;
mkN117 base =
  case base of {
    base_1 => lin N
      { s = table {
              Nom => table {
                       Sg => base_1 ;
                       Pl => base_1+"и" --guessed
                     } ;
              Acc => table {
                       Sg => base_1 ;
                       Pl => nonExist
                     } ;
              Dat => table {
                       Sg => base_1+"у" ;
                       Pl => nonExist
                     } ;
              Gen => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"ів" --guessed
                     } ;
              Loc => table {
                       Sg => base_1+"у" ;
                       Pl => nonExist
                     } ;
              Instr => table {
                         Sg => base_1+"ом" ;
                         Pl => nonExist
                       }
            } ;
        Voc = table {
                Sg => base_1+"у" ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN117"
  } ;

mkN118 : Str -> N ;
mkN118 base =
  case base of {
    base_1+"о"+base_2@?+"а" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"о"+base_2+"а" ;
                       Pl => base_1+"о"+base_2+"и"
                     } ;
              Acc => table {
                       Sg => base_1+"о"+base_2+"у" ;
                       Pl => base_1+"і"+base_2
                     } ;
              Dat => table {
                       Sg => base_1+"о"+base_2+"і" ;
                       Pl => base_1+"о"+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"о"+base_2+"и" ;
                       Pl => base_1+"і"+base_2
                     } ;
              Loc => table {
                       Sg => base_1+"о"+base_2+"і" ;
                       Pl => base_1+"о"+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"о"+base_2+"ою" ;
                         Pl => base_1+"о"+base_2+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"о"+base_2+"о" ;
                Pl => base_1+"о"+base_2+"и"
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN118"
  } ;

mkN119 : Str -> N ;
mkN119 base =
  case base of {
    base_1+base_2@?+"о" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+base_2+"о" ;
                       Pl => base_1+base_2+"а"
                     } ;
              Acc => table {
                       Sg => base_1+base_2+"о" ;
                       Pl => base_1+base_2+"а"
                     } ;
              Dat => table {
                       Sg => base_1+base_2+"у" ;
                       Pl => base_1+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+base_2+"а" ;
                       Pl => base_1+"о"+base_2
                     } ;
              Loc => table {
                       Sg => base_1+base_2+"і" ;
                       Pl => base_1+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+base_2+"ом" ;
                         Pl => base_1+base_2+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+base_2+"о" ;
                Pl => base_1+base_2+"а"
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN119"
  } ;

mkN120 : Str -> N ;
mkN120 base =
  case base of {
    base_1+"я" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"я" ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"ю" ;
                       Pl => base_1+"і"
                     } ;
              Dat => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ей"
                     } ;
              Loc => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"ею" ;
                         Pl => base_1+"ями"
                       }
            } ;
        Voc = table {
                Sg => base_1+"е" ;
                Pl => base_1+"і"
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN120"
  } ;

mkN121 : Str -> N ;
mkN121 base =
  case base of {
    base_1 => lin N
      { s = table {
              Nom => table {
                       Sg => base_1 ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => base_1 ;
                       Pl => base_1+"і"
                     } ;
              Dat => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ей"
                     } ;
              Loc => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"шю" ;
                         Pl => base_1+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"е" ;
                Pl => base_1+"і"
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN121"
  } ;

mkN122 : Str -> N ;
mkN122 base =
  case base of {
    base_1+"е"+base_2@?+"а" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"е"+base_2+"а" ;
                       Pl => base_1+"е"+base_2+"и"
                     } ;
              Acc => table {
                       Sg => base_1+"е"+base_2+"у" ;
                       Pl => base_1+"е"+base_2+"и"
                     } ;
              Dat => table {
                       Sg => base_1+"е"+base_2+"і" ;
                       Pl => base_1+"е"+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"е"+base_2+"и" ;
                       Pl => base_1+"і"+base_2
                     } ;
              Loc => table {
                       Sg => base_1+"е"+base_2+"і" ;
                       Pl => base_1+"е"+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"е"+base_2+"ою" ;
                         Pl => base_1+"е"+base_2+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"е"+base_2+"о" ;
                Pl => base_1+"е"+base_2+"и"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN122"
  } ;

mkN123 : Str -> N ;
mkN123 base =
  case base of {
    base_1+"е"+base_2@?+"ь" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"е"+base_2+"ь" ;
                       Pl => base_1+base_2+"і"
                     } ;
              Acc => table {
                       Sg => base_1+base_2+"я" ;
                       Pl => base_1+base_2+"і"
                     } ;
              Dat => table {
                       Sg => base_1+base_2+"еві" ;
                       Pl => base_1+base_2+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+base_2+"я" ;
                       Pl => base_1+base_2+"ів"
                     } ;
              Loc => table {
                       Sg => base_1+base_2+"еві" ;
                       Pl => base_1+base_2+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+base_2+"ем" ;
                         Pl => base_1+base_2+"ями"
                       }
            } ;
        Voc = table {
                Sg => base_1+base_2+"ю" ;
                Pl => base_1+base_2+"і"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN123"
  } ;

mkN124 : Str -> N ;
mkN124 base =
  case base of {
    base_1+"ъ" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ъ" ;
                       Pl => base_1+"и"
                     } ;
              Acc => table {
                       Sg => nonExist ;
                       Pl => nonExist
                     } ;
              Dat => table {
                       Sg => nonExist ;
                       Pl => nonExist
                     } ;
              Gen => table {
                       Sg => base_1+"а" ;
                       Pl => nonExist
                     } ;
              Loc => table {
                       Sg => nonExist ;
                       Pl => nonExist
                     } ;
              Instr => table {
                         Sg => nonExist ;
                         Pl => nonExist
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN124"
  } ;

mkN125 : Str -> N ;
mkN125 base =
  case base of {
    base_1+"о" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"о" ;
                       Pl => base_1+"еса"
                     } ;
              Acc => table {
                       Sg => base_1+"о" ;
                       Pl => base_1+"еса"
                     } ;
              Dat => table {
                       Sg => base_1+"ові" ;
                       Pl => base_1+"есам"
                     } ;
              Gen => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"ес"
                     } ;
              Loc => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"есах"
                     } ;
              Instr => table {
                         Sg => base_1+"ом" ;
                         Pl => base_1+"есами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"о" ;
                Pl => base_1+"еса"
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN125"
  } ;

mkN126 : Str -> N ;
mkN126 base =
  case base of {
    base_1+base_2@?+"а" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+base_2+"а" ;
                       Pl => base_1+base_2+"и"
                     } ;
              Acc => table {
                       Sg => base_1+base_2+"у" ;
                       Pl => base_1+"е"+base_2
                     } ;
              Dat => table {
                       Sg => base_1+base_2+"і" ;
                       Pl => base_1+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+base_2+"и" ;
                       Pl => base_1+"е"+base_2
                     } ;
              Loc => table {
                       Sg => base_1+base_2+"і" ;
                       Pl => base_1+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+base_2+"ою" ;
                         Pl => base_1+base_2+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+base_2+"о" ;
                Pl => base_1+base_2+"и"
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN126"
  } ;

mkN127 : Str -> N ;
mkN127 base =
  case base of {
    base_1+"а" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"и"
                     } ;
              Acc => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"и"
                     } ;
              Dat => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"и" ;
                       Pl => base_1
                     } ;
              Loc => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ою" ;
                         Pl => base_1+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"о" ;
                Pl => base_1+"и"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN127"
  } ;

mkN128 : Str -> N ;
mkN128 base =
  case base of {
    base_1+"о"+base_2@?+"о" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"о"+base_2+"о" ;
                       Pl => base_1+"о"+base_2+"а"
                     } ;
              Acc => table {
                       Sg => base_1+"о"+base_2+"о" ;
                       Pl => base_1+"о"+base_2+"а"
                     } ;
              Dat => table {
                       Sg => base_1+"о"+base_2+"у" ;
                       Pl => base_1+"о"+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"о"+base_2+"а" ;
                       Pl => base_1+"і"+base_2
                     } ;
              Loc => table {
                       Sg => base_1+"о"+base_2+"у" ;
                       Pl => base_1+"о"+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"о"+base_2+"ом" ;
                         Pl => base_1+"о"+base_2+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"о"+base_2+"о" ;
                Pl => base_1+"о"+base_2+"а"
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN128"
  } ;

mkN129 : Str -> N ;
mkN129 base =
  case base of {
    base_1+"це" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"це" ;
                       Pl => base_1+"ця"
                     } ;
              Acc => table {
                       Sg => base_1+"це" ;
                       Pl => base_1+"ця"
                     } ;
              Dat => table {
                       Sg => base_1+"цю" ;
                       Pl => base_1+"цям"
                     } ;
              Gen => table {
                       Sg => base_1+"ця" ;
                       Pl => base_1+"ць"
                     } ;
              Loc => table {
                       Sg => base_1+"ці" ;
                       Pl => base_1+"цях"
                     } ;
              Instr => table {
                         Sg => base_1+"цем" ;
                         Pl => base_1+"цями"
                       }
            } ;
        Voc = table {
                Sg => base_1+"че" ;
                Pl => base_1+"ця"
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN129"
  } ;

mkN130 : Str -> N ;
mkN130 base =
  case base of {
    base_1+base_2@?+"а" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+base_2+"а" ;
                       Pl => base_1+base_2+"и"
                     } ;
              Acc => table {
                       Sg => base_1+base_2+"у" ;
                       Pl => base_1+base_2+"и"
                     } ;
              Dat => table {
                       Sg => base_1+base_2+"і" ;
                       Pl => base_1+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+base_2+"и" ;
                       Pl => base_1+"е"+base_2
                     } ;
              Loc => table {
                       Sg => base_1+base_2+"і" ;
                       Pl => base_1+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+base_2+"ою" ;
                         Pl => base_1+base_2+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+base_2+"о" ;
                Pl => base_1+base_2+"и"
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN130"
  } ;

mkN131 : Str -> N ;
mkN131 base =
  case base of {
    base_1+base_2@?+"о" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+base_2+"о" ;
                       Pl => base_1+base_2+"а"
                     } ;
              Acc => table {
                       Sg => base_1+base_2+"о" ;
                       Pl => base_1+base_2+"а"
                     } ;
              Dat => table {
                       Sg => base_1+base_2+"у" ;
                       Pl => base_1+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+base_2+"а" ;
                       Pl => base_1+"е"+base_2
                     } ;
              Loc => table {
                       Sg => base_1+base_2+"у" ;
                       Pl => base_1+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+base_2+"ом" ;
                         Pl => base_1+base_2+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+base_2+"о" ;
                Pl => base_1+base_2+"а"
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN131"
  } ;

mkN132 : Str -> N ;
mkN132 base =
  case base of {
    base_1+"е" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"е" ;
                       Pl => base_1+"а"
                     } ;
              Acc => table {
                       Sg => base_1+"е" ;
                       Pl => base_1+"а"
                     } ;
              Dat => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"а" ;
                       Pl => base_1
                     } ;
              Loc => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ем" ;
                         Pl => base_1+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"е" ;
                Pl => base_1+"а"
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN132"
  } ;

mkN133 : Str -> N ;
mkN133 base =
  case base of {
    base_1+"х" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"х" ;
                       Pl => base_1+"хи"
                     } ;
              Acc => table {
                       Sg => base_1+"ха" ;
                       Pl => base_1+"хів"
                     } ;
              Dat => table {
                       Sg => base_1+"хові" ;
                       Pl => base_1+"хам"
                     } ;
              Gen => table {
                       Sg => base_1+"ха" ;
                       Pl => base_1+"хів"
                     } ;
              Loc => table {
                       Sg => base_1+"хові" ;
                       Pl => base_1+"хах"
                     } ;
              Instr => table {
                         Sg => base_1+"хом" ;
                         Pl => base_1+"хами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"ше" ;
                Pl => base_1+"хи"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN133"
  } ;

mkN134 : Str -> N ;
mkN134 base =
  case base of {
    base_1+"х" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"х" ;
                       Pl => base_1+"хи"
                     } ;
              Acc => table {
                       Sg => base_1+"х" ;
                       Pl => base_1+"хи"
                     } ;
              Dat => table {
                       Sg => base_1+"хові" ;
                       Pl => base_1+"хам"
                     } ;
              Gen => table {
                       Sg => base_1+"ха" ;
                       Pl => base_1+"хів"
                     } ;
              Loc => table {
                       Sg => base_1+"сі" ;
                       Pl => base_1+"хах"
                     } ;
              Instr => table {
                         Sg => base_1+"хом" ;
                         Pl => base_1+"хами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"ху" ;
                Pl => base_1+"хи"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN134"
  } ;

mkN135 : Str -> N ;
mkN135 base =
  case base of {
    base_1+"я" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"я" ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"ю" ;
                       Pl => base_1+"ь"
                     } ;
              Dat => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ь"
                     } ;
              Loc => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"ею" ;
                         Pl => base_1+"ями"
                       }
            } ;
        Voc = table {
                Sg => base_1+"ю" ;
                Pl => base_1+"і"
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN135"
  } ;

mkN136 : Str -> N ;
mkN136 base =
  case base of {
    base_1+"ин" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ин" ;
                       Pl => base_1+"и"
                     } ;
              Acc => table {
                       Sg => base_1+"ина" ;
                       Pl => base_1
                     } ;
              Dat => table {
                       Sg => base_1+"инові" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"ина" ;
                       Pl => base_1
                     } ;
              Loc => table {
                       Sg => base_1+"инові" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ином" ;
                         Pl => base_1+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"ине" ;
                Pl => base_1+"и"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN136"
  } ;

mkN137 : Str -> N ;
mkN137 base =
  case base of {
    base_1+"о" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"о" ;
                       Pl => base_1+"и"
                     } ;
              Acc => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"ів"
                     } ;
              Dat => table {
                       Sg => base_1+"ові" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"ів"
                     } ;
              Loc => table {
                       Sg => base_1+"ові" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ом" ;
                         Pl => base_1+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"у" ;
                Pl => base_1+"и"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN137"
  } ;

mkN138 : Str -> N ;
mkN138 base =
  case base of {
    base_1+"ий" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ий" ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"ий" ;
                       Pl => base_1+"і"
                     } ;
              Dat => table {
                       Sg => base_1+"ому" ;
                       Pl => base_1+"им"
                     } ;
              Gen => table {
                       Sg => base_1+"ого" ;
                       Pl => base_1+"их"
                     } ;
              Loc => table {
                       Sg => base_1+"ому" ;
                       Pl => base_1+"их"
                     } ;
              Instr => table {
                         Sg => base_1+"им" ;
                         Pl => base_1+"ими"
                       }
            } ;
        Voc = table {
                Sg => base_1+"ий" ;
                Pl => base_1+"і"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN138"
  } ;

mkN139 : Str -> N ;
mkN139 base =
  case base of {
    base_1+"а" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"у" ;
                       Pl => base_1
                     } ;
              Dat => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"і" ;
                       Pl => base_1
                     } ;
              Loc => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ею" ;
                         Pl => base_1+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"е" ;
                Pl => base_1+"і"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN139"
  } ;

mkN140 : Str -> N ;
mkN140 base =
  case base of {
    base_1+"ец"+base_2@? => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ец"+base_2 ;
                       Pl => base_1+base_2+"ці"
                     } ;
              Acc => table {
                       Sg => base_1+"ец"+base_2 ;
                       Pl => base_1+base_2+"ці"
                     } ;
              Dat => table {
                       Sg => base_1+base_2+"цеві" ;
                       Pl => base_1+base_2+"цям"
                     } ;
              Gen => table {
                       Sg => base_1+base_2+"ця" ;
                       Pl => base_1+base_2+"ців"
                     } ;
              Loc => table {
                       Sg => base_1+base_2+"цю" ;
                       Pl => base_1+base_2+"цях"
                     } ;
              Instr => table {
                         Sg => base_1+base_2+"цем" ;
                         Pl => base_1+base_2+"цями"
                       }
            } ;
        Voc = table {
                Sg => base_1+base_2+"цю" ;
                Pl => base_1+base_2+"ці"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN140"
  } ;

mkN141 : Str -> N ;
mkN141 base =
  case base of {
    base_1+"ь" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ь" ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"ь" ;
                       Pl => base_1+"і"
                     } ;
              Dat => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ей"
                     } ;
              Loc => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"зю" ;
                         Pl => base_1+"ями"
                       }
            } ;
        Voc = table {
                Sg => base_1+"е" ;
                Pl => base_1+"і"
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN141"
  } ;

mkN142 : Str -> N ;
mkN142 base =
  case base of {
    base_1+"ь" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ь" ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"ь" ;
                       Pl => base_1+"і"
                     } ;
              Dat => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ей"
                     } ;
              Loc => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"ню" ;
                         Pl => base_1+"ями"
                       }
            } ;
        Voc = table {
                Sg => base_1+"е" ;
                Pl => base_1+"і"
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN142"
  } ;

mkN143 : Str -> N ;
mkN143 base =
  case base of {
    base_1+"іг" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"іг" ;
                       Pl => base_1+"оги"
                     } ;
              Acc => table {
                       Sg => base_1+"іг" ;
                       Pl => base_1+"оги"
                     } ;
              Dat => table {
                       Sg => base_1+"огові" ;
                       Pl => base_1+"огам"
                     } ;
              Gen => table {
                       Sg => base_1+"ога" ;
                       Pl => base_1+"огів"
                     } ;
              Loc => table {
                       Sg => base_1+"озі" ;
                       Pl => base_1+"огах"
                     } ;
              Instr => table {
                         Sg => base_1+"огом" ;
                         Pl => base_1+"огами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"огу" ;
                Pl => base_1+"оги"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN143"
  } ;

mkN144 : Str -> N ;
mkN144 base =
  case base of {
    base_1+"іг" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"іг" ;
                       Pl => base_1+"оги"
                     } ;
              Acc => table {
                       Sg => base_1+"іг" ;
                       Pl => base_1+"оги"
                     } ;
              Dat => table {
                       Sg => base_1+"огові" ;
                       Pl => base_1+"огам"
                     } ;
              Gen => table {
                       Sg => base_1+"огу" ;
                       Pl => base_1+"огів"
                     } ;
              Loc => table {
                       Sg => base_1+"озі" ;
                       Pl => base_1+"огах"
                     } ;
              Instr => table {
                         Sg => base_1+"огом" ;
                         Pl => base_1+"огами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"огу" ;
                Pl => base_1+"оги"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN144"
  } ;

mkN145 : Str -> N ;
mkN145 base =
  case base of {
    base_1+base_2@?+"е" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+base_2+"е" ;
                       Pl => base_1+base_2+"я"
                     } ;
              Acc => table {
                       Sg => base_1+base_2+"е" ;
                       Pl => base_1+base_2+"я"
                     } ;
              Dat => table {
                       Sg => base_1+base_2+"еві" ;
                       Pl => base_1+base_2+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+base_2+"я" ;
                       Pl => base_1+"де"+base_2+"ь"
                     } ;
              Loc => table {
                       Sg => base_1+base_2+"ю" ;
                       Pl => base_1+base_2+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+base_2+"ем" ;
                         Pl => base_1+base_2+"ями"
                       }
            } ;
        Voc = table {
                Sg => base_1+base_2+"е" ;
                Pl => base_1+base_2+"я"
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN145"
  } ;

mkN146 : Str -> N ;
mkN146 base =
  case base of {
    base_1+"і" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => nonExist ;
                       Pl => base_1+"і"
                     } ;
              Dat => table {
                       Sg => nonExist ;
                       Pl => base_1+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"ей" ;
                       Pl => base_1+"ей"
                     } ;
              Loc => table {
                       Sg => nonExist ;
                       Pl => base_1+"ях"
                     } ;
              Instr => table {
                         Sg => nonExist ;
                         Pl => base_1+"има"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => base_1+"і"
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN146"
  } ;

mkN147 : Str -> N ;
mkN147 base =
  case base of {
    base_1 => lin N
      { s = table {
              Nom => table {
                       Sg => base_1 ;
                       Pl => base_1+"и"
                     } ;
              Acc => table {
                       Sg => base_1 ;
                       Pl => base_1+"и"
                     } ;
              Dat => table {
                       Sg => base_1+"ові" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"ів"
                     } ;
              Loc => table {
                       Sg => base_1+"ові" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ом" ;
                         Pl => base_1+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"у" ;
                Pl => base_1+"и"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN147"
  } ;

mkN148 : Str -> N ;
mkN148 base =
  case base of {
    base_1+"я" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"я" ;
                       Pl => base_1+"я" --guessed
                     } ;
              Acc => table {
                       Sg => base_1+"я" ;
                       Pl => base_1+"я" --guessed
                     } ;
              Dat => table {
                       Sg => base_1+"ю" ;
                       Pl => base_1+"ям" --guessed
                     } ;
              Gen => table {
                       Sg => base_1+"я" ;
                       Pl => base_1+"їв" --guessed
                     } ;
              Loc => table {
                       Sg => base_1+"ї" ;
                       Pl => base_1+"ях" --guessed
                     } ;
              Instr => table {
                         Sg => base_1+"ям" ;
                         Pl => base_1+"ями" --guessed
                       }
            } ;
        Voc = table {
                Sg => base_1+"я" ;
                Pl => base_1+"я" --guessed
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN148"
  } ;

mkN149 : Str -> N ;
mkN149 base =
  case base of {
    base_1+"'я" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"'я" ;
                       Pl => base_1+"'ї"
                     } ;
              Acc => table {
                       Sg => base_1+"'ю" ;
                       Pl => base_1+"'ї"
                     } ;
              Dat => table {
                       Sg => base_1+"'ї" ;
                       Pl => base_1+"'ям"
                     } ;
              Gen => table {
                       Sg => base_1+"'ї" ;
                       Pl => base_1+"ей"
                     } ;
              Loc => table {
                       Sg => base_1+"'ї" ;
                       Pl => base_1+"'ях"
                     } ;
              Instr => table {
                         Sg => base_1+"'єю" ;
                         Pl => base_1+"'ями"
                       }
            } ;
        Voc = table {
                Sg => base_1+"'є" ;
                Pl => base_1+"'ї"
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN149"
  } ;

mkN150 : Str -> N ;
mkN150 base =
  case base of {
    base_1+"і"+base_2@?+"ь" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"і"+base_2+"ь" ;
                       Pl => base_1+"е"+base_2+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"е"+base_2+"я" ;
                       Pl => base_1+"е"+base_2+"і"
                     } ;
              Dat => table {
                       Sg => base_1+"е"+base_2+"еві" ;
                       Pl => base_1+"е"+base_2+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"е"+base_2+"я" ;
                       Pl => base_1+"е"+base_2+"ів"
                     } ;
              Loc => table {
                       Sg => base_1+"е"+base_2+"еві" ;
                       Pl => base_1+"е"+base_2+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"е"+base_2+"ем" ;
                         Pl => base_1+"е"+base_2+"ями"
                       }
            } ;
        Voc = table {
                Sg => base_1+"е"+base_2+"ю" ;
                Pl => base_1+"е"+base_2+"і"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN150"
  } ;

mkN151 : Str -> N ;
mkN151 base =
  case base of {
    base_1 => lin N
      { s = table {
              Nom => table {
                       Sg => base_1 ;
                       Pl => base_1+"та"
                     } ;
              Acc => table {
                       Sg => base_1 ;
                       Pl => base_1+"та"
                     } ;
              Dat => table {
                       Sg => base_1+"ті" ;
                       Pl => base_1+"там"
                     } ;
              Gen => table {
                       Sg => base_1+"ти" ;
                       Pl => base_1+"т"
                     } ;
              Loc => table {
                       Sg => base_1+"ті" ;
                       Pl => base_1+"тах"
                     } ;
              Instr => table {
                         Sg => base_1+"м" ;
                         Pl => base_1+"тами"
                       }
            } ;
        Voc = table {
                Sg => base_1 ;
                Pl => base_1+"та"
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN151"
  } ;

mkN152 : Str -> N ;
mkN152 base =
  case base of {
    base_1+"й"+base_2@?+"е" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"й"+base_2+"е" ;
                       Pl => base_1+"й"+base_2+"я"
                     } ;
              Acc => table {
                       Sg => base_1+"й"+base_2+"е" ;
                       Pl => base_1+"й"+base_2+"я"
                     } ;
              Dat => table {
                       Sg => base_1+"й"+base_2+"ю" ;
                       Pl => base_1+"й"+base_2+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"й"+base_2+"я" ;
                       Pl => base_1+"є"+base_2+"ь"
                     } ;
              Loc => table {
                       Sg => base_1+"й"+base_2+"ю" ;
                       Pl => base_1+"й"+base_2+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"й"+base_2+"ем" ;
                         Pl => base_1+"й"+base_2+"ями"
                       }
            } ;
        Voc = table {
                Sg => base_1+"й"+base_2+"е" ;
                Pl => base_1+"й"+base_2+"я"
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN152"
  } ;

mkN153 : Str -> N ;
mkN153 base =
  case base of {
    base_1+base_2@?+"о" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+base_2+"о" ;
                       Pl => base_1+base_2+"а"
                     } ;
              Acc => table {
                       Sg => base_1+base_2+"о" ;
                       Pl => base_1+"о"+base_2
                     } ;
              Dat => table {
                       Sg => base_1+base_2+"ові" ;
                       Pl => base_1+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+base_2+"а" ;
                       Pl => base_1+"о"+base_2
                     } ;
              Loc => table {
                       Sg => base_1+base_2+"ові" ;
                       Pl => base_1+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+base_2+"ом" ;
                         Pl => base_1+base_2+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+base_2+"у" ;
                Pl => base_1+base_2+"а"
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN153"
  } ;

mkN154 : Str -> N ;
mkN154 base =
  case base of {
    base_1+base_2@?+"о" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+base_2+"о" ;
                       Pl => base_1+base_2+"а"
                     } ;
              Acc => table {
                       Sg => base_1+base_2+"о" ;
                       Pl => base_1+base_2+"а"
                     } ;
              Dat => table {
                       Sg => base_1+base_2+"ові" ;
                       Pl => base_1+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+base_2+"а" ;
                       Pl => base_1+"о"+base_2
                     } ;
              Loc => table {
                       Sg => base_1+base_2+"ові" ;
                       Pl => base_1+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+base_2+"ом" ;
                         Pl => base_1+base_2+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+base_2+"у" ;
                Pl => base_1+base_2+"а"
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN154"
  } ;

mkN155 : Str -> N ;
mkN155 base =
  case base of {
    base_1 => lin N
      { s = table {
              Nom => table {
                       Sg => base_1 ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"і"
                     } ;
              Dat => table {
                       Sg => base_1+"еві" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"ів"
                     } ;
              Loc => table {
                       Sg => base_1+"еві" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ем" ;
                         Pl => base_1+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"у" ;
                Pl => base_1+"і"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN155"
  } ;

mkN156 : Str -> N ;
mkN156 base =
  case base of {
    base_1+"о"+base_2@? => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"о"+base_2 ;
                       Pl => base_1+base_2+"и"
                     } ;
              Acc => table {
                       Sg => base_1+base_2+"а" ;
                       Pl => base_1+base_2+"и"
                     } ;
              Dat => table {
                       Sg => base_1+base_2+"ові" ;
                       Pl => base_1+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+base_2+"а" ;
                       Pl => base_1+base_2+"ів"
                     } ;
              Loc => table {
                       Sg => base_1+base_2+"ові" ;
                       Pl => base_1+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+base_2+"ом" ;
                         Pl => base_1+base_2+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+base_2+"е" ;
                Pl => base_1+base_2+"и"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN156"
  } ;

mkN157 : Str -> N ;
mkN157 base =
  case base of {
    base_1+"о"+base_2@? => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"о"+base_2 ;
                       Pl => base_1+base_2+"и"
                     } ;
              Acc => table {
                       Sg => base_1+"о"+base_2 ;
                       Pl => base_1+base_2+"и"
                     } ;
              Dat => table {
                       Sg => base_1+base_2+"ові" ;
                       Pl => base_1+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+base_2+"а" ;
                       Pl => base_1+base_2+"ів"
                     } ;
              Loc => table {
                       Sg => base_1+base_2+"і" ;
                       Pl => base_1+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+base_2+"ом" ;
                         Pl => base_1+base_2+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+base_2+"е" ;
                Pl => base_1+base_2+"и"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN157"
  } ;

mkN158 : Str -> N ;
mkN158 base =
  case base of {
    base_1+"о"+base_2@? => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"о"+base_2 ;
                       Pl => base_1+base_2+"и"
                     } ;
              Acc => table {
                       Sg => base_1+base_2+"а" ;
                       Pl => base_1+base_2+"и"
                     } ;
              Dat => table {
                       Sg => base_1+base_2+"ові" ;
                       Pl => base_1+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+base_2+"а" ;
                       Pl => base_1+base_2+"ів"
                     } ;
              Loc => table {
                       Sg => base_1+base_2+"ові" ;
                       Pl => base_1+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+base_2+"ом" ;
                         Pl => base_1+base_2+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+base_2+"у" ;
                Pl => base_1+base_2+"и"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN158"
  } ;

mkN159 : Str -> N ;
mkN159 base =
  case base of {
    base_1+"і"+base_2@? => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"і"+base_2 ;
                       Pl => base_1+"о"+base_2+"и"
                     } ;
              Acc => table {
                       Sg => base_1+"о"+base_2+"а" ;
                       Pl => base_1+"о"+base_2+"и"
                     } ;
              Dat => table {
                       Sg => base_1+"о"+base_2+"ові" ;
                       Pl => base_1+"о"+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"о"+base_2+"а" ;
                       Pl => base_1+"о"+base_2+"ів"
                     } ;
              Loc => table {
                       Sg => base_1+"о"+base_2+"і" ;
                       Pl => base_1+"о"+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"о"+base_2+"ом" ;
                         Pl => base_1+"о"+base_2+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"о"+base_2+"е" ;
                Pl => base_1+"о"+base_2+"и"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN159"
  } ;

mkN160 : Str -> N ;
mkN160 base =
  case base of {
    base_1+"і"+base_2@? => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"і"+base_2 ;
                       Pl => base_1+"о"+base_2+"и"
                     } ;
              Acc => table {
                       Sg => base_1+"о"+base_2+"а" ;
                       Pl => base_1+"о"+base_2+"ів"
                     } ;
              Dat => table {
                       Sg => base_1+"о"+base_2+"ові" ;
                       Pl => base_1+"о"+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"о"+base_2+"а" ;
                       Pl => base_1+"о"+base_2+"ів"
                     } ;
              Loc => table {
                       Sg => base_1+"о"+base_2+"ові" ;
                       Pl => base_1+"о"+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"о"+base_2+"ом" ;
                         Pl => base_1+"о"+base_2+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"о"+base_2+"е" ;
                Pl => base_1+"о"+base_2+"и"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN160"
  } ;

mkN161 : Str -> N ;
mkN161 base =
  case base of {
    base_1+"га" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"га" ;
                       Pl => base_1+"ги"
                     } ;
              Acc => table {
                       Sg => base_1+"гу" ;
                       Pl => base_1+"г"
                     } ;
              Dat => table {
                       Sg => base_1+"зі" ;
                       Pl => base_1+"гам"
                     } ;
              Gen => table {
                       Sg => base_1+"ги" ;
                       Pl => base_1+"г"
                     } ;
              Loc => table {
                       Sg => base_1+"зі" ;
                       Pl => base_1+"гах"
                     } ;
              Instr => table {
                         Sg => base_1+"гою" ;
                         Pl => base_1+"гами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"го" ;
                Pl => base_1+"ги"
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN161"
  } ;

mkN162 : Str -> N ;
mkN162 base =
  case base of {
    base_1+"ка" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ка" ;
                       Pl => base_1+"ки"
                     } ;
              Acc => table {
                       Sg => base_1+"ку" ;
                       Pl => base_1+"к"
                     } ;
              Dat => table {
                       Sg => base_1+"ці" ;
                       Pl => base_1+"кам"
                     } ;
              Gen => table {
                       Sg => base_1+"ки" ;
                       Pl => base_1+"к"
                     } ;
              Loc => table {
                       Sg => base_1+"ці" ;
                       Pl => base_1+"ках"
                     } ;
              Instr => table {
                         Sg => base_1+"кою" ;
                         Pl => base_1+"ками"
                       }
            } ;
        Voc = table {
                Sg => base_1+"ко" ;
                Pl => base_1+"ки"
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN162"
  } ;

mkN163 : Str -> N ;
mkN163 base =
  case base of {
    base_1+"ець" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ець" ;
                       Pl => base_1+"ці"
                     } ;
              Acc => table {
                       Sg => base_1+"ця" ;
                       Pl => base_1+"ці"
                     } ;
              Dat => table {
                       Sg => base_1+"цеві" ;
                       Pl => base_1+"цям"
                     } ;
              Gen => table {
                       Sg => base_1+"ця" ;
                       Pl => base_1+"ців"
                     } ;
              Loc => table {
                       Sg => base_1+"цеві" ;
                       Pl => base_1+"цях"
                     } ;
              Instr => table {
                         Sg => base_1+"цем" ;
                         Pl => base_1+"цями"
                       }
            } ;
        Voc = table {
                Sg => base_1+"че" ;
                Pl => base_1+"ці"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN163"
  } ;

mkN164 : Str -> N ;
mkN164 base =
  case base of {
    base_1+"є"+base_2@?+"ь" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"є"+base_2+"ь" ;
                       Pl => base_1+"й"+base_2+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"й"+base_2+"я" ;
                       Pl => base_1+"й"+base_2+"ів"
                     } ;
              Dat => table {
                       Sg => base_1+"й"+base_2+"еві" ;
                       Pl => base_1+"й"+base_2+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"й"+base_2+"я" ;
                       Pl => base_1+"й"+base_2+"ів"
                     } ;
              Loc => table {
                       Sg => base_1+"й"+base_2+"еві" ;
                       Pl => base_1+"й"+base_2+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"й"+base_2+"ем" ;
                         Pl => base_1+"й"+base_2+"ями"
                       }
            } ;
        Voc = table {
                Sg => base_1+"й"+base_2+"ю" ;
                Pl => base_1+"й"+base_2+"і"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN164"
  } ;

mkN165 : Str -> N ;
mkN165 base =
  case base of {
    base_1+"чя" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"чя" ;
                       Pl => base_1+"чя"
                     } ;
              Acc => table {
                       Sg => base_1+"чя" ;
                       Pl => base_1+"чя"
                     } ;
              Dat => table {
                       Sg => base_1+"чю" ;
                       Pl => base_1+"чям"
                     } ;
              Gen => table {
                       Sg => base_1+"чя" ;
                       Pl => base_1
                     } ;
              Loc => table {
                       Sg => base_1+"чі" ;
                       Pl => base_1+"чях"
                     } ;
              Instr => table {
                         Sg => base_1+"чям" ;
                         Pl => base_1+"чями"
                       }
            } ;
        Voc = table {
                Sg => base_1+"чя" ;
                Pl => base_1+"чя"
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN165"
  } ;

mkN166 : Str -> N ;
mkN166 base =
  case base of {
    base_1+"і"+base_2@? => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"і"+base_2 ;
                       Pl => base_1+"о"+base_2+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"і"+base_2 ;
                       Pl => base_1+"о"+base_2+"і"
                     } ;
              Dat => table {
                       Sg => base_1+"о"+base_2+"еві" ;
                       Pl => base_1+"о"+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"о"+base_2+"а" ;
                       Pl => base_1+"о"+base_2+"ів"
                     } ;
              Loc => table {
                       Sg => base_1+"о"+base_2+"у" ;
                       Pl => base_1+"о"+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"о"+base_2+"ем" ;
                         Pl => base_1+"о"+base_2+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"о"+base_2+"е" ;
                Pl => base_1+"о"+base_2+"і"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN166"
  } ;

mkN167 : Str -> N ;
mkN167 base =
  case base of {
    base_1 => lin N
      { s = table {
              Nom => table {
                       Sg => base_1 ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"і"
                     } ;
              Dat => table {
                       Sg => base_1+"еві" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"ів"
                     } ;
              Loc => table {
                       Sg => base_1+"еві" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ем" ;
                         Pl => base_1+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"е" ;
                Pl => base_1+"і"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN167"
  } ;

mkN168 : Str -> N ;
mkN168 base =
  case base of {
    base_1 => lin N
      { s = table {
              Nom => table {
                       Sg => base_1 ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => base_1 ;
                       Pl => base_1+"ей"
                     } ;
              Dat => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ей"
                     } ;
              Loc => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"'ю" ;
                         Pl => base_1+"ями"
                       }
            } ;
        Voc = table {
                Sg => base_1+"е" ;
                Pl => base_1+"і"
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN168"
  } ;

mkN169 : Str -> N ;
mkN169 base =
  case base of {
    base_1+"я" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"я" ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"ю" ;
                       Pl => base_1+"ей"
                     } ;
              Dat => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ей"
                     } ;
              Loc => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"ею" ;
                         Pl => base_1+"ями"
                       }
            } ;
        Voc = table {
                Sg => base_1+"е" ;
                Pl => base_1+"і"
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN169"
  } ;

mkN170 : Str -> N ;
mkN170 base =
  case base of {
    base_1+"ина" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ина" ;
                       Pl => base_1+"и"
                     } ;
              Acc => table {
                       Sg => base_1+"ину" ;
                       Pl => base_1+"ей"
                     } ;
              Dat => table {
                       Sg => base_1+"ині" ;
                       Pl => base_1+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"ини" ;
                       Pl => base_1+"ей"
                     } ;
              Loc => table {
                       Sg => base_1+"ині" ;
                       Pl => base_1+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"иною" ;
                         Pl => base_1+"ьми"
                       }
            } ;
        Voc = table {
                Sg => base_1+"ино" ;
                Pl => base_1+"и"
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN170"
  } ;

mkN171 : Str -> N ;
mkN171 base =
  case base of {
    base_1 => lin N
      { s = table {
              Nom => table {
                       Sg => base_1 ;
                       Pl => base_1+"и"
                     } ;
              Acc => table {
                       Sg => base_1 ;
                       Pl => base_1+"и"
                     } ;
              Dat => table {
                       Sg => base_1+"ові" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"ів"
                     } ;
              Loc => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ом" ;
                         Pl => base_1+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"е" ;
                Pl => base_1+"и"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN171"
  } ;

mkN172 : Str -> N ;
mkN172 base =
  case base of {
    base_1 => lin N
      { s = table {
              Nom => table {
                       Sg => base_1 ;
                       Pl => base_1+"а"
                     } ;
              Acc => table {
                       Sg => base_1 ;
                       Pl => base_1+"а"
                     } ;
              Dat => table {
                       Sg => base_1+"ові" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"ів"
                     } ;
              Loc => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ом" ;
                         Pl => base_1+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"е" ;
                Pl => base_1+"а"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN172"
  } ;

mkN173 : Str -> N ;
mkN173 base =
  case base of {
    base_1+"і"+base_2@("ск"|?) => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"і"+base_2 ;
                       Pl => base_1+"о"+base_2+"и"
                     } ;
              Acc => table {
                       Sg => base_1+"і"+base_2 ;
                       Pl => base_1+"о"+base_2+"и"
                     } ;
              Dat => table {
                       Sg => base_1+"о"+base_2+"ові" ;
                       Pl => base_1+"о"+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"о"+base_2+"у" ;
                       Pl => base_1+"о"+base_2+"ів"
                     } ;
              Loc => table {
                       Sg => base_1+"о"+base_2+"у" ;
                       Pl => base_1+"о"+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"о"+base_2+"ом" ;
                         Pl => base_1+"о"+base_2+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"о"+base_2+"у" ;
                Pl => base_1+"о"+base_2+"и"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN173"
  } ;

mkN174 : Str -> N ;
mkN174 base =
  case base of {
    "ві"+base_1+base_2@?+"я" => lin N
      { s = table {
              Nom => table {
                       Sg => "ві"+base_1+base_2+"я" ;
                       Pl => "ві"+base_1+base_2+"і"
                     } ;
              Acc => table {
                       Sg => "ві"+base_1+base_2+"ю" ;
                       Pl => "ві"+base_1+base_2+"і"
                     } ;
              Dat => table {
                       Sg => "ві"+base_1+base_2+"і" ;
                       Pl => "ві"+base_1+base_2+"ям"
                     } ;
              Gen => table {
                       Sg => "ві"+base_1+base_2+"і" ;
                       Pl => "о"+base_1+"е"+base_2+"ь"
                     } ;
              Loc => table {
                       Sg => "ві"+base_1+base_2+"і" ;
                       Pl => "ві"+base_1+base_2+"ях"
                     } ;
              Instr => table {
                         Sg => "ві"+base_1+base_2+"ею" ;
                         Pl => "ві"+base_1+base_2+"ями"
                       }
            } ;
        Voc = table {
                Sg => "ві"+base_1+base_2+"е" ;
                Pl => "ві"+base_1+base_2+"і"
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN174"
  } ;

mkN175 : Str -> N ;
mkN175 base =
  case base of {
    base_1+"де"+base_2@?+"ь" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"де"+base_2+"ь" ;
                       Pl => base_1+base_2+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"де"+base_2+"ь" ;
                       Pl => base_1+base_2+"і"
                     } ;
              Dat => table {
                       Sg => base_1+base_2+"еві" ;
                       Pl => base_1+base_2+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+base_2+"я" ;
                       Pl => base_1+base_2+"ів"
                     } ;
              Loc => table {
                       Sg => base_1+base_2+"ю" ;
                       Pl => base_1+base_2+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+base_2+"ем" ;
                         Pl => base_1+base_2+"ями"
                       }
            } ;
        Voc = table {
                Sg => base_1+base_2+"ю" ;
                Pl => base_1+base_2+"і"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN175"
  } ;

mkN176 : Str -> N ;
mkN176 base =
  case base of {
    base_1+base_2@?+"о" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+base_2+"о" ;
                       Pl => base_1+base_2+"а"
                     } ;
              Acc => table {
                       Sg => base_1+base_2+"о" ;
                       Pl => base_1+base_2+"а"
                     } ;
              Dat => table {
                       Sg => base_1+base_2+"у" ;
                       Pl => base_1+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+base_2+"а" ;
                       Pl => base_1+"о"+base_2
                     } ;
              Loc => table {
                       Sg => base_1+base_2+"у" ;
                       Pl => base_1+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+base_2+"ом" ;
                         Pl => base_1+base_2+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+base_2+"о" ;
                Pl => base_1+base_2+"а"
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN176"
  } ;

mkN177 : Str -> N ;
mkN177 base =
  case base of {
    base_1+"о"+base_2@?+"я" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"о"+base_2+"я" ;
                       Pl => base_1+"о"+base_2+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"о"+base_2+"ю" ;
                       Pl => base_1+"о"+base_2+"і"
                     } ;
              Dat => table {
                       Sg => base_1+"о"+base_2+"і" ;
                       Pl => base_1+"о"+base_2+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"о"+base_2+"і" ;
                       Pl => base_1+"і"+base_2
                     } ;
              Loc => table {
                       Sg => base_1+"о"+base_2+"і" ;
                       Pl => base_1+"о"+base_2+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"о"+base_2+"ею" ;
                         Pl => base_1+"о"+base_2+"ями"
                       }
            } ;
        Voc = table {
                Sg => base_1+"о"+base_2+"е" ;
                Pl => base_1+"о"+base_2+"і"
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN177"
  } ;

mkN178 : Str -> N ;
mkN178 base =
  case base of {
    base_1+"а" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"і"
                     } ;
              Dat => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ей"
                     } ;
              Loc => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ею" ;
                         Pl => base_1+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"е" ;
                Pl => base_1+"і"
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN178"
  } ;

mkN179 : Str -> N ;
mkN179 base =
  case base of {
    base_1+"й" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"й" ;
                       Pl => base_1+"ї"
                     } ;
              Acc => table {
                       Sg => base_1+"й" ;
                       Pl => base_1+"ї"
                     } ;
              Dat => table {
                       Sg => base_1+"єві" ;
                       Pl => base_1+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"ю" ;
                       Pl => base_1+"їв"
                     } ;
              Loc => table {
                       Sg => base_1+"ю" ;
                       Pl => base_1+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"єм" ;
                         Pl => base_1+"ями"
                       }
            } ;
        Voc = table {
                Sg => base_1+"ю" ;
                Pl => base_1+"ї"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN179"
  } ;

mkN180 : Str -> N ;
mkN180 base =
  case base of {
    base_1+"е"+base_2@? => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"е"+base_2 ;
                       Pl => base_1+base_2+"и"
                     } ;
              Acc => table {
                       Sg => base_1+"е"+base_2 ;
                       Pl => base_1+base_2+"и"
                     } ;
              Dat => table {
                       Sg => base_1+base_2+"ові" ;
                       Pl => base_1+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+base_2+"у" ;
                       Pl => base_1+base_2+"ів"
                     } ;
              Loc => table {
                       Sg => base_1+base_2+"у" ;
                       Pl => base_1+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+base_2+"ом" ;
                         Pl => base_1+base_2+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+base_2+"е" ;
                Pl => base_1+base_2+"и"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN180"
  } ;

mkN181 : Str -> N ;
mkN181 base =
  case base of {
    base_1+"і"+base_2@("зд"|?) => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"і"+base_2 ;
                       Pl => base_1+"о"+base_2+"и"
                     } ;
              Acc => table {
                       Sg => base_1+"о"+base_2+"а" ;
                       Pl => base_1+"о"+base_2+"и"
                     } ;
              Dat => table {
                       Sg => base_1+"о"+base_2+"ові" ;
                       Pl => base_1+"о"+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"о"+base_2+"а" ;
                       Pl => base_1+"о"+base_2+"ів"
                     } ;
              Loc => table {
                       Sg => base_1+"о"+base_2+"ові" ;
                       Pl => base_1+"о"+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"о"+base_2+"ом" ;
                         Pl => base_1+"о"+base_2+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"о"+base_2+"е" ;
                Pl => base_1+"о"+base_2+"и"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN181"
  } ;

mkN182 : Str -> N ;
mkN182 base =
  case base of {
    base_1+"я" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"я" ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"ю" ;
                       Pl => base_1+"і"
                     } ;
              Dat => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ей"
                     } ;
              Loc => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"ею" ;
                         Pl => base_1+"ьми"
                       }
            } ;
        Voc = table {
                Sg => base_1+"е" ;
                Pl => base_1+"і"
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN182"
  } ;

mkN183 : Str -> N ;
mkN183 base =
  case base of {
    base_1+"я" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"я" ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"ю" ;
                       Pl => base_1+"ей"
                     } ;
              Dat => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ей"
                     } ;
              Loc => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"ею" ;
                         Pl => base_1+"ьми"
                       }
            } ;
        Voc = table {
                Sg => base_1+"е" ;
                Pl => base_1+"і"
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN183"
  } ;

mkN184 : Str -> N ;
mkN184 base =
  case base of {
    base_1+"е"+base_2@? => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"е"+base_2 ;
                       Pl => base_1+base_2+"и"
                     } ;
              Acc => table {
                       Sg => base_1+"е"+base_2 ;
                       Pl => base_1+base_2+"и"
                     } ;
              Dat => table {
                       Sg => base_1+base_2+"ові" ;
                       Pl => base_1+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+base_2+"а" ;
                       Pl => base_1+base_2+"ів"
                     } ;
              Loc => table {
                       Sg => base_1+base_2+"і" ;
                       Pl => base_1+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+base_2+"ом" ;
                         Pl => base_1+base_2+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+base_2+"е" ;
                Pl => base_1+base_2+"и"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN184"
  } ;

mkN185 : Str -> N ;
mkN185 base =
  case base of {
    base_1+"а" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"и"
                     } ;
              Acc => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"и"
                     } ;
              Dat => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"и" ;
                       Pl => base_1
                     } ;
              Loc => table {
                       Sg => base_1+"ю" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ою" ;
                         Pl => base_1+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"о" ;
                Pl => base_1+"и"
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN185"
  } ;

mkN186 : Str -> N ;
mkN186 base =
  case base of {
    base_1+"й" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"й" ;
                       Pl => base_1+"ї"
                     } ;
              Acc => table {
                       Sg => base_1+"й" ;
                       Pl => base_1+"ї"
                     } ;
              Dat => table {
                       Sg => base_1+"ю" ;
                       Pl => base_1+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"ю" ;
                       Pl => base_1+"їв"
                     } ;
              Loc => table {
                       Sg => base_1+"ї" ;
                       Pl => base_1+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"єм" ;
                         Pl => base_1+"ями"
                       }
            } ;
        Voc = table {
                Sg => base_1+"ю" ;
                Pl => base_1+"ї"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN186"
  } ;

mkN187 : Str -> N ;
mkN187 base =
  case base of {
    base_1+"і"+base_2@? => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"і"+base_2 ;
                       Pl => base_1+"о"+base_2+"и"
                     } ;
              Acc => table {
                       Sg => base_1+"і"+base_2 ;
                       Pl => base_1+"о"+base_2+"и"
                     } ;
              Dat => table {
                       Sg => base_1+"о"+base_2+"у" ;
                       Pl => base_1+"о"+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"о"+base_2+"а" ;
                       Pl => base_1+"о"+base_2+"ів"
                     } ;
              Loc => table {
                       Sg => base_1+"о"+base_2+"у" ;
                       Pl => base_1+"о"+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"о"+base_2+"ом" ;
                         Pl => base_1+"о"+base_2+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"о"+base_2+"е" ;
                Pl => base_1+"о"+base_2+"и"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN187"
  } ;

mkN188 : Str -> N ;
mkN188 base =
  case base of {
    base_1+"е"+base_2@?+"ь" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"е"+base_2+"ь" ;
                       Pl => nonExist
                     } ;
              Acc => table {
                       Sg => base_1+"е"+base_2+"ь" ;
                       Pl => nonExist
                     } ;
              Dat => table {
                       Sg => base_1+"е"+base_2+"і" ;
                       Pl => nonExist
                     } ;
              Gen => table {
                       Sg => base_1+base_2+"і" ;
                       Pl => nonExist
                     } ;
              Loc => table {
                       Sg => base_1+"е"+base_2+"і" ;
                       Pl => nonExist
                     } ;
              Instr => table {
                         Sg => base_1+"е"+base_2+"лю" ;
                         Pl => nonExist
                       }
            } ;
        Voc = table {
                Sg => base_1+"е"+base_2+"е" ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN188"
  } ;

mkN189 : Str -> N ;
mkN189 base =
  case base of {
    base_1+"е"+base_2@?+"ь" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"е"+base_2+"ь" ;
                       Pl => base_1+base_2+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"е"+base_2+"ь" ;
                       Pl => base_1+base_2+"і"
                     } ;
              Dat => table {
                       Sg => base_1+base_2+"і" ;
                       Pl => base_1+base_2+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+base_2+"і" ;
                       Pl => base_1+base_2+"ей"
                     } ;
              Loc => table {
                       Sg => base_1+base_2+"і" ;
                       Pl => base_1+base_2+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"е"+base_2+"лю" ;
                         Pl => base_1+base_2+"ями"
                       }
            } ;
        Voc = table {
                Sg => base_1+base_2+"е" ;
                Pl => base_1+base_2+"і"
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN189"
  } ;

mkN190 : Str -> N ;
mkN190 base =
  case base of {
    base_1 => lin N
      { s = table {
              Nom => table {
                       Sg => base_1 ;
                       Pl => base_1+"и"
                     } ;
              Acc => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"ов"
                     } ;
              Dat => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"ів"
                     } ;
              Loc => table {
                       Sg => nonExist ;
                       Pl => nonExist
                     } ;
              Instr => table {
                         Sg => base_1+"ом" ;
                         Pl => base_1+"ами"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN190"
  } ;

mkN191 : Str -> N ;
mkN191 base =
  case base of {
    base_1+"е" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"е" ;
                       Pl => base_1+"а"
                     } ;
              Acc => table {
                       Sg => base_1+"е" ;
                       Pl => base_1
                     } ;
              Dat => table {
                       Sg => base_1+"еві" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"а" ;
                       Pl => base_1
                     } ;
              Loc => table {
                       Sg => base_1+"еві" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ем" ;
                         Pl => base_1+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"е" ;
                Pl => base_1+"а"
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN191"
  } ;

mkN192 : Str -> N ;
mkN192 base =
  case base of {
    base_1 => lin N
      { s = table {
              Nom => table {
                       Sg => base_1 ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => base_1 ;
                       Pl => base_1+"і"
                     } ;
              Dat => table {
                       Sg => base_1+"еві" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"ів"
                     } ;
              Loc => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ем" ;
                         Pl => base_1+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"е" ;
                Pl => base_1+"і"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN192"
  } ;

mkN193 : Str -> N ;
mkN193 base =
  case base of {
    base_1+"а" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"і"
                     } ;
              Dat => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ів"
                     } ;
              Loc => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ею" ;
                         Pl => base_1+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"е" ;
                Pl => base_1+"і"
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN193"
  } ;

mkN194 : Str -> N ;
mkN194 base =
  case base of {
    base_1+"о" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"о" ;
                       Pl => base_1+"а"
                     } ;
              Acc => table {
                       Sg => base_1+"о" ;
                       Pl => base_1
                     } ;
              Dat => table {
                       Sg => base_1+"ові" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"а" ;
                       Pl => base_1
                     } ;
              Loc => table {
                       Sg => base_1+"ові" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ом" ;
                         Pl => base_1+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"о" ;
                Pl => base_1+"а"
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN194"
  } ;

mkN195 : Str -> N ;
mkN195 base =
  case base of {
    base_1+"и" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"и" ;
                       Pl => base_1+"и"
                     } ;
              Acc => table {
                       Sg => nonExist ;
                       Pl => base_1+"и"
                     } ;
              Dat => table {
                       Sg => nonExist ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1 ;
                       Pl => base_1
                     } ;
              Loc => table {
                       Sg => nonExist ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => nonExist ;
                         Pl => base_1+"ами"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => base_1+"и"
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN195"
  } ;

mkN196 : Str -> N ;
mkN196 base =
  case base of {
    base_1 => lin N
      { s = table {
              Nom => table {
                       Sg => base_1 ;
                       Pl => base_1+"и"
                     } ;
              Acc => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"ів"
                     } ;
              Dat => table {
                       Sg => base_1+"ові" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"ів"
                     } ;
              Loc => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ом" ;
                         Pl => base_1+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"е" ;
                Pl => base_1+"и"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN196"
  } ;

mkN197 : Str -> N ;
mkN197 base =
  case base of {
    base_1+"е" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"е" ;
                       Pl => base_1+"я"
                     } ;
              Acc => table {
                       Sg => base_1+"е" ;
                       Pl => base_1+"я"
                     } ;
              Dat => table {
                       Sg => base_1+"ю" ;
                       Pl => base_1+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"я" ;
                       Pl => base_1+"ь"
                     } ;
              Loc => table {
                       Sg => base_1+"ю" ;
                       Pl => base_1+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"ем" ;
                         Pl => base_1+"ями"
                       }
            } ;
        Voc = table {
                Sg => base_1+"е" ;
                Pl => base_1+"я"
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN197"
  } ;

mkN198 : Str -> N ;
mkN198 base =
  case base of {
    base_1+"и" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"и" ;
                       Pl => base_1+"и"
                     } ;
              Acc => table {
                       Sg => nonExist ;
                       Pl => base_1+"и"
                     } ;
              Dat => table {
                       Sg => nonExist ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"ів" ;
                       Pl => base_1+"ів"
                     } ;
              Loc => table {
                       Sg => nonExist ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => nonExist ;
                         Pl => base_1+"ами"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => base_1+"и"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN198"
  } ;

mkN199 : Str -> N ;
mkN199 base =
  case base of {
    base_1+"о" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"о" ;
                       Pl => base_1+"а"
                     } ;
              Acc => table {
                       Sg => base_1+"а" ;
                       Pl => base_1
                     } ;
              Dat => table {
                       Sg => base_1+"ові" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"а" ;
                       Pl => base_1
                     } ;
              Loc => table {
                       Sg => base_1+"ові" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ом" ;
                         Pl => base_1+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"е" ;
                Pl => base_1+"а"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN199"
  } ;

mkN200 : Str -> N ;
mkN200 base =
  case base of {
    base_1+base_2@?+base_3@?+"о" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+base_2+base_3+"о" ;
                       Pl => base_1+"те"+base_2+base_3+"а"
                     } ;
              Acc => table {
                       Sg => base_1+base_2+base_3+"о" ;
                       Pl => base_1+"те"+base_2+base_3+"а"
                     } ;
              Dat => table {
                       Sg => base_1+base_2+base_3+"у" ;
                       Pl => base_1+"те"+base_2+base_3+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+base_2+base_3+"а" ;
                       Pl => base_1+"те"+base_2+"о"+base_3
                     } ;
              Loc => table {
                       Sg => base_1+base_2+base_3+"у" ;
                       Pl => base_1+"те"+base_2+base_3+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+base_2+base_3+"ом" ;
                         Pl => base_1+"те"+base_2+base_3+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+base_2+base_3+"о" ;
                Pl => base_1+"те"+base_2+base_3+"а"
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN200"
  } ;

mkN201 : Str -> N ;
mkN201 base =
  case base of {
    base_1+"і"+base_2@? => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"і"+base_2 ;
                       Pl => base_1+"е"+base_2+"и"
                     } ;
              Acc => table {
                       Sg => base_1+"і"+base_2 ;
                       Pl => base_1+"е"+base_2+"и"
                     } ;
              Dat => table {
                       Sg => base_1+"е"+base_2+"ові" ;
                       Pl => base_1+"е"+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"е"+base_2+"у" ;
                       Pl => base_1+"е"+base_2+"ів"
                     } ;
              Loc => table {
                       Sg => base_1+"е"+base_2+"і" ;
                       Pl => base_1+"е"+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"е"+base_2+"ом" ;
                         Pl => base_1+"е"+base_2+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"е"+base_2+"е" ;
                Pl => base_1+"е"+base_2+"и"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN201"
  } ;

mkN202 : Str -> N ;
mkN202 base =
  case base of {
    base_1 => lin N
      { s = table {
              Nom => table {
                       Sg => base_1 ;
                       Pl => base_1+"и"
                     } ;
              Acc => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"ів"
                     } ;
              Dat => table {
                       Sg => base_1+"ові" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"ів"
                     } ;
              Loc => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ом" ;
                         Pl => base_1+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"у" ;
                Pl => base_1+"и"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN202"
  } ;

mkN203 : Str -> N ;
mkN203 base =
  case base of {
    base_1+"о"+base_2@? => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"о"+base_2 ;
                       Pl => base_1+base_2+"и"
                     } ;
              Acc => table {
                       Sg => base_1+base_2+"а" ;
                       Pl => base_1+base_2+"ів"
                     } ;
              Dat => table {
                       Sg => base_1+base_2+"ові" ;
                       Pl => base_1+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+base_2+"а" ;
                       Pl => base_1+base_2+"ів"
                     } ;
              Loc => table {
                       Sg => base_1+base_2+"ові" ;
                       Pl => base_1+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+base_2+"ом" ;
                         Pl => base_1+base_2+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+base_2+"у" ;
                Pl => base_1+base_2+"и"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN203"
  } ;

mkN204 : Str -> N ;
mkN204 base =
  case base of {
    base_1+"я" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"я" ;
                       Pl => base_1+"я"
                     } ;
              Acc => table {
                       Sg => base_1+"я" ;
                       Pl => base_1+"я"
                     } ;
              Dat => table {
                       Sg => base_1+"ю" ;
                       Pl => base_1+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"я" ;
                       Pl => base_1+"ів"
                     } ;
              Loc => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"ям" ;
                         Pl => base_1+"ями"
                       }
            } ;
        Voc = table {
                Sg => base_1+"я" ;
                Pl => base_1+"я"
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN204"
  } ;

mkN205 : Str -> N ;
mkN205 base =
  case base of {
    base_1+"ня" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ня" ;
                       Pl => base_1+"ня"
                     } ;
              Acc => table {
                       Sg => base_1+"ня" ;
                       Pl => base_1+"ня"
                     } ;
              Dat => table {
                       Sg => base_1+"ню" ;
                       Pl => base_1+"ням"
                     } ;
              Gen => table {
                       Sg => base_1+"ня" ;
                       Pl => base_1+"ь"
                     } ;
              Loc => table {
                       Sg => base_1+"ні" ;
                       Pl => base_1+"нях"
                     } ;
              Instr => table {
                         Sg => base_1+"ням" ;
                         Pl => base_1+"нями"
                       }
            } ;
        Voc = table {
                Sg => base_1+"ня" ;
                Pl => base_1+"ня"
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN205"
  } ;

mkN206 : Str -> N ;
mkN206 base =
  case base of {
    base_1+"я" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"я" ;
                       Pl => base_1+"я" --guessed
                     } ;
              Acc => table {
                       Sg => base_1+"я" ;
                       Pl => base_1+"я" --guessed
                     } ;
              Dat => table {
                       Sg => base_1+"ю" ;
                       Pl => base_1+"ям" --guessed
                     } ;
              Gen => table {
                       Sg => base_1+"я" ;
                       Pl => base_1+"ів" --guessed
                     } ;
              Loc => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ях" --guessed
                     } ;
              Instr => table {
                         Sg => base_1+"ям" ;
                         Pl => base_1+"ями" --guessed
                       }
            } ;
        Voc = table {
                Sg => base_1+"я" ;
                Pl => base_1+"я" --guessed
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN206"
  } ;

mkN207 : Str -> N ;
mkN207 base =
  case base of {
    base_1+"я" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"я" ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"ю" ;
                       Pl => base_1+"і"
                     } ;
              Dat => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ів"
                     } ;
              Loc => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"ею" ;
                         Pl => base_1+"ями"
                       }
            } ;
        Voc = table {
                Sg => base_1+"е" ;
                Pl => base_1+"і"
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN207"
  } ;

mkN208 : Str -> N ;
mkN208 base =
  case base of {
    base_1+"е"+base_2@? => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"е"+base_2 ;
                       Pl => base_1+base_2+"и"
                     } ;
              Acc => table {
                       Sg => base_1+"е"+base_2 ;
                       Pl => base_1+base_2+"и"
                     } ;
              Dat => table {
                       Sg => base_1+base_2+"ові" ;
                       Pl => base_1+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+base_2+"у" ;
                       Pl => base_1+base_2+"ів"
                     } ;
              Loc => table {
                       Sg => base_1+base_2+"і" ;
                       Pl => base_1+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+base_2+"ом" ;
                         Pl => base_1+base_2+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+base_2+"е" ;
                Pl => base_1+base_2+"и"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN208"
  } ;

mkN209 : Str -> N ;
mkN209 base =
  case base of {
    base_1+base_2@?+"о" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+base_2+"о" ;
                       Pl => base_1+base_2+"а"
                     } ;
              Acc => table {
                       Sg => base_1+base_2+"о" ;
                       Pl => base_1+base_2+"а"
                     } ;
              Dat => table {
                       Sg => base_1+base_2+"ові" ;
                       Pl => base_1+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+base_2+"а" ;
                       Pl => base_1+"о"+base_2
                     } ;
              Loc => table {
                       Sg => base_1+base_2+"у" ;
                       Pl => base_1+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+base_2+"ом" ;
                         Pl => base_1+base_2+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+base_2+"о" ;
                Pl => base_1+base_2+"а"
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN209"
  } ;

mkN210 : Str -> N ;
mkN210 base =
  case base of {
    base_1+base_2@?+"о" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+base_2+"о" ;
                       Pl => base_1+base_2+"и"
                     } ;
              Acc => table {
                       Sg => base_1+base_2+"о" ;
                       Pl => base_1+base_2+"и"
                     } ;
              Dat => table {
                       Sg => base_1+base_2+"ові" ;
                       Pl => base_1+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+base_2+"а" ;
                       Pl => base_1+"о"+base_2
                     } ;
              Loc => table {
                       Sg => base_1+base_2+"у" ;
                       Pl => base_1+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+base_2+"ом" ;
                         Pl => base_1+base_2+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+base_2+"о" ;
                Pl => base_1+base_2+"и"
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN210"
  } ;

mkN211 : Str -> N ;
mkN211 base =
  case base of {
    base_1+"і"+base_2@? => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"і"+base_2 ;
                       Pl => base_1+"о"+base_2+"и"
                     } ;
              Acc => table {
                       Sg => base_1+"і"+base_2 ;
                       Pl => base_1+"о"+base_2+"и"
                     } ;
              Dat => table {
                       Sg => base_1+"о"+base_2+"у" ;
                       Pl => base_1+"о"+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"о"+base_2+"у" ;
                       Pl => base_1+"о"+base_2+"ів"
                     } ;
              Loc => table {
                       Sg => base_1+"о"+base_2+"у" ;
                       Pl => base_1+"о"+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"о"+base_2+"ом" ;
                         Pl => base_1+"о"+base_2+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"о"+base_2+"е" ;
                Pl => base_1+"о"+base_2+"и"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN211"
  } ;

mkN212 : Str -> N ;
mkN212 base =
  case base of {
    base_1+"а" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"и"
                     } ;
              Acc => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"и"
                     } ;
              Dat => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"и" ;
                       Pl => base_1+"ів"
                     } ;
              Loc => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ою" ;
                         Pl => base_1+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"о" ;
                Pl => base_1+"и"
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN212"
  } ;

mkN213 : Str -> N ;
mkN213 base =
  case base of {
    base_1+"и"+base_2@?+"ина" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"и"+base_2+"ина" ;
                       Pl => base_1+"і"+base_2+"и"
                     } ;
              Acc => table {
                       Sg => base_1+"и"+base_2+"ину" ;
                       Pl => base_1+"і"+base_2+"ей"
                     } ;
              Dat => table {
                       Sg => base_1+"и"+base_2+"ині" ;
                       Pl => base_1+"і"+base_2+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"и"+base_2+"ини" ;
                       Pl => base_1+"і"+base_2+"ей"
                     } ;
              Loc => table {
                       Sg => base_1+"и"+base_2+"ині" ;
                       Pl => base_1+"і"+base_2+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"и"+base_2+"иною" ;
                         Pl => base_1+"і"+base_2+"ьми"
                       }
            } ;
        Voc = table {
                Sg => base_1+"и"+base_2+"ино" ;
                Pl => base_1+"і"+base_2+"и"
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN213"
  } ;

mkN214 : Str -> N ;
mkN214 base =
  case base of {
    base_1+"а" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"и"
                     } ;
              Acc => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"и"
                     } ;
              Dat => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"у" ;
                       Pl => base_1
                     } ;
              Loc => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ою" ;
                         Pl => base_1+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"о" ;
                Pl => base_1+"и"
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN214"
  } ;

mkN215 : Str -> N ;
mkN215 base =
  case base of {
    base_1+"ий" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ий" ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"ого" ;
                       Pl => base_1+"их"
                     } ;
              Dat => table {
                       Sg => base_1+"ому" ;
                       Pl => base_1+"им"
                     } ;
              Gen => table {
                       Sg => base_1+"ого" ;
                       Pl => base_1+"их"
                     } ;
              Loc => table {
                       Sg => base_1+"ому" ;
                       Pl => base_1+"их"
                     } ;
              Instr => table {
                         Sg => base_1+"им" ;
                         Pl => base_1+"ими"
                       }
            } ;
        Voc = table {
                Sg => base_1+"ий" ;
                Pl => base_1+"і"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN215"
  } ;

mkN216 : Str -> N ;
mkN216 base =
  case base of {
    base_1+"є"+base_2@?+"ь" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"є"+base_2+"ь" ;
                       Pl => base_1+"й"+base_2+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"й"+base_2+"я" ;
                       Pl => base_1+"й"+base_2+"і"
                     } ;
              Dat => table {
                       Sg => base_1+"й"+base_2+"еві" ;
                       Pl => base_1+"й"+base_2+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"й"+base_2+"я" ;
                       Pl => base_1+"й"+base_2+"ів"
                     } ;
              Loc => table {
                       Sg => base_1+"й"+base_2+"еві" ;
                       Pl => base_1+"й"+base_2+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"й"+base_2+"ем" ;
                         Pl => base_1+"й"+base_2+"ями"
                       }
            } ;
        Voc = table {
                Sg => base_1+"й"+base_2+"ю" ;
                Pl => base_1+"й"+base_2+"і"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN216"
  } ;

mkN217 : Str -> N ;
mkN217 base =
  case base of {
    base_1+"ха" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ха" ;
                       Pl => base_1+"хи"
                     } ;
              Acc => table {
                       Sg => base_1+"ху" ;
                       Pl => base_1+"х"
                     } ;
              Dat => table {
                       Sg => base_1+"сі" ;
                       Pl => base_1+"хам"
                     } ;
              Gen => table {
                       Sg => base_1+"хи" ;
                       Pl => base_1+"х"
                     } ;
              Loc => table {
                       Sg => base_1+"сі" ;
                       Pl => base_1+"хах"
                     } ;
              Instr => table {
                         Sg => base_1+"хою" ;
                         Pl => base_1+"хами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"хо" ;
                Pl => base_1+"хи"
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN217"
  } ;

mkN218 : Str -> N ;
mkN218 base =
  case base of {
    base_1+"і"+base_2@?+"ь" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"і"+base_2+"ь" ;
                       Pl => base_1+"е"+base_2+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"і"+base_2+"ь" ;
                       Pl => base_1+"е"+base_2+"і"
                     } ;
              Dat => table {
                       Sg => base_1+"е"+base_2+"еві" ;
                       Pl => base_1+"е"+base_2+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"е"+base_2+"ю" ;
                       Pl => base_1+"е"+base_2+"ів"
                     } ;
              Loc => table {
                       Sg => base_1+"е"+base_2+"ю" ;
                       Pl => base_1+"е"+base_2+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"е"+base_2+"ем" ;
                         Pl => base_1+"е"+base_2+"ями"
                       }
            } ;
        Voc = table {
                Sg => base_1+"е"+base_2+"ю" ;
                Pl => base_1+"е"+base_2+"і"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN218"
  } ;

mkN219 : Str -> N ;
mkN219 base =
  case base of {
    base_1+"і"+base_2@?+"ь" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"і"+base_2+"ь" ;
                       Pl => base_1+"е"+base_2+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"і"+base_2+"ь" ;
                       Pl => base_1+"е"+base_2+"і"
                     } ;
              Dat => table {
                       Sg => base_1+"е"+base_2+"еві" ;
                       Pl => base_1+"е"+base_2+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"е"+base_2+"я" ;
                       Pl => base_1+"е"+base_2+"ів"
                     } ;
              Loc => table {
                       Sg => base_1+"е"+base_2+"ю" ;
                       Pl => base_1+"е"+base_2+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"е"+base_2+"ем" ;
                         Pl => base_1+"е"+base_2+"ями"
                       }
            } ;
        Voc = table {
                Sg => base_1+"е"+base_2+"ю" ;
                Pl => base_1+"е"+base_2+"і"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN219"
  } ;

mkN220 : Str -> N ;
mkN220 base =
  case base of {
    base_1+"ья" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ья" ;
                       Pl => base_1+"ьї"
                     } ;
              Acc => table {
                       Sg => base_1+"ью" ;
                       Pl => base_1+"ьї"
                     } ;
              Dat => table {
                       Sg => base_1+"ьї" ;
                       Pl => base_1+"ьям"
                     } ;
              Gen => table {
                       Sg => base_1+"ьї" ;
                       Pl => base_1+"ей"
                     } ;
              Loc => table {
                       Sg => base_1+"ьї" ;
                       Pl => base_1+"ьях"
                     } ;
              Instr => table {
                         Sg => base_1+"ьєю" ;
                         Pl => base_1+"ьями"
                       }
            } ;
        Voc = table {
                Sg => base_1+"ьє" ;
                Pl => base_1+"ьї"
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN220"
  } ;

mkN221 : Str -> N ;
mkN221 base =
  case base of {
    base_1+"й" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"й" ;
                       Pl => base_1+"ї"
                     } ;
              Acc => table {
                       Sg => base_1+"я" ;
                       Pl => base_1+"ї"
                     } ;
              Dat => table {
                       Sg => base_1+"ю" ;
                       Pl => base_1+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"я" ;
                       Pl => base_1+"їв"
                     } ;
              Loc => table {
                       Sg => base_1+"ю" ;
                       Pl => base_1+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"єм" ;
                         Pl => base_1+"ями"
                       }
            } ;
        Voc = table {
                Sg => base_1+"ю" ;
                Pl => base_1+"ї"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN221"
  } ;

mkN222 : Str -> N ;
mkN222 base =
  case base of {
    base_1+"о"+base_2@?+"ь" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"о"+base_2+"ь" ;
                       Pl => base_1+base_2+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"о"+base_2+"ь" ;
                       Pl => base_1+base_2+"і"
                     } ;
              Dat => table {
                       Sg => base_1+base_2+"еві" ;
                       Pl => base_1+base_2+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+base_2+"ю" ;
                       Pl => base_1+base_2+"ів"
                     } ;
              Loc => table {
                       Sg => base_1+base_2+"ю" ;
                       Pl => base_1+base_2+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+base_2+"ем" ;
                         Pl => base_1+base_2+"ями"
                       }
            } ;
        Voc = table {
                Sg => base_1+base_2+"ю" ;
                Pl => base_1+base_2+"і"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN222"
  } ;

mkN223 : Str -> N ;
mkN223 base =
  case base of {
    base_1+"і"+base_2@?+"ь" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"і"+base_2+"ь" ;
                       Pl => base_1+"е"+base_2+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"і"+base_2+"ь" ;
                       Pl => base_1+"е"+base_2+"і"
                     } ;
              Dat => table {
                       Sg => base_1+"е"+base_2+"і" ;
                       Pl => base_1+"е"+base_2+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"е"+base_2+"і" ;
                       Pl => base_1+"е"+base_2+"ей"
                     } ;
              Loc => table {
                       Sg => base_1+"е"+base_2+"і" ;
                       Pl => base_1+"е"+base_2+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"і"+base_2+"ню" ;
                         Pl => base_1+"е"+base_2+"ями"
                       }
            } ;
        Voc = table {
                Sg => base_1+"е"+base_2+"е" ;
                Pl => base_1+"е"+base_2+"і"
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN223"
  } ;

mkN224 : Str -> N ;
mkN224 base =
  case base of {
    base_1+"і"+base_2@?+"ь" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"і"+base_2+"ь" ;
                       Pl => base_1+"о"+base_2+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"о"+base_2+"я" ;
                       Pl => base_1+"о"+base_2+"і"
                     } ;
              Dat => table {
                       Sg => base_1+"о"+base_2+"еві" ;
                       Pl => base_1+"о"+base_2+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"о"+base_2+"я" ;
                       Pl => base_1+"о"+base_2+"ей"
                     } ;
              Loc => table {
                       Sg => base_1+"о"+base_2+"еві" ;
                       Pl => base_1+"о"+base_2+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"о"+base_2+"ем" ;
                         Pl => base_1+"і"+base_2+"ьми"
                       }
            } ;
        Voc = table {
                Sg => base_1+"о"+base_2+"ю" ;
                Pl => base_1+"о"+base_2+"і"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN224"
  } ;

mkN225 : Str -> N ;
mkN225 base =
  case base of {
    base_1+"ина" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ина" ;
                       Pl => base_1+"ата"
                     } ;
              Acc => table {
                       Sg => base_1+"ину" ;
                       Pl => base_1+"ат"
                     } ;
              Dat => table {
                       Sg => base_1+"ині" ;
                       Pl => base_1+"атам"
                     } ;
              Gen => table {
                       Sg => base_1+"ини" ;
                       Pl => base_1+"ат"
                     } ;
              Loc => table {
                       Sg => base_1+"ині" ;
                       Pl => base_1+"атах"
                     } ;
              Instr => table {
                         Sg => base_1+"иною" ;
                         Pl => base_1+"атами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"ино" ;
                Pl => base_1+"ата"
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN225"
  } ;

mkN226 : Str -> N ;
mkN226 base =
  case base of {
    base_1+"ка" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ка" ;
                       Pl => nonExist
                     } ;
              Acc => table {
                       Sg => base_1+"ку" ;
                       Pl => nonExist
                     } ;
              Dat => table {
                       Sg => base_1+"ці" ;
                       Pl => nonExist
                     } ;
              Gen => table {
                       Sg => base_1+"ки" ;
                       Pl => nonExist
                     } ;
              Loc => table {
                       Sg => base_1+"кю" ;
                       Pl => nonExist
                     } ;
              Instr => table {
                         Sg => base_1+"кою" ;
                         Pl => nonExist
                       }
            } ;
        Voc = table {
                Sg => base_1+"ко" ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN226"
  } ;

mkN227 : Str -> N ;
mkN227 base =
  case base of {
    base_1+"ій"+base_2@?+"а" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ій"+base_2+"а" ;
                       Pl => base_1+"ій"+base_2+"и"
                     } ;
              Acc => table {
                       Sg => base_1+"ій"+base_2+"у" ;
                       Pl => base_1+"ій"+base_2+"и"
                     } ;
              Dat => table {
                       Sg => base_1+"ій"+base_2+"і" ;
                       Pl => base_1+"ій"+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"ій"+base_2+"и" ;
                       Pl => base_1+"оє"+base_2
                     } ;
              Loc => table {
                       Sg => base_1+"ій"+base_2+"і" ;
                       Pl => base_1+"ій"+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ій"+base_2+"ою" ;
                         Pl => base_1+"ій"+base_2+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"ій"+base_2+"о" ;
                Pl => base_1+"ій"+base_2+"и"
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN227"
  } ;

mkN228 : Str -> N ;
mkN228 base =
  case base of {
    base_1+"і"+base_2@?+"ь" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"і"+base_2+"ь" ;
                       Pl => base_1+"о"+base_2+"і" --guessed
                     } ;
              Acc => table {
                       Sg => base_1+"і"+base_2+"ь" ;
                       Pl => nonExist
                     } ;
              Dat => table {
                       Sg => base_1+"о"+base_2+"і" ;
                       Pl => nonExist
                     } ;
              Gen => table {
                       Sg => base_1+"о"+base_2+"і" ;
                       Pl => nonExist
                     } ;
              Loc => table {
                       Sg => base_1+"о"+base_2+"і" ;
                       Pl => nonExist
                     } ;
              Instr => table {
                         Sg => base_1+"і"+base_2+"тю" ;
                         Pl => nonExist
                       }
            } ;
        Voc = table {
                Sg => base_1+"о"+base_2+"е" ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN228"
  } ;

mkN229 : Str -> N ;
mkN229 base =
  case base of {
    base_1+"і"+base_2@(?+?)+"ь" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"і"+base_2+"ь" ;
                       Pl => base_1+"о"+base_2+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"і"+base_2+"ь" ;
                       Pl => base_1+"о"+base_2+"і"
                     } ;
              Dat => table {
                       Sg => base_1+"о"+base_2+"і" ;
                       Pl => base_1+"о"+base_2+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"о"+base_2+"і" ;
                       Pl => base_1+"о"+base_2+"ей"
                     } ;
              Loc => table {
                       Sg => base_1+"о"+base_2+"і" ;
                       Pl => base_1+"о"+base_2+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"і"+base_2+"ю" ;
                         Pl => base_1+"о"+base_2+"ями"
                       }
            } ;
        Voc = table {
                Sg => base_1+"о"+base_2+"е" ;
                Pl => base_1+"о"+base_2+"і"
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN229"
  } ;

mkN230 : Str -> N ;
mkN230 base =
  case base of {
    base_1+"ій" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ій" ;
                       Pl => base_1+"ої"
                     } ;
              Acc => table {
                       Sg => base_1+"ій" ;
                       Pl => base_1+"ої"
                     } ;
              Dat => table {
                       Sg => base_1+"ою" ;
                       Pl => base_1+"оям"
                     } ;
              Gen => table {
                       Sg => base_1+"ою" ;
                       Pl => base_1+"оїв"
                     } ;
              Loc => table {
                       Sg => base_1+"ою" ;
                       Pl => base_1+"оях"
                     } ;
              Instr => table {
                         Sg => base_1+"оєм" ;
                         Pl => base_1+"оями"
                       }
            } ;
        Voc = table {
                Sg => base_1+"ою" ;
                Pl => base_1+"ої"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN230"
  } ;

mkN231 : Str -> N ;
mkN231 base =
  case base of {
    base_1 => lin N
      { s = table {
              Nom => table {
                       Sg => base_1 ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => base_1 ;
                       Pl => base_1+"і"
                     } ;
              Dat => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ей"
                     } ;
              Loc => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ю" ;
                         Pl => base_1+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"е" ;
                Pl => base_1+"і"
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN231"
  } ;

mkN232 : Str -> N ;
mkN232 base =
  case base of {
    base_1+"і"+base_2@?+"ь" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"і"+base_2+"ь" ;
                       Pl => base_1+"е"+base_2+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"і"+base_2+"ь" ;
                       Pl => base_1+"е"+base_2+"і"
                     } ;
              Dat => table {
                       Sg => base_1+"е"+base_2+"і" ;
                       Pl => base_1+"е"+base_2+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"е"+base_2+"і" ;
                       Pl => base_1+"е"+base_2+"ей"
                     } ;
              Loc => table {
                       Sg => base_1+"е"+base_2+"і" ;
                       Pl => base_1+"е"+base_2+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"і"+base_2+"лю" ;
                         Pl => base_1+"е"+base_2+"ями"
                       }
            } ;
        Voc = table {
                Sg => base_1+"е"+base_2+"е" ;
                Pl => base_1+"е"+base_2+"і"
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN232"
  } ;

mkN233 : Str -> N ;
mkN233 base =
  case base of {
    base_1+"іць" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"іць" ;
                       Pl => nonExist
                     } ;
              Acc => table {
                       Sg => base_1+"іць" ;
                       Pl => nonExist
                     } ;
              Dat => table {
                       Sg => base_1+"оці" ;
                       Pl => nonExist
                     } ;
              Gen => table {
                       Sg => base_1+"оці" ;
                       Pl => nonExist
                     } ;
              Loc => table {
                       Sg => base_1+"оці" ;
                       Pl => nonExist
                     } ;
              Instr => table {
                         Sg => base_1+"іццю" ;
                         Pl => nonExist
                       }
            } ;
        Voc = table {
                Sg => base_1+"оче" ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN233"
  } ;

mkN234 : Str -> N ;
mkN234 base =
  case base of {
    base_1+"я" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"я" ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"ю" ;
                       Pl => base_1+"ів"
                     } ;
              Dat => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ів"
                     } ;
              Loc => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"ею" ;
                         Pl => base_1+"ями"
                       }
            } ;
        Voc = table {
                Sg => base_1+"е" ;
                Pl => base_1+"і"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN234"
  } ;

mkN235 : Str -> N ;
mkN235 base =
  case base of {
    base_1+"я" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"я" ;
                       Pl => base_1+"я"
                     } ;
              Acc => table {
                       Sg => base_1+"я" ;
                       Pl => base_1+"я"
                     } ;
              Dat => table {
                       Sg => base_1+"ю" ;
                       Pl => base_1+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"я" ;
                       Pl => base_1+"ів"
                     } ;
              Loc => table {
                       Sg => base_1+"ю" ;
                       Pl => base_1+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"ям" ;
                         Pl => base_1+"ями"
                       }
            } ;
        Voc = table {
                Sg => base_1+"я" ;
                Pl => base_1+"я"
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN235"
  } ;

mkN236 : Str -> N ;
mkN236 base =
  case base of {
    base_1+"я" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"я" ;
                       Pl => base_1+"я"
                     } ;
              Acc => table {
                       Sg => base_1+"я" ;
                       Pl => base_1+"я"
                     } ;
              Dat => table {
                       Sg => base_1+"ю" ;
                       Pl => base_1+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"я" ;
                       Pl => base_1+"їв"
                     } ;
              Loc => table {
                       Sg => base_1+"ї" ;
                       Pl => base_1+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"ям" ;
                         Pl => base_1+"ями"
                       }
            } ;
        Voc = table {
                Sg => base_1+"я" ;
                Pl => base_1+"я"
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN236"
  } ;

mkN237 : Str -> N ;
mkN237 base =
  case base of {
    base_1+"хо" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"хо" ;
                       Pl => base_1+"ха"
                     } ;
              Acc => table {
                       Sg => base_1+"хо" ;
                       Pl => base_1+"ха"
                     } ;
              Dat => table {
                       Sg => base_1+"хові" ;
                       Pl => base_1+"хам"
                     } ;
              Gen => table {
                       Sg => base_1+"ха" ;
                       Pl => base_1+"х"
                     } ;
              Loc => table {
                       Sg => base_1+"сі" ;
                       Pl => base_1+"хах"
                     } ;
              Instr => table {
                         Sg => base_1+"хом" ;
                         Pl => base_1+"хами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"хо" ;
                Pl => base_1+"ха"
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN237"
  } ;

mkN238 : Str -> N ;
mkN238 base =
  case base of {
    base_1+"і"+base_2@("ст"|?) => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"і"+base_2 ;
                       Pl => base_1+"о"+base_2+"и"
                     } ;
              Acc => table {
                       Sg => base_1+"і"+base_2 ;
                       Pl => base_1+"о"+base_2+"и"
                     } ;
              Dat => table {
                       Sg => base_1+"о"+base_2+"ові" ;
                       Pl => base_1+"о"+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"о"+base_2+"у" ;
                       Pl => base_1+"о"+base_2+"ів"
                     } ;
              Loc => table {
                       Sg => base_1+"о"+base_2+"у" ;
                       Pl => base_1+"о"+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"о"+base_2+"ом" ;
                         Pl => base_1+"о"+base_2+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"о"+base_2+"е" ;
                Pl => base_1+"о"+base_2+"и"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN238"
  } ;

mkN239 : Str -> N ;
mkN239 base =
  case base of {
    base_1+"я" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"я" ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"ю" ;
                       Pl => base_1+"ь"
                     } ;
              Dat => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ь"
                     } ;
              Loc => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"ею" ;
                         Pl => base_1+"ями"
                       }
            } ;
        Voc = table {
                Sg => base_1+"е" ;
                Pl => base_1+"і"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN239"
  } ;

mkN240 : Str -> N ;
mkN240 base =
  case base of {
    base_1+"я" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"я" ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"ю" ;
                       Pl => base_1+"і"
                     } ;
              Dat => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ь"
                     } ;
              Loc => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"ею" ;
                         Pl => base_1+"ями"
                       }
            } ;
        Voc = table {
                Sg => base_1+"е" ;
                Pl => base_1+"і"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN240"
  } ;

mkN241 : Str -> N ;
mkN241 base =
  case base of {
    base_1+"і" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => nonExist ;
                       Pl => base_1+"і"
                     } ;
              Dat => table {
                       Sg => nonExist ;
                       Pl => base_1+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"ь" ;
                       Pl => base_1+"ь"
                     } ;
              Loc => table {
                       Sg => nonExist ;
                       Pl => base_1+"ях"
                     } ;
              Instr => table {
                         Sg => nonExist ;
                         Pl => base_1+"ями"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => base_1+"і"
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN241"
  } ;

mkN242 : Str -> N ;
mkN242 base =
  case base of {
    base_1+"ка" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ка" ;
                       Pl => base_1+"ки"
                     } ;
              Acc => table {
                       Sg => base_1+"ку" ;
                       Pl => base_1+"ок"
                     } ;
              Dat => table {
                       Sg => base_1+"ці" ;
                       Pl => base_1+"кам"
                     } ;
              Gen => table {
                       Sg => base_1+"ки" ;
                       Pl => base_1+"ок"
                     } ;
              Loc => table {
                       Sg => base_1+"ці" ;
                       Pl => base_1+"ках"
                     } ;
              Instr => table {
                         Sg => base_1+"кою" ;
                         Pl => base_1+"ками"
                       }
            } ;
        Voc = table {
                Sg => base_1+"ко" ;
                Pl => base_1+"ки"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN242"
  } ;

mkN243 : Str -> N ;
mkN243 base =
  case base of {
    base_1+"о"+base_2@?+"о"+base_3@? => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"о"+base_2+"о"+base_3 ;
                       Pl => base_1+"і"+base_2+base_3+"и"
                     } ;
              Acc => table {
                       Sg => base_1+"о"+base_2+"о"+base_3 ;
                       Pl => base_1+"і"+base_2+base_3+"и"
                     } ;
              Dat => table {
                       Sg => base_1+"о"+base_2+base_3+"ові" ;
                       Pl => base_1+"і"+base_2+base_3+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"о"+base_2+base_3+"у" ;
                       Pl => base_1+"і"+base_2+base_3+"ів"
                     } ;
              Loc => table {
                       Sg => base_1+"о"+base_2+base_3+"у" ;
                       Pl => base_1+"і"+base_2+base_3+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"о"+base_2+base_3+"ом" ;
                         Pl => base_1+"і"+base_2+base_3+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"о"+base_2+base_3+"у" ;
                Pl => base_1+"і"+base_2+base_3+"и"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN243"
  } ;

mkN244 : Str -> N ;
mkN244 base =
  case base of {
    base_1+"тя" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"тя" ;
                       Pl => base_1+"тя"
                     } ;
              Acc => table {
                       Sg => base_1+"тя" ;
                       Pl => base_1+"тя"
                     } ;
              Dat => table {
                       Sg => base_1+"тю" ;
                       Pl => base_1+"тям"
                     } ;
              Gen => table {
                       Sg => base_1+"тя" ;
                       Pl => base_1+"ь"
                     } ;
              Loc => table {
                       Sg => base_1+"ті" ;
                       Pl => base_1+"тях"
                     } ;
              Instr => table {
                         Sg => base_1+"тям" ;
                         Pl => base_1+"тями"
                       }
            } ;
        Voc = table {
                Sg => base_1+"тя" ;
                Pl => base_1+"тя"
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN244"
  } ;

mkN245 : Str -> N ;
mkN245 base =
  case base of {
    "о"+base_1+"ець" => lin N
      { s = table {
              Nom => table {
                       Sg => "о"+base_1+"ець" ;
                       Pl => "ві"+base_1+"ці"
                     } ;
              Acc => table {
                       Sg => "ві"+base_1+"ця" ;
                       Pl => "ві"+base_1+"ців"
                     } ;
              Dat => table {
                       Sg => "ві"+base_1+"цеві" ;
                       Pl => "ві"+base_1+"цям"
                     } ;
              Gen => table {
                       Sg => "ві"+base_1+"ця" ;
                       Pl => "ві"+base_1+"ців"
                     } ;
              Loc => table {
                       Sg => "ві"+base_1+"цеві" ;
                       Pl => "ві"+base_1+"цях"
                     } ;
              Instr => table {
                         Sg => "ві"+base_1+"цем" ;
                         Pl => "ві"+base_1+"цями"
                       }
            } ;
        Voc = table {
                Sg => "о"+base_1+"че" ;
                Pl => "ві"+base_1+"ці"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN245"
  } ;

mkN246 : Str -> N ;
mkN246 base =
  case base of {
    base_1+"о" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"о" ;
                       Pl => base_1+"и"
                     } ;
              Acc => table {
                       Sg => base_1+"а" ;
                       Pl => base_1
                     } ;
              Dat => table {
                       Sg => base_1+"ові" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"а" ;
                       Pl => base_1
                     } ;
              Loc => table {
                       Sg => base_1+"ові" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ом" ;
                         Pl => base_1+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"у" ;
                Pl => base_1+"и"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN246"
  } ;

mkN247 : Str -> N ;
mkN247 base =
  case base of {
    base_1+"і"+base_2@?+base_3@?+"я" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"і"+base_2+base_3+"я" ;
                       Pl => base_1+"е"+base_2+base_3+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"і"+base_2+base_3+"ю" ;
                       Pl => base_1+"е"+base_2+base_3+"і"
                     } ;
              Dat => table {
                       Sg => base_1+"і"+base_2+base_3+"і" ;
                       Pl => base_1+"е"+base_2+base_3+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"і"+base_2+base_3+"і" ;
                       Pl => base_1+"е"+base_2+"е"+base_3+"ь"
                     } ;
              Loc => table {
                       Sg => base_1+"і"+base_2+base_3+"і" ;
                       Pl => base_1+"е"+base_2+base_3+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"і"+base_2+base_3+"ею" ;
                         Pl => base_1+"е"+base_2+base_3+"ями"
                       }
            } ;
        Voc = table {
                Sg => base_1+"і"+base_2+base_3+"е" ;
                Pl => base_1+"е"+base_2+base_3+"і"
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN247"
  } ;

mkN248 : Str -> N ;
mkN248 base =
  case base of {
    base_1+"о"+base_2@?+"е"+base_3@?+"ь" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"о"+base_2+"е"+base_3+"ь" ;
                       Pl => base_1+"і"+base_2+base_3+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"і"+base_2+base_3+"я" ;
                       Pl => base_1+"і"+base_2+base_3+"ів"
                     } ;
              Dat => table {
                       Sg => base_1+"і"+base_2+base_3+"еві" ;
                       Pl => base_1+"і"+base_2+base_3+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"і"+base_2+base_3+"я" ;
                       Pl => base_1+"і"+base_2+base_3+"ів"
                     } ;
              Loc => table {
                       Sg => base_1+"і"+base_2+base_3+"еві" ;
                       Pl => base_1+"і"+base_2+base_3+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"і"+base_2+base_3+"ем" ;
                         Pl => base_1+"і"+base_2+base_3+"ями"
                       }
            } ;
        Voc = table {
                Sg => base_1+"і"+base_2+base_3+"ю" ;
                Pl => base_1+"і"+base_2+base_3+"і"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN248"
  } ;

mkN249 : Str -> N ;
mkN249 base =
  case base of {
    base_1+"о"+base_2@? => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"о"+base_2 ;
                       Pl => base_1+base_2+"и"
                     } ;
              Acc => table {
                       Sg => base_1+"о"+base_2 ;
                       Pl => base_1+base_2+"и"
                     } ;
              Dat => table {
                       Sg => base_1+base_2+"ові" ;
                       Pl => base_1+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+base_2+"у" ;
                       Pl => base_1+base_2+"ів"
                     } ;
              Loc => table {
                       Sg => base_1+base_2+"і" ;
                       Pl => base_1+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+base_2+"ом" ;
                         Pl => base_1+base_2+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+base_2+"е" ;
                Pl => base_1+base_2+"и"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN249"
  } ;

mkN250 : Str -> N ;
mkN250 base =
  case base of {
    base_1+base_2@?+"і" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+base_2+"і" ;
                       Pl => base_1+base_2+"і"
                     } ;
              Acc => table {
                       Sg => nonExist ;
                       Pl => base_1+base_2+"і"
                     } ;
              Dat => table {
                       Sg => nonExist ;
                       Pl => base_1+base_2+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"е"+base_2+"ь" ;
                       Pl => base_1+"е"+base_2+"ь"
                     } ;
              Loc => table {
                       Sg => nonExist ;
                       Pl => base_1+base_2+"ях"
                     } ;
              Instr => table {
                         Sg => nonExist ;
                         Pl => base_1+base_2+"ями"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => base_1+base_2+"і"
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN250"
  } ;

mkN251 : Str -> N ;
mkN251 base =
  case base of {
    base_1+"ець" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ець" ;
                       Pl => base_1+"ці"
                     } ;
              Acc => table {
                       Sg => base_1+"ця" ;
                       Pl => base_1+"ців"
                     } ;
              Dat => table {
                       Sg => base_1+"цеві" ;
                       Pl => base_1+"цям"
                     } ;
              Gen => table {
                       Sg => base_1+"ця" ;
                       Pl => base_1+"ців"
                     } ;
              Loc => table {
                       Sg => base_1+"цеві" ;
                       Pl => base_1+"цях"
                     } ;
              Instr => table {
                         Sg => base_1+"цем" ;
                         Pl => base_1+"цями"
                       }
            } ;
        Voc = table {
                Sg => base_1+"че" ;
                Pl => base_1+"ці"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN251"
  } ;

mkN252 : Str -> N ;
mkN252 base =
  case base of {
    base_1+"і"+base_2@?+"ь" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"і"+base_2+"ь" ;
                       Pl => base_1+"о"+base_2+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"і"+base_2+"ь" ;
                       Pl => base_1+"о"+base_2+"і"
                     } ;
              Dat => table {
                       Sg => base_1+"о"+base_2+"і" ;
                       Pl => base_1+"о"+base_2+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"о"+base_2+"і" ;
                       Pl => base_1+"о"+base_2+"ей"
                     } ;
              Loc => table {
                       Sg => base_1+"о"+base_2+"і" ;
                       Pl => base_1+"о"+base_2+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"і"+base_2+"лю" ;
                         Pl => base_1+"о"+base_2+"ями"
                       }
            } ;
        Voc = table {
                Sg => base_1+"о"+base_2+"е" ;
                Pl => base_1+"о"+base_2+"і"
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN252"
  } ;

mkN253 : Str -> N ;
mkN253 base =
  case base of {
    base_1+"о"+base_2@? => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"о"+base_2 ;
                       Pl => base_1+base_2+"и"
                     } ;
              Acc => table {
                       Sg => base_1+"о"+base_2 ;
                       Pl => base_1+base_2+"и"
                     } ;
              Dat => table {
                       Sg => base_1+base_2+"ові" ;
                       Pl => base_1+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+base_2+"у" ;
                       Pl => base_1+base_2+"ів"
                     } ;
              Loc => table {
                       Sg => base_1+base_2+"у" ;
                       Pl => base_1+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+base_2+"ом" ;
                         Pl => base_1+base_2+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+base_2+"у" ;
                Pl => base_1+base_2+"и"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN253"
  } ;

mkN254 : Str -> N ;
mkN254 base =
  case base of {
    base_1 => lin N
      { s = table {
              Nom => table {
                       Sg => base_1 ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => base_1 ;
                       Pl => base_1+"і"
                     } ;
              Dat => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ей"
                     } ;
              Loc => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"жю" ;
                         Pl => base_1+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"е" ;
                Pl => base_1+"і"
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN254"
  } ;

mkN255 : Str -> N ;
mkN255 base =
  case base of {
    base_1+"і"+base_2@? => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"і"+base_2 ;
                       Pl => base_1+"ьо"+base_2+"и"
                     } ;
              Acc => table {
                       Sg => base_1+"і"+base_2 ;
                       Pl => base_1+"ьо"+base_2+"и"
                     } ;
              Dat => table {
                       Sg => base_1+"ьо"+base_2+"ові" ;
                       Pl => base_1+"ьо"+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"ьо"+base_2+"у" ;
                       Pl => base_1+"ьо"+base_2+"ів"
                     } ;
              Loc => table {
                       Sg => base_1+"ьо"+base_2+"і" ;
                       Pl => base_1+"ьо"+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ьо"+base_2+"ом" ;
                         Pl => base_1+"ьо"+base_2+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"ьо"+base_2+"е" ;
                Pl => base_1+"ьо"+base_2+"и"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN255"
  } ;

mkN256 : Str -> N ;
mkN256 base =
  case base of {
    base_1+base_2@?+"и" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+base_2+"и" ;
                       Pl => base_1+base_2+"и"
                     } ;
              Acc => table {
                       Sg => nonExist ;
                       Pl => base_1+base_2+"и"
                     } ;
              Dat => table {
                       Sg => nonExist ;
                       Pl => base_1+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"о"+base_2 ;
                       Pl => base_1+"о"+base_2
                     } ;
              Loc => table {
                       Sg => nonExist ;
                       Pl => base_1+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => nonExist ;
                         Pl => base_1+base_2+"ами"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => base_1+base_2+"и"
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN256"
  } ;

mkN257 : Str -> N ;
mkN257 base =
  case base of {
    base_1+"ік" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ік" ;
                       Pl => base_1+"оки"
                     } ;
              Acc => table {
                       Sg => base_1+"ік" ;
                       Pl => base_1+"оки"
                     } ;
              Dat => table {
                       Sg => base_1+"окові" ;
                       Pl => base_1+"окам"
                     } ;
              Gen => table {
                       Sg => base_1+"оку" ;
                       Pl => base_1+"оків"
                     } ;
              Loc => table {
                       Sg => base_1+"оці" ;
                       Pl => base_1+"оках"
                     } ;
              Instr => table {
                         Sg => base_1+"оком" ;
                         Pl => base_1+"оками"
                       }
            } ;
        Voc = table {
                Sg => base_1+"оку" ;
                Pl => base_1+"оки"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN257"
  } ;

mkN258 : Str -> N ;
mkN258 base =
  case base of {
    base_1+"тя" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"тя" ;
                       Pl => base_1+"ті"
                     } ;
              Acc => table {
                       Sg => base_1+"тю" ;
                       Pl => base_1+"ті"
                     } ;
              Dat => table {
                       Sg => base_1+"ті" ;
                       Pl => base_1+"тям"
                     } ;
              Gen => table {
                       Sg => base_1+"ті" ;
                       Pl => base_1+"ей"
                     } ;
              Loc => table {
                       Sg => base_1+"ті" ;
                       Pl => base_1+"тях"
                     } ;
              Instr => table {
                         Sg => base_1+"тею" ;
                         Pl => base_1+"тями"
                       }
            } ;
        Voc = table {
                Sg => base_1+"те" ;
                Pl => base_1+"ті"
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN258"
  } ;

mkN259 : Str -> N ;
mkN259 base =
  case base of {
    base_1+"і"+base_2@? => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"і"+base_2 ;
                       Pl => base_1+"е"+base_2+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"і"+base_2 ;
                       Pl => base_1+"е"+base_2+"і"
                     } ;
              Dat => table {
                       Sg => base_1+"е"+base_2+"і" ;
                       Pl => base_1+"е"+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"е"+base_2+"і" ;
                       Pl => base_1+"е"+base_2+"ей"
                     } ;
              Loc => table {
                       Sg => base_1+"е"+base_2+"і" ;
                       Pl => base_1+"е"+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"і"+base_2+"чю" ;
                         Pl => base_1+"е"+base_2+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"е"+base_2+"е" ;
                Pl => base_1+"е"+base_2+"і"
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN259"
  } ;

mkN260 : Str -> N ;
mkN260 base =
  case base of {
    base_1+"ня" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ня" ;
                       Pl => base_1+"ня"
                     } ;
              Acc => table {
                       Sg => base_1+"ня" ;
                       Pl => base_1+"ня"
                     } ;
              Dat => table {
                       Sg => base_1+"ню" ;
                       Pl => base_1+"ням"
                     } ;
              Gen => table {
                       Sg => base_1+"ня" ;
                       Pl => base_1+"ь"
                     } ;
              Loc => table {
                       Sg => base_1+"ню" ;
                       Pl => base_1+"нях"
                     } ;
              Instr => table {
                         Sg => base_1+"ням" ;
                         Pl => base_1+"нями"
                       }
            } ;
        Voc = table {
                Sg => base_1+"ня" ;
                Pl => base_1+"ня"
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN260"
  } ;

mkN261 : Str -> N ;
mkN261 base =
  case base of {
    base_1+"тя" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"тя" ;
                       Pl => base_1+"тя"
                     } ;
              Acc => table {
                       Sg => base_1+"тя" ;
                       Pl => base_1+"тя"
                     } ;
              Dat => table {
                       Sg => base_1+"тю" ;
                       Pl => base_1+"тям"
                     } ;
              Gen => table {
                       Sg => base_1+"тя" ;
                       Pl => base_1+"ь"
                     } ;
              Loc => table {
                       Sg => base_1+"тю" ;
                       Pl => base_1+"тях"
                     } ;
              Instr => table {
                         Sg => base_1+"тям" ;
                         Pl => base_1+"тями"
                       }
            } ;
        Voc = table {
                Sg => base_1+"тя" ;
                Pl => base_1+"тя"
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN261"
  } ;

mkN262 : Str -> N ;
mkN262 base =
  case base of {
    base_1+base_2@?+"а" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+base_2+"а" ;
                       Pl => "і"+base_1+base_2+"и"
                     } ;
              Acc => table {
                       Sg => base_1+base_2+"у" ;
                       Pl => "і"+base_1+base_2+"и"
                     } ;
              Dat => table {
                       Sg => base_1+base_2+"і" ;
                       Pl => "і"+base_1+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+base_2+"и" ;
                       Pl => "і"+base_1+"о"+base_2
                     } ;
              Loc => table {
                       Sg => base_1+base_2+"і" ;
                       Pl => "і"+base_1+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+base_2+"ою" ;
                         Pl => "і"+base_1+base_2+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+base_2+"о" ;
                Pl => "і"+base_1+base_2+"и"
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN262"
  } ;

mkN263 : Str -> N ;
mkN263 base =
  case base of {
    base_1+"ля" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ля" ;
                       Pl => base_1+"ля"
                     } ;
              Acc => table {
                       Sg => base_1+"ля" ;
                       Pl => base_1+"ля"
                     } ;
              Dat => table {
                       Sg => base_1+"лю" ;
                       Pl => base_1+"лям"
                     } ;
              Gen => table {
                       Sg => base_1+"ля" ;
                       Pl => base_1+"ь"
                     } ;
              Loc => table {
                       Sg => base_1+"лі" ;
                       Pl => base_1+"лях"
                     } ;
              Instr => table {
                         Sg => base_1+"лям" ;
                         Pl => base_1+"лями"
                       }
            } ;
        Voc = table {
                Sg => base_1+"ля" ;
                Pl => base_1+"ля"
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN263"
  } ;

mkN264 : Str -> N ;
mkN264 base =
  case base of {
    base_1+"й"+base_2@?+"о" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"й"+base_2+"о" ;
                       Pl => base_1+"й"+base_2+"а"
                     } ;
              Acc => table {
                       Sg => base_1+"й"+base_2+"о" ;
                       Pl => base_1+"ї"+base_2
                     } ;
              Dat => table {
                       Sg => base_1+"й"+base_2+"ові" ;
                       Pl => base_1+"й"+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"й"+base_2+"а" ;
                       Pl => base_1+"ї"+base_2
                     } ;
              Loc => table {
                       Sg => base_1+"й"+base_2+"ові" ;
                       Pl => base_1+"й"+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"й"+base_2+"ом" ;
                         Pl => base_1+"й"+base_2+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"й"+base_2+"о" ;
                Pl => base_1+"й"+base_2+"а"
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN264"
  } ;

mkN265 : Str -> N ;
mkN265 base =
  case base of {
    base_1+"і"+base_2@? => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"і"+base_2 ;
                       Pl => base_1+"о"+base_2+"и"
                     } ;
              Acc => table {
                       Sg => base_1+"і"+base_2 ;
                       Pl => base_1+"о"+base_2+"и"
                     } ;
              Dat => table {
                       Sg => base_1+"о"+base_2+"ові" ;
                       Pl => base_1+"о"+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"о"+base_2+"а" ;
                       Pl => base_1+"о"+base_2+"ів"
                     } ;
              Loc => table {
                       Sg => base_1+"о"+base_2+"у" ;
                       Pl => base_1+"о"+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"о"+base_2+"ом" ;
                         Pl => base_1+"о"+base_2+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"о"+base_2+"у" ;
                Pl => base_1+"о"+base_2+"и"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN265"
  } ;

mkN266 : Str -> N ;
mkN266 base =
  case base of {
    base_1 => lin N
      { s = table {
              Nom => table {
                       Sg => base_1 ;
                       Pl => base_1+"и"
                     } ;
              Acc => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"ів"
                     } ;
              Dat => table {
                       Sg => base_1+"еві" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"ів"
                     } ;
              Loc => table {
                       Sg => base_1+"еві" ;
                       Pl => base_1+"ові"
                     } ;
              Instr => table {
                         Sg => base_1+"ем" ;
                         Pl => base_1+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"е" ;
                Pl => base_1+"и"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN266"
  } ;

mkN267 : Str -> N ;
mkN267 base =
  case base of {
    base_1+"те"+base_2@?+"ь" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"те"+base_2+"ь" ;
                       Pl => base_1+base_2+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"те"+base_2+"ь" ;
                       Pl => base_1+base_2+"і"
                     } ;
              Dat => table {
                       Sg => base_1+base_2+"еві" ;
                       Pl => base_1+base_2+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+base_2+"я" ;
                       Pl => base_1+base_2+"ів"
                     } ;
              Loc => table {
                       Sg => base_1+base_2+"ю" ;
                       Pl => base_1+base_2+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+base_2+"ем" ;
                         Pl => base_1+base_2+"ями"
                       }
            } ;
        Voc = table {
                Sg => base_1+base_2+"ю" ;
                Pl => base_1+base_2+"і"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN267"
  } ;

mkN268 : Str -> N ;
mkN268 base =
  case base of {
    base_1+"ьце" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ьце" ;
                       Pl => base_1+"ьца"
                     } ;
              Acc => table {
                       Sg => base_1+"ьце" ;
                       Pl => base_1+"ьца"
                     } ;
              Dat => table {
                       Sg => base_1+"ьцю" ;
                       Pl => base_1+"ьцям"
                     } ;
              Gen => table {
                       Sg => base_1+"ьця" ;
                       Pl => base_1+"ец"
                     } ;
              Loc => table {
                       Sg => base_1+"ьцю" ;
                       Pl => base_1+"ьцях"
                     } ;
              Instr => table {
                         Sg => base_1+"ьцем" ;
                         Pl => base_1+"ьцями"
                       }
            } ;
        Voc = table {
                Sg => base_1+"ьче" ;
                Pl => base_1+"ьца"
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN268"
  } ;

mkN269 : Str -> N ;
mkN269 base =
  case base of {
    base_1+"ьо" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ьо" ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"я" ;
                       Pl => base_1+"ів"
                     } ;
              Dat => table {
                       Sg => base_1+"еві" ;
                       Pl => base_1+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"я" ;
                       Pl => base_1+"ів"
                     } ;
              Loc => table {
                       Sg => base_1+"еві" ;
                       Pl => base_1+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"ем" ;
                         Pl => base_1+"ями"
                       }
            } ;
        Voc = table {
                Sg => base_1+"ю" ;
                Pl => base_1+"і"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN269"
  } ;

mkN270 : Str -> N ;
mkN270 base =
  case base of {
    base_1+base_2@?+"я" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+base_2+"я" ;
                       Pl => base_1+base_2+"і"
                     } ;
              Acc => table {
                       Sg => base_1+base_2+"ю" ;
                       Pl => base_1+"е"+base_2+"ь"
                     } ;
              Dat => table {
                       Sg => base_1+base_2+"і" ;
                       Pl => base_1+base_2+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+base_2+"і" ;
                       Pl => base_1+"е"+base_2+"ь"
                     } ;
              Loc => table {
                       Sg => base_1+base_2+"і" ;
                       Pl => base_1+base_2+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+base_2+"ею" ;
                         Pl => base_1+base_2+"ями"
                       }
            } ;
        Voc = table {
                Sg => base_1+base_2+"е" ;
                Pl => base_1+base_2+"і"
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN270"
  } ;

mkN271 : Str -> N ;
mkN271 base =
  case base of {
    base_1+"і"+base_2@? => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"і"+base_2 ;
                       Pl => base_1+"ьо"+base_2+"и"
                     } ;
              Acc => table {
                       Sg => base_1+"і"+base_2 ;
                       Pl => base_1+"ьо"+base_2+"и"
                     } ;
              Dat => table {
                       Sg => base_1+"ьо"+base_2+"ові" ;
                       Pl => base_1+"ьо"+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"ьо"+base_2+"у" ;
                       Pl => base_1+"ьо"+base_2+"ів"
                     } ;
              Loc => table {
                       Sg => base_1+"ьо"+base_2+"у" ;
                       Pl => base_1+"ьо"+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ьо"+base_2+"ом" ;
                         Pl => base_1+"ьо"+base_2+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"ьо"+base_2+"е" ;
                Pl => base_1+"ьо"+base_2+"и"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN271"
  } ;

mkN272 : Str -> N ;
mkN272 base =
  case base of {
    base_1+"і" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => nonExist ;
                       Pl => base_1+"і"
                     } ;
              Dat => table {
                       Sg => nonExist ;
                       Pl => base_1+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"ів" ;
                       Pl => base_1+"ів"
                     } ;
              Loc => table {
                       Sg => nonExist ;
                       Pl => base_1+"ях"
                     } ;
              Instr => table {
                         Sg => nonExist ;
                         Pl => base_1+"ями"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => base_1+"і"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN272"
  } ;

mkN273 : Str -> N ;
mkN273 base =
  case base of {
    base_1+"іг" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"іг" ;
                       Pl => base_1+"оги"
                     } ;
              Acc => table {
                       Sg => base_1+"ога" ;
                       Pl => base_1+"оги"
                     } ;
              Dat => table {
                       Sg => base_1+"огові" ;
                       Pl => base_1+"огам"
                     } ;
              Gen => table {
                       Sg => base_1+"ога" ;
                       Pl => base_1+"огів"
                     } ;
              Loc => table {
                       Sg => base_1+"огові" ;
                       Pl => base_1+"огах"
                     } ;
              Instr => table {
                         Sg => base_1+"огом" ;
                         Pl => base_1+"огами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"оже" ;
                Pl => base_1+"оги"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN273"
  } ;

mkN274 : Str -> N ;
mkN274 base =
  case base of {
    base_1+"і"+base_2@? => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"і"+base_2 ;
                       Pl => base_1+"о"+base_2+"и"
                     } ;
              Acc => table {
                       Sg => base_1+"о"+base_2+"а" ;
                       Pl => base_1+"о"+base_2+"и"
                     } ;
              Dat => table {
                       Sg => base_1+"о"+base_2+"ові" ;
                       Pl => base_1+"о"+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"о"+base_2+"а" ;
                       Pl => base_1+"о"+base_2+"ів"
                     } ;
              Loc => table {
                       Sg => base_1+"о"+base_2+"ові" ;
                       Pl => base_1+"о"+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"о"+base_2+"ом" ;
                         Pl => base_1+"о"+base_2+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"о"+base_2+"у" ;
                Pl => base_1+"о"+base_2+"и"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN274"
  } ;

mkN275 : Str -> N ;
mkN275 base =
  case base of {
    base_1+"і"+base_2@? => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"і"+base_2 ;
                       Pl => base_1+"ьо"+base_2+"и"
                     } ;
              Acc => table {
                       Sg => base_1+"і"+base_2 ;
                       Pl => base_1+"ьо"+base_2+"и"
                     } ;
              Dat => table {
                       Sg => base_1+"ьо"+base_2+"ові" ;
                       Pl => base_1+"ьо"+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"ьо"+base_2+"а" ;
                       Pl => base_1+"ьо"+base_2+"ів"
                     } ;
              Loc => table {
                       Sg => base_1+"ьо"+base_2+"і" ;
                       Pl => base_1+"ьо"+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ьо"+base_2+"ом" ;
                         Pl => base_1+"ьо"+base_2+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"ьо"+base_2+"е" ;
                Pl => base_1+"ьо"+base_2+"и"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN275"
  } ;

mkN276 : Str -> N ;
mkN276 base =
  case base of {
    base_1+"ин" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ин" ;
                       Pl => base_1+"и"
                     } ;
              Acc => table {
                       Sg => base_1+"ин" ;
                       Pl => base_1+"и"
                     } ;
              Dat => table {
                       Sg => base_1+"инові" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"ина" ;
                       Pl => base_1
                     } ;
              Loc => table {
                       Sg => base_1+"ині" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ином" ;
                         Pl => base_1+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"ине" ;
                Pl => base_1+"и"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN276"
  } ;

mkN277 : Str -> N ;
mkN277 base =
  case base of {
    base_1+"ий" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ий" ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"ого" ;
                       Pl => base_1+"і"
                     } ;
              Dat => table {
                       Sg => base_1+"ому" ;
                       Pl => base_1+"им"
                     } ;
              Gen => table {
                       Sg => base_1+"ого" ;
                       Pl => base_1+"их"
                     } ;
              Loc => table {
                       Sg => base_1+"ому" ;
                       Pl => base_1+"их"
                     } ;
              Instr => table {
                         Sg => base_1+"им" ;
                         Pl => base_1+"ими"
                       }
            } ;
        Voc = table {
                Sg => base_1+"ий" ;
                Pl => base_1+"і"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN277"
  } ;

mkN278 : Str -> N ;
mkN278 base =
  case base of {
    base_1+"ок" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ок" ;
                       Pl => base_1+"ки"
                     } ;
              Acc => table {
                       Sg => base_1+"ка" ;
                       Pl => base_1+"ків"
                     } ;
              Dat => table {
                       Sg => base_1+"кові" ;
                       Pl => base_1+"кам"
                     } ;
              Gen => table {
                       Sg => base_1+"ка" ;
                       Pl => base_1+"ків"
                     } ;
              Loc => table {
                       Sg => base_1+"кові" ;
                       Pl => base_1+"ках"
                     } ;
              Instr => table {
                         Sg => base_1+"ком" ;
                         Pl => base_1+"ками"
                       }
            } ;
        Voc = table {
                Sg => base_1+"че" ;
                Pl => base_1+"ки"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN278"
  } ;

mkN279 : Str -> N ;
mkN279 base =
  case base of {
    base_1+"о" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"о" ;
                       Pl => base_1+"и"
                     } ;
              Acc => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"и"
                     } ;
              Dat => table {
                       Sg => base_1+"ові" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"ів"
                     } ;
              Loc => table {
                       Sg => base_1+"ові" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ом" ;
                         Pl => base_1+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"у" ;
                Pl => base_1+"и"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN279"
  } ;

mkN280 : Str -> N ;
mkN280 base =
  case base of {
    base_1+"я" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"я" ;
                       Pl => base_1+"ї"
                     } ;
              Acc => table {
                       Sg => base_1+"ю" ;
                       Pl => base_1+"ї"
                     } ;
              Dat => table {
                       Sg => base_1+"ї" ;
                       Pl => base_1+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"ї" ;
                       Pl => base_1+"й"
                     } ;
              Loc => table {
                       Sg => base_1+"ї" ;
                       Pl => base_1+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"єю" ;
                         Pl => base_1+"ями"
                       }
            } ;
        Voc = table {
                Sg => base_1+"є" ;
                Pl => base_1+"ї"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN280"
  } ;

mkN281 : Str -> N ;
mkN281 base =
  case base of {
    base_1+"а" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"их"
                     } ;
              Dat => table {
                       Sg => base_1+"ій" ;
                       Pl => base_1+"им"
                     } ;
              Gen => table {
                       Sg => base_1+"ої" ;
                       Pl => base_1+"их"
                     } ;
              Loc => table {
                       Sg => base_1+"ій" ;
                       Pl => base_1+"их"
                     } ;
              Instr => table {
                         Sg => base_1+"ою" ;
                         Pl => base_1+"ими"
                       }
            } ;
        Voc = table {
                Sg => base_1+"а" ;
                Pl => base_1+"і"
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN281"
  } ;

mkN282 : Str -> N ;
mkN282 base =
  case base of {
    base_1 => lin N
      { s = table {
              Nom => table {
                       Sg => base_1 ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"я" ;
                       Pl => base_1+"і"
                     } ;
              Dat => table {
                       Sg => base_1+"еві" ;
                       Pl => base_1+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"я" ;
                       Pl => base_1+"ів"
                     } ;
              Loc => table {
                       Sg => base_1+"еві" ;
                       Pl => base_1+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"ем" ;
                         Pl => base_1+"ями"
                       }
            } ;
        Voc = table {
                Sg => base_1+"ю" ;
                Pl => base_1+"і"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN282"
  } ;

mkN283 : Str -> N ;
mkN283 base =
  case base of {
    base_1 => lin N
      { s = table {
              Nom => table {
                       Sg => base_1 ;
                       Pl => base_1+"и"
                     } ;
              Acc => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"ів"
                     } ;
              Dat => table {
                       Sg => base_1+"ові" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"ів"
                     } ;
              Loc => table {
                       Sg => base_1+"ові" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ом" ;
                         Pl => base_1+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1 ;
                Pl => base_1+"и"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN283"
  } ;

mkN284 : Str -> N ;
mkN284 base =
  case base of {
    base_1+"и" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"и" ;
                       Pl => base_1+"и"
                     } ;
              Acc => table {
                       Sg => nonExist ;
                       Pl => base_1+"и"
                     } ;
              Dat => table {
                       Sg => nonExist ;
                       Pl => base_1+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"ей" ;
                       Pl => base_1+"ей"
                     } ;
              Loc => table {
                       Sg => nonExist ;
                       Pl => base_1+"ях"
                     } ;
              Instr => table {
                         Sg => nonExist ;
                         Pl => base_1+"ми"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => base_1+"и"
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN284"
  } ;

mkN285 : Str -> N ;
mkN285 base =
  case base of {
    base_1+"а" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"а"
                     } ;
              Acc => table {
                       Sg => nonExist ;
                       Pl => base_1+"а"
                     } ;
              Dat => table {
                       Sg => nonExist ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"ів" ;
                       Pl => base_1+"ів"
                     } ;
              Loc => table {
                       Sg => nonExist ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => nonExist ;
                         Pl => base_1+"ами"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => base_1+"а"
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN285"
  } ;

mkN286 : Str -> N ;
mkN286 base =
  case base of {
    base_1+"е" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"е" ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"е" ;
                       Pl => base_1+"і"
                     } ;
              Dat => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"ей"
                     } ;
              Loc => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ем" ;
                         Pl => base_1+"има"
                       }
            } ;
        Voc = table {
                Sg => base_1+"е" ;
                Pl => base_1+"і"
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN286"
  } ;

mkN287 : Str -> N ;
mkN287 base =
  case base of {
    base_1+"що" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"що" ;
                       Pl => nonExist
                     } ;
              Acc => table {
                       Sg => base_1+"що" ;
                       Pl => nonExist
                     } ;
              Dat => table {
                       Sg => base_1+"чому" ;
                       Pl => nonExist
                     } ;
              Gen => table {
                       Sg => base_1+"чого" ;
                       Pl => nonExist
                     } ;
              Loc => table {
                       Sg => base_1+" на чому" ;
                       Pl => nonExist
                     } ;
              Instr => table {
                         Sg => base_1+" з чим" ;
                         Pl => nonExist
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN287"
  } ;

mkN288 : Str -> N ;
mkN288 base =
  case base of {
    base_1+"я" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"я" ;
                       Pl => base_1+"ї"
                     } ;
              Acc => table {
                       Sg => base_1+"ю" ;
                       Pl => base_1+"й"
                     } ;
              Dat => table {
                       Sg => base_1+"ї" ;
                       Pl => base_1+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"ї" ;
                       Pl => base_1+"й"
                     } ;
              Loc => table {
                       Sg => base_1+"ї" ;
                       Pl => base_1+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"єю" ;
                         Pl => base_1+"ями"
                       }
            } ;
        Voc = table {
                Sg => base_1+"є" ;
                Pl => base_1+"ї"
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN288"
  } ;

mkN289 : Str -> N ;
mkN289 base =
  case base of {
    base_1+"а" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"и"
                     } ;
              Acc => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"ів"
                     } ;
              Dat => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"и" ;
                       Pl => base_1+"ів"
                     } ;
              Loc => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ою" ;
                         Pl => base_1+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"о" ;
                Pl => base_1+"и"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN289"
  } ;

mkN290 : Str -> N ;
mkN290 base =
  case base of {
    base_1+"ь" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ь" ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"ь" ;
                       Pl => base_1+"і"
                     } ;
              Dat => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ей"
                     } ;
              Loc => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"сю" ;
                         Pl => base_1+"ями"
                       }
            } ;
        Voc = table {
                Sg => base_1+"е" ;
                Pl => base_1+"і"
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN290"
  } ;

mkN291 : Str -> N ;
mkN291 base =
  case base of {
    base_1+"шка" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"шка" ;
                       Pl => base_1+"шки"
                     } ;
              Acc => table {
                       Sg => base_1+"шку" ;
                       Pl => base_1+"шки"
                     } ;
              Dat => table {
                       Sg => base_1+"шці" ;
                       Pl => base_1+"шкам"
                     } ;
              Gen => table {
                       Sg => base_1+"шки" ;
                       Pl => base_1+"щок"
                     } ;
              Loc => table {
                       Sg => base_1+"шці" ;
                       Pl => base_1+"шках"
                     } ;
              Instr => table {
                         Sg => base_1+"шкою" ;
                         Pl => base_1+"шками"
                       }
            } ;
        Voc = table {
                Sg => base_1+"шко" ;
                Pl => base_1+"шки"
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN291"
  } ;

mkN292 : Str -> N ;
mkN292 base =
  case base of {
    base_1+"ока" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ока" ;
                       Pl => base_1+"оки"
                     } ;
              Acc => table {
                       Sg => base_1+"оку" ;
                       Pl => base_1+"оки"
                     } ;
              Dat => table {
                       Sg => base_1+"оці" ;
                       Pl => base_1+"окам"
                     } ;
              Gen => table {
                       Sg => base_1+"оки" ;
                       Pl => base_1+"ік"
                     } ;
              Loc => table {
                       Sg => base_1+"оці" ;
                       Pl => base_1+"оках"
                     } ;
              Instr => table {
                         Sg => base_1+"окою" ;
                         Pl => base_1+"оками"
                       }
            } ;
        Voc = table {
                Sg => base_1+"око" ;
                Pl => base_1+"оки"
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN292"
  } ;

mkN293 : Str -> N ;
mkN293 base =
  case base of {
    base_1+base_2@?+"е" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+base_2+"е" ;
                       Pl => base_1+base_2+"я"
                     } ;
              Acc => table {
                       Sg => base_1+base_2+"е" ;
                       Pl => base_1+base_2+"я"
                     } ;
              Dat => table {
                       Sg => base_1+base_2+"ю" ;
                       Pl => base_1+base_2+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+base_2+"я" ;
                       Pl => base_1+"е"+base_2+"ь"
                     } ;
              Loc => table {
                       Sg => base_1+base_2+"ю" ;
                       Pl => base_1+base_2+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+base_2+"ем" ;
                         Pl => base_1+base_2+"ями"
                       }
            } ;
        Voc = table {
                Sg => base_1+base_2+"е" ;
                Pl => base_1+base_2+"я"
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN293"
  } ;

mkN294 : Str -> N ;
mkN294 base =
  case base of {
    base_1+"о"+base_2@? => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"о"+base_2 ;
                       Pl => base_1+"о"+base_2+"и"
                     } ;
              Acc => table {
                       Sg => base_1+base_2+"а" ;
                       Pl => base_1+base_2+"ів"
                     } ;
              Dat => table {
                       Sg => base_1+base_2+"ові" ;
                       Pl => base_1+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"о"+base_2+"а" ;
                       Pl => base_1+"о"+base_2+"ів"
                     } ;
              Loc => table {
                       Sg => base_1+base_2+"ові" ;
                       Pl => base_1+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+base_2+"ом" ;
                         Pl => base_1+base_2+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+base_2+"у" ;
                Pl => base_1+base_2+"и"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN294"
  } ;

mkN295 : Str -> N ;
mkN295 base =
  case base of {
    base_1+"о" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"о" ;
                       Pl => nonExist
                     } ;
              Acc => table {
                       Sg => base_1+"о" ;
                       Pl => nonExist
                     } ;
              Dat => table {
                       Sg => base_1+"у" ;
                       Pl => nonExist
                     } ;
              Gen => table {
                       Sg => base_1+"у" ;
                       Pl => nonExist
                     } ;
              Loc => table {
                       Sg => base_1+"і" ;
                       Pl => nonExist
                     } ;
              Instr => table {
                         Sg => base_1+"ом" ;
                         Pl => nonExist
                       }
            } ;
        Voc = table {
                Sg => base_1+"о" ;
                Pl => nonExist
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN295"
  } ;

mkN296 : Str -> N ;
mkN296 base =
  case base of {
    base_1+"і"+base_2@?+"ь" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"і"+base_2+"ь" ;
                       Pl => base_1+"о"+base_2+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"і"+base_2+"ь" ;
                       Pl => base_1+"о"+base_2+"і"
                     } ;
              Dat => table {
                       Sg => base_1+"о"+base_2+"еві" ;
                       Pl => base_1+"о"+base_2+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"о"+base_2+"ю" ;
                       Pl => base_1+"о"+base_2+"ів"
                     } ;
              Loc => table {
                       Sg => base_1+"о"+base_2+"ю" ;
                       Pl => base_1+"о"+base_2+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"о"+base_2+"ем" ;
                         Pl => base_1+"о"+base_2+"ями"
                       }
            } ;
        Voc = table {
                Sg => base_1+"о"+base_2+"ю" ;
                Pl => base_1+"о"+base_2+"і"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN296"
  } ;

mkN297 : Str -> N ;
mkN297 base =
  case base of {
    base_1+"о" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"о" ;
                       Pl => base_1+"и"
                     } ;
              Acc => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"ів"
                     } ;
              Dat => table {
                       Sg => base_1+"ові" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"ів"
                     } ;
              Loc => table {
                       Sg => base_1+"ові" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ом" ;
                         Pl => base_1+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"о" ;
                Pl => base_1+"и"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN297"
  } ;

mkN298 : Str -> N ;
mkN298 base =
  case base of {
    base_1+"ом" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ом" ;
                       Pl => nonExist
                     } ;
              Acc => table {
                       Sg => nonExist ;
                       Pl => nonExist
                     } ;
              Dat => table {
                       Sg => nonExist ;
                       Pl => nonExist
                     } ;
              Gen => table {
                       Sg => base_1+"у" ;
                       Pl => nonExist
                     } ;
              Loc => table {
                       Sg => nonExist ;
                       Pl => nonExist
                     } ;
              Instr => table {
                         Sg => nonExist ;
                         Pl => nonExist
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN298"
  } ;

mkN299 : Str -> N ;
mkN299 base =
  case base of {
    base_1 => lin N
      { s = table {
              Nom => table {
                       Sg => base_1 ;
                       Pl => base_1+"и" --guessed
                     } ;
              Acc => table {
                       Sg => base_1 ;
                       Pl => nonExist
                     } ;
              Dat => table {
                       Sg => base_1+"ові" ;
                       Pl => nonExist
                     } ;
              Gen => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"ів" --guessed
                     } ;
              Loc => table {
                       Sg => base_1+"ові" ;
                       Pl => nonExist
                     } ;
              Instr => table {
                         Sg => base_1+"ом" ;
                         Pl => nonExist
                       }
            } ;
        Voc = table {
                Sg => base_1+"е" ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN299"
  } ;

mkN300 : Str -> N ;
mkN300 base =
  case base of {
    base_1+"і"+base_2@(?+?)+"ь" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"і"+base_2+"ь" ;
                       Pl => base_1+"о"+base_2+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"о"+base_2+"я" ;
                       Pl => base_1+"о"+base_2+"ей"
                     } ;
              Dat => table {
                       Sg => base_1+"о"+base_2+"еві" ;
                       Pl => base_1+"о"+base_2+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"о"+base_2+"я" ;
                       Pl => base_1+"о"+base_2+"ей"
                     } ;
              Loc => table {
                       Sg => base_1+"о"+base_2+"еві" ;
                       Pl => base_1+"о"+base_2+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"о"+base_2+"ем" ;
                         Pl => base_1+"о"+base_2+"ями"
                       }
            } ;
        Voc = table {
                Sg => base_1+"о"+base_2+"ю" ;
                Pl => base_1+"о"+base_2+"і"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN300"
  } ;

mkN301 : Str -> N ;
mkN301 base =
  case base of {
    base_1+"і"+base_2@(?+?) => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"і"+base_2 ;
                       Pl => base_1+"о"+base_2+"и"
                     } ;
              Acc => table {
                       Sg => base_1+"і"+base_2 ;
                       Pl => base_1+"о"+base_2+"и"
                     } ;
              Dat => table {
                       Sg => base_1+"о"+base_2+"ові" ;
                       Pl => base_1+"о"+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"о"+base_2+"а" ;
                       Pl => base_1+"о"+base_2+"ів"
                     } ;
              Loc => table {
                       Sg => base_1+"о"+base_2+"у" ;
                       Pl => base_1+"о"+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"о"+base_2+"ом" ;
                         Pl => base_1+"о"+base_2+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"о"+base_2+"е" ;
                Pl => base_1+"о"+base_2+"и"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN301"
  } ;

mkN302 : Str -> N ;
mkN302 base =
  case base of {
    base_1+"о"+base_2@?+"ь" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"о"+base_2+"ь" ;
                       Pl => base_1+base_2+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"о"+base_2+"ь" ;
                       Pl => base_1+base_2+"і"
                     } ;
              Dat => table {
                       Sg => base_1+base_2+"еві" ;
                       Pl => base_1+base_2+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+base_2+"я" ;
                       Pl => base_1+base_2+"ів"
                     } ;
              Loc => table {
                       Sg => base_1+base_2+"ю" ;
                       Pl => base_1+base_2+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+base_2+"ем" ;
                         Pl => base_1+base_2+"ями"
                       }
            } ;
        Voc = table {
                Sg => base_1+base_2+"ю" ;
                Pl => base_1+base_2+"і"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN302"
  } ;

mkN303 : Str -> N ;
mkN303 base =
  case base of {
    base_1+"я" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"я" ;
                       Pl => base_1+"я"
                     } ;
              Acc => table {
                       Sg => base_1+"я" ;
                       Pl => base_1+"я"
                     } ;
              Dat => table {
                       Sg => base_1+"ю" ;
                       Pl => base_1+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"я" ;
                       Pl => base_1+"ь"
                     } ;
              Loc => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"ям" ;
                         Pl => base_1+"ями"
                       }
            } ;
        Voc = table {
                Sg => base_1+"я" ;
                Pl => base_1+"я"
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN303"
  } ;

mkN304 : Str -> N ;
mkN304 base =
  case base of {
    "ві"+base_1+"ь" => lin N
      { s = table {
              Nom => table {
                       Sg => "ві"+base_1+"ь" ;
                       Pl => "о"+base_1+"і"
                     } ;
              Acc => table {
                       Sg => "ві"+base_1+"ь" ;
                       Pl => "о"+base_1+"і"
                     } ;
              Dat => table {
                       Sg => "о"+base_1+"і" ;
                       Pl => "о"+base_1+"ям"
                     } ;
              Gen => table {
                       Sg => "о"+base_1+"і" ;
                       Pl => "о"+base_1+"ей"
                     } ;
              Loc => table {
                       Sg => "о"+base_1+"і" ;
                       Pl => "о"+base_1+"ях"
                     } ;
              Instr => table {
                         Sg => "ві"+base_1+"сю" ;
                         Pl => "о"+base_1+"ями"
                       }
            } ;
        Voc = table {
                Sg => "о"+base_1+"е" ;
                Pl => "о"+base_1+"і"
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN304"
  } ;

mkN305 : Str -> N ;
mkN305 base =
  case base of {
    base_1+base_2@?+"це" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+base_2+"це" ;
                       Pl => base_1+base_2+"ця"
                     } ;
              Acc => table {
                       Sg => base_1+base_2+"це" ;
                       Pl => base_1+base_2+"ця"
                     } ;
              Dat => table {
                       Sg => base_1+base_2+"цю" ;
                       Pl => base_1+base_2+"цям"
                     } ;
              Gen => table {
                       Sg => base_1+base_2+"ця" ;
                       Pl => base_1+"ец"+base_2
                     } ;
              Loc => table {
                       Sg => base_1+base_2+"цю" ;
                       Pl => base_1+base_2+"цях"
                     } ;
              Instr => table {
                         Sg => base_1+base_2+"цем" ;
                         Pl => base_1+base_2+"цями"
                       }
            } ;
        Voc = table {
                Sg => base_1+base_2+"че" ;
                Pl => base_1+base_2+"ця"
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN305"
  } ;

mkN306 : Str -> N ;
mkN306 base =
  case base of {
    base_1+"'я" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"'я" ;
                       Pl => base_1+"'я"
                     } ;
              Acc => table {
                       Sg => base_1+"'я" ;
                       Pl => base_1+"'я"
                     } ;
              Dat => table {
                       Sg => base_1+"'ю" ;
                       Pl => base_1+"'ям"
                     } ;
              Gen => table {
                       Sg => base_1+"ені" ;
                       Pl => base_1+"'їв"
                     } ;
              Loc => table {
                       Sg => base_1+"'ї" ;
                       Pl => base_1+"'ях"
                     } ;
              Instr => table {
                         Sg => base_1+"'ям" ;
                         Pl => base_1+"'ями"
                       }
            } ;
        Voc = table {
                Sg => base_1+"'я" ;
                Pl => base_1+"'я"
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN306"
  } ;

mkN307 : Str -> N ;
mkN307 base =
  case base of {
    base_1+"ьо"+base_2@?+"а" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ьо"+base_2+"а" ;
                       Pl => base_1+"ьо"+base_2+"и"
                     } ;
              Acc => table {
                       Sg => base_1+"ьо"+base_2+"у" ;
                       Pl => base_1+"ьо"+base_2+"и"
                     } ;
              Dat => table {
                       Sg => base_1+"ьо"+base_2+"і" ;
                       Pl => base_1+"ьо"+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"ьо"+base_2+"и" ;
                       Pl => base_1+"і"+base_2
                     } ;
              Loc => table {
                       Sg => base_1+"ьо"+base_2+"і" ;
                       Pl => base_1+"ьо"+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ьо"+base_2+"ою" ;
                         Pl => base_1+"ьо"+base_2+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"ьо"+base_2+"о" ;
                Pl => base_1+"ьо"+base_2+"и"
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN307"
  } ;

mkN308 : Str -> N ;
mkN308 base =
  case base of {
    base_1+"і" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => nonExist ;
                       Pl => base_1+"і"
                     } ;
              Dat => table {
                       Sg => nonExist ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"ів" ;
                       Pl => base_1+"ів"
                     } ;
              Loc => table {
                       Sg => nonExist ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => nonExist ;
                         Pl => base_1+"ами"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => base_1+"і"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN308"
  } ;

mkN309 : Str -> N ;
mkN309 base =
  case base of {
    base_1+"р"+base_2@?+"ець" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"р"+base_2+"ець" ;
                       Pl => base_1+base_2+"ці"
                     } ;
              Acc => table {
                       Sg => base_1+base_2+"ця" ;
                       Pl => base_1+base_2+"ців"
                     } ;
              Dat => table {
                       Sg => base_1+base_2+"цеві" ;
                       Pl => base_1+base_2+"цям"
                     } ;
              Gen => table {
                       Sg => base_1+base_2+"ця" ;
                       Pl => base_1+base_2+"ців"
                     } ;
              Loc => table {
                       Sg => base_1+base_2+"цеві" ;
                       Pl => base_1+base_2+"цях"
                     } ;
              Instr => table {
                         Sg => base_1+base_2+"цем" ;
                         Pl => base_1+base_2+"цями"
                       }
            } ;
        Voc = table {
                Sg => base_1+base_2+"че" ;
                Pl => base_1+base_2+"ці"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN309"
  } ;

mkN310 : Str -> N ;
mkN310 base =
  case base of {
    base_1+"і"+base_2@? => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"і"+base_2 ;
                       Pl => base_1+"о"+base_2+"и"
                     } ;
              Acc => table {
                       Sg => base_1+"і"+base_2 ;
                       Pl => base_1+"о"+base_2+"и"
                     } ;
              Dat => table {
                       Sg => base_1+"о"+base_2+"ові" ;
                       Pl => base_1+"о"+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"о"+base_2+"а" ;
                       Pl => base_1+"і"+base_2
                     } ;
              Loc => table {
                       Sg => base_1+"о"+base_2+"у" ;
                       Pl => base_1+"о"+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"о"+base_2+"ом" ;
                         Pl => base_1+"о"+base_2+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"о"+base_2+"е" ;
                Pl => base_1+"о"+base_2+"и"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN310"
  } ;

mkN311 : Str -> N ;
mkN311 base =
  case base of {
    base_1+"и" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"и" ;
                       Pl => base_1+"и"
                     } ;
              Acc => table {
                       Sg => nonExist ;
                       Pl => base_1+"и"
                     } ;
              Dat => table {
                       Sg => nonExist ;
                       Pl => base_1+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"ів" ;
                       Pl => base_1+"ів"
                     } ;
              Loc => table {
                       Sg => nonExist ;
                       Pl => base_1+"ях"
                     } ;
              Instr => table {
                         Sg => nonExist ;
                         Pl => base_1+"ями"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => base_1+"и"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN311"
  } ;

mkN312 : Str -> N ;
mkN312 base =
  case base of {
    base_1+"е"+base_2@? => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"е"+base_2 ;
                       Pl => base_1+base_2+"и"
                     } ;
              Acc => table {
                       Sg => base_1+base_2+"а" ;
                       Pl => base_1+base_2+"ів"
                     } ;
              Dat => table {
                       Sg => base_1+base_2+"ові" ;
                       Pl => base_1+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+base_2+"а" ;
                       Pl => base_1+base_2+"ів"
                     } ;
              Loc => table {
                       Sg => base_1+base_2+"ові" ;
                       Pl => base_1+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+base_2+"ом" ;
                         Pl => base_1+base_2+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+base_2+"е" ;
                Pl => base_1+base_2+"и"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN312"
  } ;

mkN313 : Str -> N ;
mkN313 base =
  case base of {
    base_1 => lin N
      { s = table {
              Nom => table {
                       Sg => base_1 ;
                       Pl => base_1+"и"
                     } ;
              Acc => table {
                       Sg => base_1+"а" ;
                       Pl => base_1
                     } ;
              Dat => table {
                       Sg => base_1+"ові" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"а" ;
                       Pl => base_1
                     } ;
              Loc => table {
                       Sg => base_1+"ові" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ом" ;
                         Pl => base_1+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"е" ;
                Pl => base_1+"и"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN313"
  } ;

mkN314 : Str -> N ;
mkN314 base =
  case base of {
    base_1+"оє"+base_2@?+"ь" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"оє"+base_2+"ь" ;
                       Pl => base_1+"ій"+base_2+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"ій"+base_2+"я" ;
                       Pl => base_1+"ій"+base_2+"ів"
                     } ;
              Dat => table {
                       Sg => base_1+"ій"+base_2+"еві" ;
                       Pl => base_1+"ій"+base_2+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"ій"+base_2+"я" ;
                       Pl => base_1+"ій"+base_2+"ів"
                     } ;
              Loc => table {
                       Sg => base_1+"ій"+base_2+"еві" ;
                       Pl => base_1+"ій"+base_2+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"ій"+base_2+"ем" ;
                         Pl => base_1+"ій"+base_2+"ями"
                       }
            } ;
        Voc = table {
                Sg => base_1+"ій"+base_2+"ю" ;
                Pl => base_1+"ій"+base_2+"і"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN314"
  } ;

mkN315 : Str -> N ;
mkN315 base =
  case base of {
    base_1+"ец"+base_2@? => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ец"+base_2 ;
                       Pl => base_1+base_2+"ці"
                     } ;
              Acc => table {
                       Sg => base_1+base_2+"ця" ;
                       Pl => base_1+base_2+"ців"
                     } ;
              Dat => table {
                       Sg => base_1+base_2+"цеві" ;
                       Pl => base_1+base_2+"цям"
                     } ;
              Gen => table {
                       Sg => base_1+base_2+"ця" ;
                       Pl => base_1+base_2+"ців"
                     } ;
              Loc => table {
                       Sg => base_1+base_2+"цеві" ;
                       Pl => base_1+base_2+"цях"
                     } ;
              Instr => table {
                         Sg => base_1+base_2+"цем" ;
                         Pl => base_1+base_2+"цями"
                       }
            } ;
        Voc = table {
                Sg => base_1+base_2+"цю" ;
                Pl => base_1+base_2+"ці"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN315"
  } ;

mkN316 : Str -> N ;
mkN316 base =
  case base of {
    base_1+"е"+base_2@?+"е"+base_3@?+"ь" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"е"+base_2+"е"+base_3+"ь" ;
                       Pl => base_1+"і"+base_2+base_3+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"е"+base_2+"е"+base_3+"ь" ;
                       Pl => base_1+"і"+base_2+base_3+"і"
                     } ;
              Dat => table {
                       Sg => base_1+"і"+base_2+base_3+"еві" ;
                       Pl => base_1+"і"+base_2+base_3+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"і"+base_2+base_3+"я" ;
                       Pl => base_1+"і"+base_2+base_3+"ів"
                     } ;
              Loc => table {
                       Sg => base_1+"і"+base_2+base_3+"ю" ;
                       Pl => base_1+"і"+base_2+base_3+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"і"+base_2+base_3+"ем" ;
                         Pl => base_1+"і"+base_2+base_3+"ями"
                       }
            } ;
        Voc = table {
                Sg => base_1+"і"+base_2+base_3+"ю" ;
                Pl => base_1+"і"+base_2+base_3+"і"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN316"
  } ;

mkN317 : Str -> N ;
mkN317 base =
  case base of {
    base_1+"к" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"к" ;
                       Pl => base_1+"ки"
                     } ;
              Acc => table {
                       Sg => base_1+"к" ;
                       Pl => base_1+"ки"
                     } ;
              Dat => table {
                       Sg => base_1+"кові" ;
                       Pl => base_1+"кам"
                     } ;
              Gen => table {
                       Sg => base_1+"ку" ;
                       Pl => base_1+"ків"
                     } ;
              Loc => table {
                       Sg => base_1+"ку" ;
                       Pl => base_1+"ках"
                     } ;
              Instr => table {
                         Sg => base_1+"ком" ;
                         Pl => base_1+"ками"
                       }
            } ;
        Voc = table {
                Sg => base_1+"че" ;
                Pl => base_1+"ки"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN317"
  } ;

mkN318 : Str -> N ;
mkN318 base =
  case base of {
    base_1 => lin N
      { s = table {
              Nom => table {
                       Sg => base_1 ;
                       Pl => base_1+"а"
                     } ;
              Acc => table {
                       Sg => base_1 ;
                       Pl => base_1+"а"
                     } ;
              Dat => table {
                       Sg => base_1+"ові" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"ів"
                     } ;
              Loc => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ом" ;
                         Pl => base_1+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"е" ;
                Pl => base_1+"а"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN318"
  } ;

mkN319 : Str -> N ;
mkN319 base =
  case base of {
    base_1 => lin N
      { s = table {
              Nom => table {
                       Sg => base_1 ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => base_1 ;
                       Pl => base_1+"і"
                     } ;
              Dat => table {
                       Sg => base_1+"еві" ;
                       Pl => base_1+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"ю" ;
                       Pl => base_1+"ів"
                     } ;
              Loc => table {
                       Sg => base_1+"ю" ;
                       Pl => base_1+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"ем" ;
                         Pl => base_1+"ями"
                       }
            } ;
        Voc = table {
                Sg => base_1+"ю" ;
                Pl => base_1+"і"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN319"
  } ;

mkN320 : Str -> N ;
mkN320 base =
  case base of {
    base_1+"в"+base_2@?+"ць" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"в"+base_2+"ць" ;
                       Pl => base_1+base_2+"вці"
                     } ;
              Acc => table {
                       Sg => base_1+base_2+"вця" ;
                       Pl => base_1+base_2+"вців"
                     } ;
              Dat => table {
                       Sg => base_1+base_2+"вцеві" ;
                       Pl => base_1+base_2+"вцям"
                     } ;
              Gen => table {
                       Sg => base_1+base_2+"вця" ;
                       Pl => base_1+base_2+"вців"
                     } ;
              Loc => table {
                       Sg => base_1+base_2+"вцеві" ;
                       Pl => base_1+base_2+"вцях"
                     } ;
              Instr => table {
                         Sg => base_1+base_2+"вцем" ;
                         Pl => base_1+base_2+"вцями"
                       }
            } ;
        Voc = table {
                Sg => base_1+base_2+"вче" ;
                Pl => base_1+base_2+"вці"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN320"
  } ;

mkN321 : Str -> N ;
mkN321 base =
  case base of {
    base_1+"і"+base_2@? => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"і"+base_2 ;
                       Pl => base_1+"о"+base_2+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"і"+base_2 ;
                       Pl => base_1+"о"+base_2+"і"
                     } ;
              Dat => table {
                       Sg => base_1+"о"+base_2+"еві" ;
                       Pl => base_1+"о"+base_2+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"о"+base_2+"я" ;
                       Pl => base_1+"о"+base_2+"ів"
                     } ;
              Loc => table {
                       Sg => base_1+"о"+base_2+"ю" ;
                       Pl => base_1+"о"+base_2+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"о"+base_2+"ем" ;
                         Pl => base_1+"о"+base_2+"ями"
                       }
            } ;
        Voc = table {
                Sg => base_1+"о"+base_2+"ю" ;
                Pl => base_1+"о"+base_2+"і"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN321"
  } ;

mkN322 : Str -> N ;
mkN322 base =
  case base of {
    base_1+"і"+base_2@("вш"|?) => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"і"+base_2 ;
                       Pl => base_1+"о"+base_2+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"і"+base_2 ;
                       Pl => base_1+"о"+base_2+"і"
                     } ;
              Dat => table {
                       Sg => base_1+"о"+base_2+"еві" ;
                       Pl => base_1+"о"+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"о"+base_2+"а" ;
                       Pl => base_1+"о"+base_2+"ів"
                     } ;
              Loc => table {
                       Sg => base_1+"о"+base_2+"у" ;
                       Pl => base_1+"о"+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"о"+base_2+"ем" ;
                         Pl => base_1+"о"+base_2+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"о"+base_2+"у" ;
                Pl => base_1+"о"+base_2+"і"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN322"
  } ;

mkN323 : Str -> N ;
mkN323 base =
  case base of {
    base_1+"і"+base_2@? => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"і"+base_2 ;
                       Pl => base_1+"о"+base_2+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"о"+base_2+"а" ;
                       Pl => base_1+"о"+base_2+"ів"
                     } ;
              Dat => table {
                       Sg => base_1+"о"+base_2+"еві" ;
                       Pl => base_1+"о"+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"о"+base_2+"а" ;
                       Pl => base_1+"о"+base_2+"ів"
                     } ;
              Loc => table {
                       Sg => base_1+"о"+base_2+"еві" ;
                       Pl => base_1+"о"+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"о"+base_2+"ем" ;
                         Pl => base_1+"о"+base_2+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"о"+base_2+"е" ;
                Pl => base_1+"о"+base_2+"і"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN323"
  } ;

mkN324 : Str -> N ;
mkN324 base =
  case base of {
    base_1+"н"+base_2@?+"ць" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"н"+base_2+"ць" ;
                       Pl => base_1+base_2+"нці"
                     } ;
              Acc => table {
                       Sg => base_1+base_2+"нця" ;
                       Pl => base_1+base_2+"нців"
                     } ;
              Dat => table {
                       Sg => base_1+base_2+"нцеві" ;
                       Pl => base_1+base_2+"нцям"
                     } ;
              Gen => table {
                       Sg => base_1+base_2+"нця" ;
                       Pl => base_1+base_2+"нців"
                     } ;
              Loc => table {
                       Sg => base_1+base_2+"нцеві" ;
                       Pl => base_1+base_2+"нцях"
                     } ;
              Instr => table {
                         Sg => base_1+base_2+"нцем" ;
                         Pl => base_1+base_2+"нцями"
                       }
            } ;
        Voc = table {
                Sg => base_1+base_2+"нче" ;
                Pl => base_1+base_2+"нці"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN324"
  } ;

mkN325 : Str -> N ;
mkN325 base =
  case base of {
    base_1+"їн" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"їн" ;
                       Pl => base_1+"ї"
                     } ;
              Acc => table {
                       Sg => base_1+"їна" ;
                       Pl => base_1+"їв"
                     } ;
              Dat => table {
                       Sg => base_1+"їнові" ;
                       Pl => base_1+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"їна" ;
                       Pl => base_1+"їв"
                     } ;
              Loc => table {
                       Sg => base_1+"їнові" ;
                       Pl => base_1+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"їном" ;
                         Pl => base_1+"ями"
                       }
            } ;
        Voc = table {
                Sg => base_1+"їне" ;
                Pl => base_1+"ї"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN325"
  } ;

mkN326 : Str -> N ;
mkN326 base =
  case base of {
    base_1+"а" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"а"
                     } ;
              Acc => table {
                       Sg => nonExist ;
                       Pl => base_1
                     } ;
              Dat => table {
                       Sg => nonExist ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1 ;
                       Pl => base_1
                     } ;
              Loc => table {
                       Sg => nonExist ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => nonExist ;
                         Pl => base_1+"ами"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => base_1+"а"
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN326"
  } ;

mkN327 : Str -> N ;
mkN327 base =
  case base of {
    base_1+"є" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"є" ;
                       Pl => base_1+"я"
                     } ;
              Acc => table {
                       Sg => base_1+"є" ;
                       Pl => base_1+"я"
                     } ;
              Dat => table {
                       Sg => base_1+"ю" ;
                       Pl => base_1+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"я" ;
                       Pl => base_1+"й"
                     } ;
              Loc => table {
                       Sg => base_1+"ю" ;
                       Pl => base_1+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"єм" ;
                         Pl => base_1+"ями"
                       }
            } ;
        Voc = table {
                Sg => base_1+"є" ;
                Pl => base_1+"я"
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN327"
  } ;

mkN328 : Str -> N ;
mkN328 base =
  case base of {
    base_1+"ьо" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ьо" ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"ьо" ;
                       Pl => base_1+"і"
                     } ;
              Dat => table {
                       Sg => base_1+"еві" ;
                       Pl => base_1+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"я" ;
                       Pl => base_1+"ів"
                     } ;
              Loc => table {
                       Sg => base_1+"еві" ;
                       Pl => base_1+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"ем" ;
                         Pl => base_1+"ями"
                       }
            } ;
        Voc = table {
                Sg => base_1+"ю" ;
                Pl => base_1+"і"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN328"
  } ;

mkN329 : Str -> N ;
mkN329 base =
  case base of {
    base_1+"ь" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ь" ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"ь" ;
                       Pl => base_1+"ей"
                     } ;
              Dat => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ей"
                     } ;
              Loc => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"ю" ;
                         Pl => base_1+"ями"
                       }
            } ;
        Voc = table {
                Sg => base_1+"е" ;
                Pl => base_1+"і"
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN329"
  } ;

mkN330 : Str -> N ;
mkN330 base =
  case base of {
    base_1+"я" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"я" ;
                       Pl => base_1+"ї"
                     } ;
              Acc => table {
                       Sg => base_1+"ю" ;
                       Pl => base_1+"ї"
                     } ;
              Dat => table {
                       Sg => base_1+"їй" ;
                       Pl => base_1+"їм"
                     } ;
              Gen => table {
                       Sg => base_1+"єї" ;
                       Pl => base_1+"їх"
                     } ;
              Loc => table {
                       Sg => base_1+"їй" ;
                       Pl => base_1+"їх"
                     } ;
              Instr => table {
                         Sg => base_1+"єю" ;
                         Pl => base_1+"їми"
                       }
            } ;
        Voc = table {
                Sg => base_1+"я" ;
                Pl => base_1+"ї"
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN330"
  } ;

mkN331 : Str -> N ;
mkN331 base =
  case base of {
    base_1+"і"+base_2@? => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"і"+base_2 ;
                       Pl => base_1+"о"+base_2+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"і"+base_2 ;
                       Pl => base_1+"о"+base_2+"і"
                     } ;
              Dat => table {
                       Sg => base_1+"о"+base_2+"і" ;
                       Pl => base_1+"о"+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"о"+base_2+"і" ;
                       Pl => base_1+"о"+base_2+"ів"
                     } ;
              Loc => table {
                       Sg => base_1+"о"+base_2+"і" ;
                       Pl => base_1+"о"+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"і"+base_2+"шю" ;
                         Pl => base_1+"о"+base_2+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"о"+base_2+"е" ;
                Pl => base_1+"о"+base_2+"і"
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN331"
  } ;

mkN332 : Str -> N ;
mkN332 base =
  case base of {
    base_1+"е" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"е" ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"е" ;
                       Pl => base_1
                     } ;
              Dat => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"і" ;
                       Pl => base_1
                     } ;
              Loc => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ею" ;
                         Pl => base_1+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"е" ;
                Pl => base_1+"і"
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN332"
  } ;

mkN333 : Str -> N ;
mkN333 base =
  case base of {
    base_1+"і" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => nonExist ;
                       Pl => base_1+"і"
                     } ;
              Dat => table {
                       Sg => nonExist ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"ів" ;
                       Pl => base_1+"ів"
                     } ;
              Loc => table {
                       Sg => nonExist ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => nonExist ;
                         Pl => base_1+"ами"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => base_1+"і"
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN333"
  } ;

mkN334 : Str -> N ;
mkN334 base =
  case base of {
    base_1+"ля" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ля" ;
                       Pl => base_1+"ля"
                     } ;
              Acc => table {
                       Sg => base_1+"ля" ;
                       Pl => base_1+"ей"
                     } ;
              Dat => table {
                       Sg => base_1+"лю" ;
                       Pl => base_1+"лям"
                     } ;
              Gen => table {
                       Sg => base_1+"ля" ;
                       Pl => base_1+"ей"
                     } ;
              Loc => table {
                       Sg => base_1+"лі" ;
                       Pl => base_1+"лях"
                     } ;
              Instr => table {
                         Sg => base_1+"лям" ;
                         Pl => base_1+"лями"
                       }
            } ;
        Voc = table {
                Sg => base_1+"ля" ;
                Pl => base_1+"ля"
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN334"
  } ;

mkN335 : Str -> N ;
mkN335 base =
  case base of {
    "по"+base_1+"ля" => lin N
      { s = table {
              Nom => table {
                       Sg => "по"+base_1+"ля" ;
                       Pl => "по"+base_1+"ля"
                     } ;
              Acc => table {
                       Sg => "по"+base_1+"ля" ;
                       Pl => base_1+"ей"
                     } ;
              Dat => table {
                       Sg => "по"+base_1+"лю" ;
                       Pl => "по"+base_1+"лям"
                     } ;
              Gen => table {
                       Sg => "по"+base_1+"ля" ;
                       Pl => base_1+"ей"
                     } ;
              Loc => table {
                       Sg => "по"+base_1+"лі" ;
                       Pl => "по"+base_1+"лях"
                     } ;
              Instr => table {
                         Sg => "по"+base_1+"лям" ;
                         Pl => "по"+base_1+"лями"
                       }
            } ;
        Voc = table {
                Sg => "по"+base_1+"ля" ;
                Pl => "по"+base_1+"ля"
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN335"
  } ;

mkN336 : Str -> N ;
mkN336 base =
  case base of {
    base_1+"дя" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"дя" ;
                       Pl => base_1+"ді"
                     } ;
              Acc => table {
                       Sg => base_1+"дю" ;
                       Pl => base_1+"ді"
                     } ;
              Dat => table {
                       Sg => base_1+"ді" ;
                       Pl => base_1+"дям"
                     } ;
              Gen => table {
                       Sg => base_1+"ді" ;
                       Pl => base_1+"ей"
                     } ;
              Loc => table {
                       Sg => base_1+"ді" ;
                       Pl => base_1+"дях"
                     } ;
              Instr => table {
                         Sg => base_1+"дею" ;
                         Pl => base_1+"дями"
                       }
            } ;
        Voc = table {
                Sg => base_1+"де" ;
                Pl => base_1+"ді"
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN336"
  } ;

mkN337 : Str -> N ;
mkN337 base =
  case base of {
    base_1+"я" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"я" ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"ю" ;
                       Pl => base_1+"і"
                     } ;
              Dat => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"і" ;
                       Pl => base_1
                     } ;
              Loc => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"ею" ;
                         Pl => base_1+"ями"
                       }
            } ;
        Voc = table {
                Sg => base_1+"е" ;
                Pl => base_1+"і"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN337"
  } ;

mkN338 : Str -> N ;
mkN338 base =
  case base of {
    base_1+"я" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"я" ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"ю" ;
                       Pl => base_1
                     } ;
              Dat => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"і" ;
                       Pl => base_1
                     } ;
              Loc => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"ею" ;
                         Pl => base_1+"ями"
                       }
            } ;
        Voc = table {
                Sg => base_1+"е" ;
                Pl => base_1+"і"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN338"
  } ;

mkN339 : Str -> N ;
mkN339 base =
  case base of {
    base_1+"і" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => nonExist ;
                       Pl => base_1+"і"
                     } ;
              Dat => table {
                       Sg => nonExist ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"ей" ;
                       Pl => base_1+"ей"
                     } ;
              Loc => table {
                       Sg => nonExist ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => nonExist ;
                         Pl => base_1+"ами"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => base_1+"і"
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN339"
  } ;

mkN340 : Str -> N ;
mkN340 base =
  case base of {
    base_1+"я" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"я" ;
                       Pl => base_1+"я"
                     } ;
              Acc => table {
                       Sg => nonExist ;
                       Pl => base_1+"я"
                     } ;
              Dat => table {
                       Sg => nonExist ;
                       Pl => base_1+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"ів" ;
                       Pl => base_1+"ів"
                     } ;
              Loc => table {
                       Sg => nonExist ;
                       Pl => base_1+"ях"
                     } ;
              Instr => table {
                         Sg => nonExist ;
                         Pl => base_1+"ями"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => base_1+"я"
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN340"
  } ;

mkN341 : Str -> N ;
mkN341 base =
  case base of {
    base_1+"ї" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ї" ;
                       Pl => base_1+"ї"
                     } ;
              Acc => table {
                       Sg => nonExist ;
                       Pl => base_1+"ї"
                     } ;
              Dat => table {
                       Sg => nonExist ;
                       Pl => base_1+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"й" ;
                       Pl => base_1+"й"
                     } ;
              Loc => table {
                       Sg => nonExist ;
                       Pl => base_1+"ях"
                     } ;
              Instr => table {
                         Sg => nonExist ;
                         Pl => base_1+"ями"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => base_1+"ї"
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN341"
  } ;

mkN342 : Str -> N ;
mkN342 base =
  case base of {
    base_1+"і" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => nonExist ;
                       Pl => base_1+"ів"
                     } ;
              Dat => table {
                       Sg => nonExist ;
                       Pl => base_1+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"ів" ;
                       Pl => base_1+"ів"
                     } ;
              Loc => table {
                       Sg => nonExist ;
                       Pl => base_1+"ях"
                     } ;
              Instr => table {
                         Sg => nonExist ;
                         Pl => base_1+"ями"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => base_1+"і"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN342"
  } ;

mkN343 : Str -> N ;
mkN343 base =
  case base of {
    base_1+base_2@?+"і" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+base_2+"і" ;
                       Pl => base_1+base_2+"і"
                     } ;
              Acc => table {
                       Sg => nonExist ;
                       Pl => base_1+base_2+"і"
                     } ;
              Dat => table {
                       Sg => nonExist ;
                       Pl => base_1+base_2+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"е"+base_2 ;
                       Pl => base_1+"е"+base_2
                     } ;
              Loc => table {
                       Sg => nonExist ;
                       Pl => base_1+base_2+"ях"
                     } ;
              Instr => table {
                         Sg => nonExist ;
                         Pl => base_1+base_2+"ями"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => base_1+base_2+"і"
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN343"
  } ;

mkN344 : Str -> N ;
mkN344 base =
  case base of {
    base_1+"і" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => nonExist ;
                       Pl => base_1+"і"
                     } ;
              Dat => table {
                       Sg => nonExist ;
                       Pl => base_1+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"ей" ;
                       Pl => base_1+"ей"
                     } ;
              Loc => table {
                       Sg => nonExist ;
                       Pl => base_1+"ях"
                     } ;
              Instr => table {
                         Sg => nonExist ;
                         Pl => base_1+"ями"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => base_1+"і"
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN344"
  } ;

mkN345 : Str -> N ;
mkN345 base =
  case base of {
    base_1+base_2@?+"и" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+base_2+"и" ;
                       Pl => base_1+base_2+"и"
                     } ;
              Acc => table {
                       Sg => nonExist ;
                       Pl => base_1+"о"+base_2
                     } ;
              Dat => table {
                       Sg => nonExist ;
                       Pl => base_1+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"о"+base_2 ;
                       Pl => base_1+"о"+base_2
                     } ;
              Loc => table {
                       Sg => nonExist ;
                       Pl => base_1+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => nonExist ;
                         Pl => base_1+base_2+"ами"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => base_1+base_2+"и"
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN345"
  } ;

mkN346 : Str -> N ;
mkN346 base =
  case base of {
    base_1+"і"+base_2@?+"ка" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"і"+base_2+"ка" ;
                       Pl => base_1+"і"+base_2+"ки"
                     } ;
              Acc => table {
                       Sg => base_1+"і"+base_2+"ку" ;
                       Pl => base_1+"і"+base_2+"ки"
                     } ;
              Dat => table {
                       Sg => base_1+"і"+base_2+"ці" ;
                       Pl => base_1+"і"+base_2+"кам"
                     } ;
              Gen => table {
                       Sg => base_1+"і"+base_2+"ки" ;
                       Pl => base_1+"о"+base_2+"ок"
                     } ;
              Loc => table {
                       Sg => base_1+"і"+base_2+"ці" ;
                       Pl => base_1+"і"+base_2+"ках"
                     } ;
              Instr => table {
                         Sg => base_1+"і"+base_2+"кою" ;
                         Pl => base_1+"і"+base_2+"ками"
                       }
            } ;
        Voc = table {
                Sg => base_1+"і"+base_2+"ко" ;
                Pl => base_1+"і"+base_2+"ки"
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN346"
  } ;

mkN347 : Str -> N ;
mkN347 base =
  case base of {
    base_1+"і"+base_2@?+base_3@?+"я" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"і"+base_2+base_3+"я" ;
                       Pl => base_1+"і"+base_2+base_3+"я"
                     } ;
              Acc => table {
                       Sg => nonExist ;
                       Pl => base_1+"і"+base_2+base_3+"я"
                     } ;
              Dat => table {
                       Sg => nonExist ;
                       Pl => base_1+"і"+base_2+base_3+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"о"+base_2+"е"+base_3+"ь" ;
                       Pl => base_1+"о"+base_2+"е"+base_3+"ь"
                     } ;
              Loc => table {
                       Sg => nonExist ;
                       Pl => base_1+"і"+base_2+base_3+"ях"
                     } ;
              Instr => table {
                         Sg => nonExist ;
                         Pl => base_1+"і"+base_2+base_3+"ями"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => base_1+"і"+base_2+base_3+"я"
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN347"
  } ;

mkN348 : Str -> N ;
mkN348 base =
  case base of {
    base_1+base_2@?+"я" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+base_2+"я" ;
                       Pl => base_1+base_2+"я"
                     } ;
              Acc => table {
                       Sg => nonExist ;
                       Pl => base_1+base_2+"я"
                     } ;
              Dat => table {
                       Sg => nonExist ;
                       Pl => base_1+base_2+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"е"+base_2+"ь" ;
                       Pl => base_1+"е"+base_2+"ь"
                     } ;
              Loc => table {
                       Sg => nonExist ;
                       Pl => base_1+base_2+"ях"
                     } ;
              Instr => table {
                         Sg => nonExist ;
                         Pl => base_1+base_2+"ями"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => base_1+base_2+"я"
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN348"
  } ;

mkN349 : Str -> N ;
mkN349 base =
  case base of {
    base_1+"ья" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ья" ;
                       Pl => base_1+"ьї"
                     } ;
              Acc => table {
                       Sg => base_1+"ью" ;
                       Pl => base_1+"ьї"
                     } ;
              Dat => table {
                       Sg => base_1+"ьї" ;
                       Pl => base_1+"ьям"
                     } ;
              Gen => table {
                       Sg => base_1+"ьї" ;
                       Pl => base_1+"ій"
                     } ;
              Loc => table {
                       Sg => base_1+"ьї" ;
                       Pl => base_1+"ьях"
                     } ;
              Instr => table {
                         Sg => base_1+"ьєю" ;
                         Pl => base_1+"ьями"
                       }
            } ;
        Voc = table {
                Sg => base_1+"ьє" ;
                Pl => base_1+"ьї"
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN349"
  } ;

mkN350 : Str -> N ;
mkN350 base =
  case base of {
    base_1+"ї" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ї" ;
                       Pl => base_1+"ї"
                     } ;
              Acc => table {
                       Sg => nonExist ;
                       Pl => base_1+"ї"
                     } ;
              Dat => table {
                       Sg => nonExist ;
                       Pl => base_1+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"й" ;
                       Pl => base_1+"й"
                     } ;
              Loc => table {
                       Sg => nonExist ;
                       Pl => base_1+"ях"
                     } ;
              Instr => table {
                         Sg => nonExist ;
                         Pl => base_1+"ями"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => base_1+"ї"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN350"
  } ;

mkN351 : Str -> N ;
mkN351 base =
  case base of {
    base_1+"і"+base_2@?+"ь" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"і"+base_2+"ь" ;
                       Pl => base_1+"о"+base_2+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"і"+base_2+"ь" ;
                       Pl => base_1+"о"+base_2+"і"
                     } ;
              Dat => table {
                       Sg => base_1+"о"+base_2+"і" ;
                       Pl => base_1+"о"+base_2+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"о"+base_2+"і" ;
                       Pl => base_1+"о"+base_2+"ей"
                     } ;
              Loc => table {
                       Sg => base_1+"о"+base_2+"і" ;
                       Pl => base_1+"о"+base_2+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"і"+base_2+"дю" ;
                         Pl => base_1+"о"+base_2+"ями"
                       }
            } ;
        Voc = table {
                Sg => base_1+"о"+base_2+"е" ;
                Pl => base_1+"о"+base_2+"і"
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN351"
  } ;

mkN352 : Str -> N ;
mkN352 base =
  case base of {
    base_1+"і" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"і"
                     } ;
              Dat => table {
                       Sg => base_1+"им" ;
                       Pl => base_1+"им"
                     } ;
              Gen => table {
                       Sg => base_1+"их" ;
                       Pl => base_1+"их"
                     } ;
              Loc => table {
                       Sg => base_1+"их" ;
                       Pl => base_1+"их"
                     } ;
              Instr => table {
                         Sg => base_1+"ими" ;
                         Pl => base_1+"ими"
                       }
            } ;
        Voc = table {
                Sg => base_1+"і" ;
                Pl => base_1+"і"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN352"
  } ;

mkN353 : Str -> N ;
mkN353 base =
  case base of {
    base_1+"о"+base_2@?+"е"+base_3@?+"ь" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"о"+base_2+"е"+base_3+"ь" ;
                       Pl => base_1+"і"+base_2+base_3+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"і"+base_2+base_3+"я" ;
                       Pl => base_1+"і"+base_2+base_3+"і"
                     } ;
              Dat => table {
                       Sg => base_1+"і"+base_2+base_3+"еві" ;
                       Pl => base_1+"і"+base_2+base_3+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"і"+base_2+base_3+"я" ;
                       Pl => base_1+"і"+base_2+base_3+"ів"
                     } ;
              Loc => table {
                       Sg => base_1+"і"+base_2+base_3+"еві" ;
                       Pl => base_1+"і"+base_2+base_3+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"і"+base_2+base_3+"ем" ;
                         Pl => base_1+"і"+base_2+base_3+"ями"
                       }
            } ;
        Voc = table {
                Sg => base_1+"і"+base_2+base_3+"ю" ;
                Pl => base_1+"і"+base_2+base_3+"і"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN353"
  } ;

mkN354 : Str -> N ;
mkN354 base =
  case base of {
    base_1+"ї"+base_2@(?+?)+"ь" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ї"+base_2+"ь" ;
                       Pl => base_1+"йо"+base_2+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"ї"+base_2+"ь" ;
                       Pl => base_1+"йо"+base_2+"і"
                     } ;
              Dat => table {
                       Sg => base_1+"йо"+base_2+"і" ;
                       Pl => base_1+"йо"+base_2+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"йо"+base_2+"і" ;
                       Pl => base_1+"йо"+base_2+"ей"
                     } ;
              Loc => table {
                       Sg => base_1+"йо"+base_2+"і" ;
                       Pl => base_1+"йо"+base_2+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"ї"+base_2+"ю" ;
                         Pl => base_1+"йо"+base_2+"ями"
                       }
            } ;
        Voc = table {
                Sg => base_1+"йо"+base_2+"е" ;
                Pl => base_1+"йо"+base_2+"і"
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN354"
  } ;

mkN355 : Str -> N ;
mkN355 base =
  case base of {
    base_1+base_2@?+base_3@?+"а" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+base_2+base_3+"а" ;
                       Pl => base_1+"і"+base_2+base_3+"и"
                     } ;
              Acc => table {
                       Sg => base_1+base_2+base_3+"у" ;
                       Pl => base_1+"і"+base_2+base_3+"и"
                     } ;
              Dat => table {
                       Sg => base_1+base_2+base_3+"і" ;
                       Pl => base_1+"і"+base_2+base_3+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+base_2+base_3+"и" ;
                       Pl => base_1+"і"+base_2+"о"+base_3
                     } ;
              Loc => table {
                       Sg => base_1+base_2+base_3+"і" ;
                       Pl => base_1+"і"+base_2+base_3+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+base_2+base_3+"ою" ;
                         Pl => base_1+"і"+base_2+base_3+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+base_2+base_3+"о" ;
                Pl => base_1+"і"+base_2+base_3+"и"
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN355"
  } ;

mkN356 : Str -> N ;
mkN356 base =
  case base of {
    base_1+base_2@?+"а" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+base_2+"а" ;
                       Pl => base_1+base_2+"а"
                     } ;
              Acc => table {
                       Sg => nonExist ;
                       Pl => base_1+base_2+"а"
                     } ;
              Dat => table {
                       Sg => nonExist ;
                       Pl => base_1+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"е"+base_2 ;
                       Pl => base_1+"е"+base_2
                     } ;
              Loc => table {
                       Sg => nonExist ;
                       Pl => base_1+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => nonExist ;
                         Pl => base_1+base_2+"ами"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => base_1+base_2+"а"
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN356"
  } ;

mkN357 : Str -> N ;
mkN357 base =
  case base of {
    base_1+"й"+base_2@?+"я" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"й"+base_2+"я" ;
                       Pl => base_1+"й"+base_2+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"й"+base_2+"ю" ;
                       Pl => base_1+"й"+base_2+"і"
                     } ;
              Dat => table {
                       Sg => base_1+"й"+base_2+"і" ;
                       Pl => base_1+"й"+base_2+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"й"+base_2+"і" ;
                       Pl => base_1+"є"+base_2+"ь"
                     } ;
              Loc => table {
                       Sg => base_1+"й"+base_2+"і" ;
                       Pl => base_1+"й"+base_2+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"й"+base_2+"ею" ;
                         Pl => base_1+"й"+base_2+"ями"
                       }
            } ;
        Voc = table {
                Sg => base_1+"й"+base_2+"е" ;
                Pl => base_1+"й"+base_2+"і"
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN357"
  } ;

mkN358 : Str -> N ;
mkN358 base =
  case base of {
    base_1+"ґа" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ґа" ;
                       Pl => base_1+"ґи"
                     } ;
              Acc => table {
                       Sg => base_1+"ґу" ;
                       Pl => base_1+"ґи"
                     } ;
              Dat => table {
                       Sg => base_1+"зі" ;
                       Pl => base_1+"ґам"
                     } ;
              Gen => table {
                       Sg => base_1+"ґи" ;
                       Pl => base_1+"ґ"
                     } ;
              Loc => table {
                       Sg => base_1+"зі" ;
                       Pl => base_1+"ґах"
                     } ;
              Instr => table {
                         Sg => base_1+"ґою" ;
                         Pl => base_1+"ґами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"ґо" ;
                Pl => base_1+"ґи"
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN358"
  } ;

mkN359 : Str -> N ;
mkN359 base =
  case base of {
    base_1+"о" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"о" ;
                       Pl => base_1+"а"
                     } ;
              Acc => table {
                       Sg => base_1+"а" ;
                       Pl => base_1
                     } ;
              Dat => table {
                       Sg => base_1+"ові" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"а" ;
                       Pl => base_1
                     } ;
              Loc => table {
                       Sg => base_1+"ові" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ом" ;
                         Pl => base_1+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"о" ;
                Pl => base_1+"а"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN359"
  } ;

mkN360 : Str -> N ;
mkN360 base =
  case base of {
    base_1+"ся" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ся" ;
                       Pl => base_1+"ся"
                     } ;
              Acc => table {
                       Sg => base_1+"ся" ;
                       Pl => base_1+"ся"
                     } ;
              Dat => table {
                       Sg => base_1+"сю" ;
                       Pl => base_1+"сям"
                     } ;
              Gen => table {
                       Sg => base_1+"ся" ;
                       Pl => base_1+"ь"
                     } ;
              Loc => table {
                       Sg => base_1+"сі" ;
                       Pl => base_1+"сях"
                     } ;
              Instr => table {
                         Sg => base_1+"сям" ;
                         Pl => base_1+"сями"
                       }
            } ;
        Voc = table {
                Sg => base_1+"ся" ;
                Pl => base_1+"ся"
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN360"
  } ;

mkN361 : Str -> N ;
mkN361 base =
  case base of {
    base_1+"зя" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"зя" ;
                       Pl => base_1+"зя"
                     } ;
              Acc => table {
                       Sg => base_1+"зя" ;
                       Pl => base_1+"зя"
                     } ;
              Dat => table {
                       Sg => base_1+"зю" ;
                       Pl => base_1+"зям"
                     } ;
              Gen => table {
                       Sg => base_1+"зя" ;
                       Pl => base_1+"ь"
                     } ;
              Loc => table {
                       Sg => base_1+"зі" ;
                       Pl => base_1+"зях"
                     } ;
              Instr => table {
                         Sg => base_1+"зям" ;
                         Pl => base_1+"зями"
                       }
            } ;
        Voc = table {
                Sg => base_1+"зя" ;
                Pl => base_1+"зя"
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN361"
  } ;

mkN362 : Str -> N ;
mkN362 base =
  case base of {
    base_1+"дя" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"дя" ;
                       Pl => base_1+"дя"
                     } ;
              Acc => table {
                       Sg => base_1+"дя" ;
                       Pl => base_1+"дя"
                     } ;
              Dat => table {
                       Sg => base_1+"дю" ;
                       Pl => base_1+"дям"
                     } ;
              Gen => table {
                       Sg => base_1+"дя" ;
                       Pl => base_1+"ь"
                     } ;
              Loc => table {
                       Sg => base_1+"ді" ;
                       Pl => base_1+"дях"
                     } ;
              Instr => table {
                         Sg => base_1+"дям" ;
                         Pl => base_1+"дями"
                       }
            } ;
        Voc = table {
                Sg => base_1+"дя" ;
                Pl => base_1+"дя"
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN362"
  } ;

mkN363 : Str -> N ;
mkN363 base =
  case base of {
    base_1+"жя" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"жя" ;
                       Pl => base_1+"жя"
                     } ;
              Acc => table {
                       Sg => base_1+"жя" ;
                       Pl => base_1+"жя"
                     } ;
              Dat => table {
                       Sg => base_1+"жю" ;
                       Pl => base_1+"жям"
                     } ;
              Gen => table {
                       Sg => base_1+"жя" ;
                       Pl => base_1
                     } ;
              Loc => table {
                       Sg => base_1+"жі" ;
                       Pl => base_1+"жях"
                     } ;
              Instr => table {
                         Sg => base_1+"жям" ;
                         Pl => base_1+"жями"
                       }
            } ;
        Voc = table {
                Sg => base_1+"жя" ;
                Pl => base_1+"жя"
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN363"
  } ;

mkN364 : Str -> N ;
mkN364 base =
  case base of {
    base_1+base_2@?+"е"+base_3@?+"ь" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+base_2+"е"+base_3+"ь" ;
                       Pl => base_1+"о"+base_2+base_3+"і"
                     } ;
              Acc => table {
                       Sg => base_1+base_2+"е"+base_3+"ь" ;
                       Pl => base_1+"о"+base_2+base_3+"і"
                     } ;
              Dat => table {
                       Sg => base_1+"о"+base_2+base_3+"еві" ;
                       Pl => base_1+"о"+base_2+base_3+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"о"+base_2+base_3+"я" ;
                       Pl => base_1+"о"+base_2+base_3+"ів"
                     } ;
              Loc => table {
                       Sg => base_1+"о"+base_2+base_3+"ю" ;
                       Pl => base_1+"о"+base_2+base_3+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"о"+base_2+base_3+"ем" ;
                         Pl => base_1+"о"+base_2+base_3+"ями"
                       }
            } ;
        Voc = table {
                Sg => base_1+"о"+base_2+base_3+"ю" ;
                Pl => base_1+"о"+base_2+base_3+"і"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN364"
  } ;

mkN365 : Str -> N ;
mkN365 base =
  case base of {
    base_1+"о" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"о" ;
                       Pl => base_1+"и"
                     } ;
              Acc => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"ів"
                     } ;
              Dat => table {
                       Sg => base_1+"ові" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"ів"
                     } ;
              Loc => table {
                       Sg => base_1+"еві" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ем" ;
                         Pl => base_1+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"е" ;
                Pl => base_1+"и"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN365"
  } ;

mkN366 : Str -> N ;
mkN366 base =
  case base of {
    base_1+"о" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"о" ;
                       Pl => base_1+"и"
                     } ;
              Acc => table {
                       Sg => base_1+"а" ;
                       Pl => base_1
                     } ;
              Dat => table {
                       Sg => base_1+"ові" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"а" ;
                       Pl => base_1
                     } ;
              Loc => table {
                       Sg => base_1+"ові" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ом" ;
                         Pl => base_1+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"о" ;
                Pl => base_1+"и"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN366"
  } ;

mkN367 : Str -> N ;
mkN367 base =
  case base of {
    base_1+"о" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"о" ;
                       Pl => base_1+"а"
                     } ;
              Acc => table {
                       Sg => base_1+"о" ;
                       Pl => base_1+"а"
                     } ;
              Dat => table {
                       Sg => base_1+"ові" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"а" ;
                       Pl => base_1
                     } ;
              Loc => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ом" ;
                         Pl => base_1+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"е" ;
                Pl => base_1+"а"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN367"
  } ;

mkN368 : Str -> N ;
mkN368 base =
  case base of {
    base_1+"шя" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"шя" ;
                       Pl => base_1+"шя"
                     } ;
              Acc => table {
                       Sg => base_1+"шя" ;
                       Pl => base_1+"шя"
                     } ;
              Dat => table {
                       Sg => base_1+"шю" ;
                       Pl => base_1+"шям"
                     } ;
              Gen => table {
                       Sg => base_1+"шя" ;
                       Pl => base_1
                     } ;
              Loc => table {
                       Sg => base_1+"шю" ;
                       Pl => base_1+"шях"
                     } ;
              Instr => table {
                         Sg => base_1+"шям" ;
                         Pl => base_1+"шями"
                       }
            } ;
        Voc = table {
                Sg => base_1+"шя" ;
                Pl => base_1+"шя"
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN368"
  } ;

mkN369 : Str -> N ;
mkN369 base =
  case base of {
    base_1+"ій" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ій" ;
                       Pl => nonExist
                     } ;
              Acc => table {
                       Sg => base_1+"ій" ;
                       Pl => nonExist
                     } ;
              Dat => table {
                       Sg => base_1+"ою" ;
                       Pl => nonExist
                     } ;
              Gen => table {
                       Sg => base_1+"ою" ;
                       Pl => nonExist
                     } ;
              Loc => table {
                       Sg => base_1+"ої" ;
                       Pl => nonExist
                     } ;
              Instr => table {
                         Sg => base_1+"оєм" ;
                         Pl => nonExist
                       }
            } ;
        Voc = table {
                Sg => base_1+"ою" ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN369"
  } ;

mkN370 : Str -> N ;
mkN370 base =
  case base of {
    base_1+"'я" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"'я" ;
                       Pl => base_1+"ена"
                     } ;
              Acc => table {
                       Sg => base_1+"'я" ;
                       Pl => base_1+"ена"
                     } ;
              Dat => table {
                       Sg => base_1+"'ю" ;
                       Pl => base_1+"енам"
                     } ;
              Gen => table {
                       Sg => base_1+"'я" ;
                       Pl => base_1+"ен"
                     } ;
              Loc => table {
                       Sg => base_1+"'ю" ;
                       Pl => base_1+"енах"
                     } ;
              Instr => table {
                         Sg => base_1+"'ям" ;
                         Pl => base_1+"енами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"'я" ;
                Pl => base_1+"ена"
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN370"
  } ;

mkN371 : Str -> N ;
mkN371 base =
  case base of {
    base_1+"і"+base_2@? => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"і"+base_2 ;
                       Pl => base_1+"е"+base_2+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"і"+base_2 ;
                       Pl => base_1+"е"+base_2+"і"
                     } ;
              Dat => table {
                       Sg => base_1+"е"+base_2+"еві" ;
                       Pl => base_1+"е"+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"е"+base_2+"у" ;
                       Pl => base_1+"е"+base_2+"ів"
                     } ;
              Loc => table {
                       Sg => base_1+"е"+base_2+"у" ;
                       Pl => base_1+"е"+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"е"+base_2+"ем" ;
                         Pl => base_1+"е"+base_2+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"е"+base_2+"у" ;
                Pl => base_1+"е"+base_2+"і"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN371"
  } ;

mkN372 : Str -> N ;
mkN372 base =
  case base of {
    base_1+"я" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"я" ;
                       Pl => base_1+"я"
                     } ;
              Acc => table {
                       Sg => base_1+"я" ;
                       Pl => base_1+"я"
                     } ;
              Dat => table {
                       Sg => base_1+"ю" ;
                       Pl => base_1+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"я" ;
                       Pl => base_1+"ь"
                     } ;
              Loc => table {
                       Sg => base_1+"ю" ;
                       Pl => base_1+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"ям" ;
                         Pl => base_1+"ями"
                       }
            } ;
        Voc = table {
                Sg => base_1+"я" ;
                Pl => base_1+"я"
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN372"
  } ;

mkN373 : Str -> N ;
mkN373 base =
  case base of {
    base_1+"ец"+base_2@? => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ец"+base_2 ;
                       Pl => nonExist
                     } ;
              Acc => table {
                       Sg => base_1+"ец"+base_2 ;
                       Pl => nonExist
                     } ;
              Dat => table {
                       Sg => base_1+base_2+"цеві" ;
                       Pl => nonExist
                     } ;
              Gen => table {
                       Sg => base_1+base_2+"цю" ;
                       Pl => nonExist
                     } ;
              Loc => table {
                       Sg => base_1+base_2+"цю" ;
                       Pl => nonExist
                     } ;
              Instr => table {
                         Sg => base_1+base_2+"цем" ;
                         Pl => nonExist
                       }
            } ;
        Voc = table {
                Sg => base_1+base_2+"цю" ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN373"
  } ;

mkN374 : Str -> N ;
mkN374 base =
  case base of {
    base_1+"іг" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"іг" ;
                       Pl => base_1+"оги"
                     } ;
              Acc => table {
                       Sg => base_1+"ога" ;
                       Pl => base_1+"огів"
                     } ;
              Dat => table {
                       Sg => base_1+"огові" ;
                       Pl => base_1+"огам"
                     } ;
              Gen => table {
                       Sg => base_1+"ога" ;
                       Pl => base_1+"огів"
                     } ;
              Loc => table {
                       Sg => base_1+"огові" ;
                       Pl => base_1+"огах"
                     } ;
              Instr => table {
                         Sg => base_1+"огом" ;
                         Pl => base_1+"огами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"оже" ;
                Pl => base_1+"оги"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN374"
  } ;

mkN375 : Str -> N ;
mkN375 base =
  case base of {
    base_1+"га" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"га" ;
                       Pl => base_1+"ги"
                     } ;
              Acc => table {
                       Sg => base_1+"гу" ;
                       Pl => base_1+"ги"
                     } ;
              Dat => table {
                       Sg => base_1+"зі" ;
                       Pl => base_1+"гам"
                     } ;
              Gen => table {
                       Sg => base_1+"ги" ;
                       Pl => base_1+"ог"
                     } ;
              Loc => table {
                       Sg => base_1+"зі" ;
                       Pl => base_1+"гах"
                     } ;
              Instr => table {
                         Sg => base_1+"гою" ;
                         Pl => base_1+"гами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"го" ;
                Pl => base_1+"ги"
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN375"
  } ;

mkN376 : Str -> N ;
mkN376 base =
  case base of {
    base_1+"я" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"я" ;
                       Pl => base_1+"я"
                     } ;
              Acc => table {
                       Sg => base_1+"я" ;
                       Pl => base_1+"я"
                     } ;
              Dat => table {
                       Sg => base_1+"ю" ;
                       Pl => base_1+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"я" ;
                       Pl => base_1+"їв"
                     } ;
              Loc => table {
                       Sg => base_1+"ю" ;
                       Pl => base_1+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"ям" ;
                         Pl => base_1+"ями"
                       }
            } ;
        Voc = table {
                Sg => base_1+"я" ;
                Pl => base_1+"я"
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN376"
  } ;

mkN377 : Str -> N ;
mkN377 base =
  case base of {
    base_1+"ля" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ля" ;
                       Pl => base_1+"ля"
                     } ;
              Acc => table {
                       Sg => base_1+"ля" ;
                       Pl => base_1+"ля"
                     } ;
              Dat => table {
                       Sg => base_1+"лю" ;
                       Pl => base_1+"лям"
                     } ;
              Gen => table {
                       Sg => base_1+"ля" ;
                       Pl => base_1+"ь"
                     } ;
              Loc => table {
                       Sg => base_1+"лю" ;
                       Pl => base_1+"лях"
                     } ;
              Instr => table {
                         Sg => base_1+"лям" ;
                         Pl => base_1+"лями"
                       }
            } ;
        Voc = table {
                Sg => base_1+"ля" ;
                Pl => base_1+"ля"
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN377"
  } ;

mkN378 : Str -> N ;
mkN378 base =
  case base of {
    base_1+"ь"+base_2@(?+?+?+?+?+?)+"ь" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ь"+base_2+"ь" ;
                       Pl => nonExist
                     } ;
              Acc => table {
                       Sg => base_1+"ь"+base_2+"ь" ;
                       Pl => nonExist
                     } ;
              Dat => table {
                       Sg => base_1+"ю"+base_2+"ю" ;
                       Pl => nonExist
                     } ;
              Gen => table {
                       Sg => base_1+"ю"+base_2+"ю" ;
                       Pl => nonExist
                     } ;
              Loc => table {
                       Sg => base_1+"ю"+base_2+"ю" ;
                       Pl => nonExist
                     } ;
              Instr => table {
                         Sg => base_1+"ем"+base_2+"ем" ;
                         Pl => nonExist
                       }
            } ;
        Voc = table {
                Sg => base_1+"ю"+base_2+"ю" ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN378"
  } ;

mkN379 : Str -> N ;
mkN379 base =
  case base of {
    base_1+"і"+base_2@? => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"і"+base_2 ;
                       Pl => nonExist
                     } ;
              Acc => table {
                       Sg => base_1+"і"+base_2 ;
                       Pl => nonExist
                     } ;
              Dat => table {
                       Sg => base_1+"о"+base_2+"і" ;
                       Pl => nonExist
                     } ;
              Gen => table {
                       Sg => base_1+"о"+base_2+"і" ;
                       Pl => nonExist
                     } ;
              Loc => table {
                       Sg => base_1+"о"+base_2+"і" ;
                       Pl => nonExist
                     } ;
              Instr => table {
                         Sg => base_1+"і"+base_2+"'ю" ;
                         Pl => nonExist
                       }
            } ;
        Voc = table {
                Sg => base_1+"о"+base_2+"е" ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN379"
  } ;

mkN380 : Str -> N ;
mkN380 base =
  case base of {
    base_1+"тя" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"тя" ;
                       Pl => base_1+"тя"
                     } ;
              Acc => table {
                       Sg => base_1+"тя" ;
                       Pl => base_1+"ь"
                     } ;
              Dat => table {
                       Sg => base_1+"тю" ;
                       Pl => base_1+"тям"
                     } ;
              Gen => table {
                       Sg => base_1+"тя" ;
                       Pl => base_1+"ь"
                     } ;
              Loc => table {
                       Sg => base_1+"ті" ;
                       Pl => base_1+"тях"
                     } ;
              Instr => table {
                         Sg => base_1+"тям" ;
                         Pl => base_1+"тями"
                       }
            } ;
        Voc = table {
                Sg => base_1+"тя" ;
                Pl => base_1+"тя"
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN380"
  } ;

mkN381 : Str -> N ;
mkN381 base =
  case base of {
    base_1+"і"+base_2@? => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"і"+base_2 ;
                       Pl => base_1+"е"+base_2+"и"
                     } ;
              Acc => table {
                       Sg => base_1+"і"+base_2 ;
                       Pl => base_1+"е"+base_2+"и"
                     } ;
              Dat => table {
                       Sg => base_1+"е"+base_2+"ові" ;
                       Pl => base_1+"е"+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"е"+base_2+"у" ;
                       Pl => base_1+"е"+base_2+"ів"
                     } ;
              Loc => table {
                       Sg => base_1+"е"+base_2+"у" ;
                       Pl => base_1+"е"+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"е"+base_2+"ом" ;
                         Pl => base_1+"е"+base_2+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"е"+base_2+"е" ;
                Pl => base_1+"е"+base_2+"и"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN381"
  } ;

mkN382 : Str -> N ;
mkN382 base =
  case base of {
    base_1+"і"+base_2@(?+?)+"ь" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"і"+base_2+"ь" ;
                       Pl => base_1+"о"+base_2+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"і"+base_2+"ь" ;
                       Pl => base_1+"о"+base_2+"ей"
                     } ;
              Dat => table {
                       Sg => base_1+"о"+base_2+"і" ;
                       Pl => base_1+"о"+base_2+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"о"+base_2+"і" ;
                       Pl => base_1+"о"+base_2+"ей"
                     } ;
              Loc => table {
                       Sg => base_1+"о"+base_2+"і" ;
                       Pl => base_1+"о"+base_2+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"і"+base_2+"ю" ;
                         Pl => base_1+"о"+base_2+"ями"
                       }
            } ;
        Voc = table {
                Sg => base_1+"о"+base_2+"е" ;
                Pl => base_1+"о"+base_2+"і"
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN382"
  } ;

mkN383 : Str -> N ;
mkN383 base =
  case base of {
    base_1+"о"+base_2@? => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"о"+base_2 ;
                       Pl => base_1+base_2+"и"
                     } ;
              Acc => table {
                       Sg => base_1+"о"+base_2 ;
                       Pl => base_1+base_2+"и"
                     } ;
              Dat => table {
                       Sg => base_1+base_2+"ові" ;
                       Pl => base_1+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+base_2+"а" ;
                       Pl => base_1+base_2+"ів"
                     } ;
              Loc => table {
                       Sg => base_1+base_2+"у" ;
                       Pl => base_1+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+base_2+"ом" ;
                         Pl => base_1+base_2+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+base_2+"у" ;
                Pl => base_1+base_2+"и"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN383"
  } ;

mkN384 : Str -> N ;
mkN384 base =
  case base of {
    base_1+"і"+base_2@?+"ь" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"і"+base_2+"ь" ;
                       Pl => base_1+"е"+base_2+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"е"+base_2+"я" ;
                       Pl => base_1+"е"+base_2+"ів"
                     } ;
              Dat => table {
                       Sg => base_1+"е"+base_2+"еві" ;
                       Pl => base_1+"е"+base_2+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"е"+base_2+"я" ;
                       Pl => base_1+"е"+base_2+"ів"
                     } ;
              Loc => table {
                       Sg => base_1+"е"+base_2+"еві" ;
                       Pl => base_1+"е"+base_2+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"е"+base_2+"ем" ;
                         Pl => base_1+"е"+base_2+"ями"
                       }
            } ;
        Voc = table {
                Sg => base_1+"е"+base_2+"ю" ;
                Pl => base_1+"е"+base_2+"і"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN384"
  } ;

mkN385 : Str -> N ;
mkN385 base =
  case base of {
    base_1+"ь" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ь" ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"ь" ;
                       Pl => base_1+"і"
                     } ;
              Dat => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ей"
                     } ;
              Loc => table {
                       Sg => base_1+"ю" ;
                       Pl => base_1+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"дю" ;
                         Pl => base_1+"ями"
                       }
            } ;
        Voc = table {
                Sg => base_1+"е" ;
                Pl => base_1+"і"
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN385"
  } ;

mkN386 : Str -> N ;
mkN386 base =
  case base of {
    base_1 => lin N
      { s = table {
              Nom => table {
                       Sg => base_1 ;
                       Pl => base_1+"и"
                     } ;
              Acc => table {
                       Sg => base_1 ;
                       Pl => base_1+"и"
                     } ;
              Dat => table {
                       Sg => base_1+"ові" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"ів"
                     } ;
              Loc => table {
                       Sg => base_1+"ю" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ом" ;
                         Pl => base_1+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"е" ;
                Pl => base_1+"и"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN386"
  } ;

mkN387 : Str -> N ;
mkN387 base =
  case base of {
    base_1+"и"+base_2@? => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"и"+base_2 ;
                       Pl => nonExist
                     } ;
              Acc => table {
                       Sg => base_1+"и"+base_2 ;
                       Pl => nonExist
                     } ;
              Dat => table {
                       Sg => base_1+"и"+base_2+"ові" ;
                       Pl => nonExist
                     } ;
              Gen => table {
                       Sg => base_1+"і"+base_2+"у" ;
                       Pl => nonExist
                     } ;
              Loc => table {
                       Sg => base_1+"и"+base_2+"у" ;
                       Pl => nonExist
                     } ;
              Instr => table {
                         Sg => base_1+"и"+base_2+"ом" ;
                         Pl => nonExist
                       }
            } ;
        Voc = table {
                Sg => base_1+"и"+base_2+"е" ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN387"
  } ;

mkN388 : Str -> N ;
mkN388 base =
  case base of {
    base_1+"у"+base_2@?+"ь" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"у"+base_2+"ь" ;
                       Pl => base_1+"о"+base_2+"і"
                     } ;
              Acc => table {
                       Sg => nonExist ;
                       Pl => nonExist
                     } ;
              Dat => table {
                       Sg => nonExist ;
                       Pl => nonExist
                     } ;
              Gen => table {
                       Sg => base_1+"о"+base_2+"я" ;
                       Pl => base_1+"о"+base_2+"ей"
                     } ;
              Loc => table {
                       Sg => nonExist ;
                       Pl => nonExist
                     } ;
              Instr => table {
                         Sg => nonExist ;
                         Pl => nonExist
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN388"
  } ;

mkN389 : Str -> N ;
mkN389 base =
  case base of {
    base_1+"і"+base_2@? => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"і"+base_2 ;
                       Pl => base_1+"о"+base_2+"і" --guessed
                     } ;
              Acc => table {
                       Sg => base_1+"і"+base_2 ;
                       Pl => base_1+"о"+base_2+"і" --guessed
                     } ;
              Dat => table {
                       Sg => base_1+"о"+base_2+"і" ;
                       Pl => base_1+"о"+base_2+"ам" --guessed
                     } ;
              Gen => table {
                       Sg => base_1+"о"+base_2+"і" ;
                       Pl => base_1+"о"+base_2+"ей" --guessed
                     } ;
              Loc => table {
                       Sg => base_1+"о"+base_2+"і" ;
                       Pl => base_1+"о"+base_2+"ах" --guessed
                     } ;
              Instr => table {
                         Sg => base_1+"і"+base_2+"чю" ;
                         Pl => base_1+"о"+base_2+"ами" --guessed
                       }
            } ;
        Voc = table {
                Sg => base_1+"о"+base_2+"е" ;
                Pl => base_1+"о"+base_2+"і" --guessed
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN389"
  } ;

mkN390 : Str -> N ;
mkN390 base =
  case base of {
    base_1+"і"+base_2@? => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"і"+base_2 ;
                       Pl => base_1+"е"+base_2+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"і"+base_2 ;
                       Pl => base_1+"е"+base_2+"і"
                     } ;
              Dat => table {
                       Sg => base_1+"е"+base_2+"еві" ;
                       Pl => base_1+"е"+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"е"+base_2+"а" ;
                       Pl => base_1+"е"+base_2+"ів"
                     } ;
              Loc => table {
                       Sg => base_1+"е"+base_2+"у" ;
                       Pl => base_1+"е"+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"е"+base_2+"ем" ;
                         Pl => base_1+"е"+base_2+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"е"+base_2+"у" ;
                Pl => base_1+"е"+base_2+"і"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN390"
  } ;

mkN391 : Str -> N ;
mkN391 base =
  case base of {
    base_1+"я" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"я" ;
                       Pl => base_1+"ї"
                     } ;
              Acc => table {
                       Sg => base_1+"ю" ;
                       Pl => base_1+"й"
                     } ;
              Dat => table {
                       Sg => base_1+"ї" ;
                       Pl => base_1+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"ї" ;
                       Pl => base_1+"й"
                     } ;
              Loc => table {
                       Sg => base_1+"ї" ;
                       Pl => base_1+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"єю" ;
                         Pl => base_1+"ями"
                       }
            } ;
        Voc = table {
                Sg => base_1+"є" ;
                Pl => base_1+"ї"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN391"
  } ;

mkN392 : Str -> N ;
mkN392 base =
  case base of {
    base_1+"і"+base_2@?+"ь" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"і"+base_2+"ь" ;
                       Pl => base_1+base_2+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"і"+base_2+"ь" ;
                       Pl => base_1+base_2+"і"
                     } ;
              Dat => table {
                       Sg => base_1+base_2+"еві" ;
                       Pl => base_1+base_2+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+base_2+"я" ;
                       Pl => base_1+base_2+"ів"
                     } ;
              Loc => table {
                       Sg => base_1+base_2+"ю" ;
                       Pl => base_1+base_2+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+base_2+"ем" ;
                         Pl => base_1+base_2+"ями"
                       }
            } ;
        Voc = table {
                Sg => base_1+base_2+"ю" ;
                Pl => base_1+base_2+"і"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN392"
  } ;

mkN393 : Str -> N ;
mkN393 base =
  case base of {
    base_1+"р"+base_2@?+"ць" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"р"+base_2+"ць" ;
                       Pl => base_1+base_2+"рці"
                     } ;
              Acc => table {
                       Sg => base_1+base_2+"рця" ;
                       Pl => base_1+base_2+"рців"
                     } ;
              Dat => table {
                       Sg => base_1+base_2+"рцеві" ;
                       Pl => base_1+base_2+"рцям"
                     } ;
              Gen => table {
                       Sg => base_1+base_2+"рця" ;
                       Pl => base_1+base_2+"рців"
                     } ;
              Loc => table {
                       Sg => base_1+base_2+"рцеві" ;
                       Pl => base_1+base_2+"рцях"
                     } ;
              Instr => table {
                         Sg => base_1+base_2+"рцем" ;
                         Pl => base_1+base_2+"рцями"
                       }
            } ;
        Voc = table {
                Sg => base_1+base_2+"рче" ;
                Pl => base_1+base_2+"рці"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN393"
  } ;

mkN394 : Str -> N ;
mkN394 base =
  case base of {
    base_1+"ій"+base_2@?+"я" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ій"+base_2+"я" ;
                       Pl => base_1+"ій"+base_2+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"ій"+base_2+"ю" ;
                       Pl => base_1+"ій"+base_2+"і"
                     } ;
              Dat => table {
                       Sg => base_1+"ій"+base_2+"і" ;
                       Pl => base_1+"ій"+base_2+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"ій"+base_2+"і" ;
                       Pl => base_1+"оє"+base_2+"ь"
                     } ;
              Loc => table {
                       Sg => base_1+"ій"+base_2+"і" ;
                       Pl => base_1+"ій"+base_2+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"ій"+base_2+"ею" ;
                         Pl => base_1+"ій"+base_2+"ями"
                       }
            } ;
        Voc = table {
                Sg => base_1+"ій"+base_2+"е" ;
                Pl => base_1+"ій"+base_2+"і"
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN394"
  } ;

mkN395 : Str -> N ;
mkN395 base =
  case base of {
    base_1+"ок" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ок" ;
                       Pl => base_1+"ки"
                     } ;
              Acc => table {
                       Sg => base_1+"ка" ;
                       Pl => base_1+"ки"
                     } ;
              Dat => table {
                       Sg => base_1+"кові" ;
                       Pl => base_1+"кам"
                     } ;
              Gen => table {
                       Sg => base_1+"ка" ;
                       Pl => base_1+"ків"
                     } ;
              Loc => table {
                       Sg => base_1+"кові" ;
                       Pl => base_1+"ках"
                     } ;
              Instr => table {
                         Sg => base_1+"ком" ;
                         Pl => base_1+"ками"
                       }
            } ;
        Voc = table {
                Sg => base_1+"че" ;
                Pl => base_1+"ки"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN395"
  } ;

mkN396 : Str -> N ;
mkN396 base =
  case base of {
    base_1+"є"+base_2@?+"ь" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"є"+base_2+"ь" ;
                       Pl => base_1+"й"+base_2+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"є"+base_2+"ь" ;
                       Pl => base_1+"й"+base_2+"і"
                     } ;
              Dat => table {
                       Sg => base_1+"й"+base_2+"еві" ;
                       Pl => base_1+"й"+base_2+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"й"+base_2+"я" ;
                       Pl => base_1+"й"+base_2+"ів"
                     } ;
              Loc => table {
                       Sg => base_1+"й"+base_2+"ю" ;
                       Pl => base_1+"й"+base_2+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"й"+base_2+"ем" ;
                         Pl => base_1+"й"+base_2+"ями"
                       }
            } ;
        Voc = table {
                Sg => base_1+"й"+base_2+"ю" ;
                Pl => base_1+"й"+base_2+"і"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN396"
  } ;

mkN397 : Str -> N ;
mkN397 base =
  case base of {
    base_1+"ій" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ій" ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"ього" ;
                       Pl => base_1+"іх"
                     } ;
              Dat => table {
                       Sg => base_1+"ьому" ;
                       Pl => base_1+"ім"
                     } ;
              Gen => table {
                       Sg => base_1+"ього" ;
                       Pl => base_1+"іх"
                     } ;
              Loc => table {
                       Sg => base_1+"ьому" ;
                       Pl => base_1+"іх"
                     } ;
              Instr => table {
                         Sg => base_1+"ім" ;
                         Pl => base_1+"іми"
                       }
            } ;
        Voc = table {
                Sg => base_1+"ій" ;
                Pl => base_1+"і"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN397"
  } ;

mkN398 : Str -> N ;
mkN398 base =
  case base of {
    base_1+base_2@?+"а" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+base_2+"а" ;
                       Pl => base_1+base_2+"и"
                     } ;
              Acc => table {
                       Sg => base_1+base_2+"у" ;
                       Pl => base_1+"о"+base_2
                     } ;
              Dat => table {
                       Sg => base_1+base_2+"і" ;
                       Pl => base_1+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+base_2+"и" ;
                       Pl => base_1+"о"+base_2
                     } ;
              Loc => table {
                       Sg => base_1+base_2+"і" ;
                       Pl => base_1+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+base_2+"ою" ;
                         Pl => base_1+base_2+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+base_2+"о" ;
                Pl => base_1+base_2+"и"
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN398"
  } ;

mkN399 : Str -> N ;
mkN399 base =
  case base of {
    base_1+"і"+base_2@?+"ь" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"і"+base_2+"ь" ;
                       Pl => base_1+"о"+base_2+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"о"+base_2+"я" ;
                       Pl => base_1+"о"+base_2+"і"
                     } ;
              Dat => table {
                       Sg => base_1+"о"+base_2+"еві" ;
                       Pl => base_1+"о"+base_2+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"о"+base_2+"я" ;
                       Pl => base_1+"о"+base_2+"ів"
                     } ;
              Loc => table {
                       Sg => base_1+"о"+base_2+"еві" ;
                       Pl => base_1+"о"+base_2+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"о"+base_2+"ем" ;
                         Pl => base_1+"о"+base_2+"ями"
                       }
            } ;
        Voc = table {
                Sg => base_1+"о"+base_2+"ю" ;
                Pl => base_1+"о"+base_2+"і"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN399"
  } ;

mkN400 : Str -> N ;
mkN400 base =
  case base of {
    base_1+"і" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"і" ; --guessed
                       Pl => base_1+"і"
                     } ;
              Dat => table {
                       Sg => base_1+"им" ; --guessed
                       Pl => base_1+"им"
                     } ;
              Gen => table {
                       Sg => base_1+"их" ;
                       Pl => base_1+"их"
                     } ;
              Loc => table {
                       Sg => base_1+"их" ; --guessed
                       Pl => base_1+"их"
                     } ;
              Instr => table {
                         Sg => base_1+"ими" ; --guessed
                         Pl => base_1+"ими"
                       }
            } ;
        Voc = table {
                Sg => base_1+"і" ; --guessed
                Pl => base_1+"і"
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN400"
  } ;

mkN401 : Str -> N ;
mkN401 base =
  case base of {
    base_1+"е" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"е" ;
                       Pl => base_1+"а"
                     } ;
              Acc => table {
                       Sg => base_1+"е" ;
                       Pl => base_1+"а"
                     } ;
              Dat => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"а" ;
                       Pl => base_1
                     } ;
              Loc => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ем" ;
                         Pl => base_1+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"е" ;
                Pl => base_1+"а"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN401"
  } ;

mkN402 : Str -> N ;
mkN402 base =
  case base of {
    base_1+"і"+base_2@(?+?)+"ь" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"і"+base_2+"ь" ;
                       Pl => base_1+"о"+base_2+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"і"+base_2+"ь" ; --guessed
                       Pl => base_1+"о"+base_2+"і" --guessed
                     } ;
              Dat => table {
                       Sg => base_1+"о"+base_2+"і" ; --guessed
                       Pl => base_1+"о"+base_2+"ям" --guessed
                     } ;
              Gen => table {
                       Sg => base_1+"о"+base_2+"і" ;
                       Pl => base_1+"о"+base_2+"ей" --guessed
                     } ;
              Loc => table {
                       Sg => base_1+"о"+base_2+"і" ; --guessed
                       Pl => base_1+"о"+base_2+"ях" --guessed
                     } ;
              Instr => table {
                         Sg => base_1+"і"+base_2+"тю" ; --guessed
                         Pl => base_1+"о"+base_2+"ями" --guessed
                       }
            } ;
        Voc = table {
                Sg => base_1+"о"+base_2+"е" ; --guessed
                Pl => base_1+"о"+base_2+"і" --guessed
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN402"
  } ;

mkN403 : Str -> N ;
mkN403 base =
  case base of {
    base_1+"є" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"є" ;
                       Pl => base_1+"я"
                     } ;
              Acc => table {
                       Sg => base_1+"є" ;
                       Pl => base_1+"я"
                     } ;
              Dat => table {
                       Sg => base_1+"ю" ;
                       Pl => base_1+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"я" ;
                       Pl => base_1+"ів"
                     } ;
              Loc => table {
                       Sg => base_1+"ю" ;
                       Pl => base_1+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"єм" ;
                         Pl => base_1+"ями"
                       }
            } ;
        Voc = table {
                Sg => base_1+"є" ;
                Pl => base_1+"я"
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN403"
  } ;

mkN404 : Str -> N ;
mkN404 base =
  case base of {
    base_1+base_2@(?+?+?+?+?+?+?+?+?+?) => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+base_2 ;
                       Pl => base_1+"и"+base_2
                     } ;
              Acc => table {
                       Sg => base_1+base_2 ;
                       Pl => base_1+"и"+base_2
                     } ;
              Dat => table {
                       Sg => base_1+"ові"+base_2 ;
                       Pl => base_1+"ам"+base_2
                     } ;
              Gen => table {
                       Sg => base_1+"а"+base_2 ;
                       Pl => base_1+"ів"+base_2
                     } ;
              Loc => table {
                       Sg => base_1+"і"+base_2 ;
                       Pl => base_1+"ах"+base_2
                     } ;
              Instr => table {
                         Sg => base_1+"ом"+base_2 ;
                         Pl => base_1+"ами"+base_2
                       }
            } ;
        Voc = table {
                Sg => base_1+"е"+base_2 ;
                Pl => base_1+"и"+base_2
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN404"
  } ;

mkN405 : Str -> N ;
mkN405 base =
  case base of {
    base_1+"і" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => nonExist ;
                       Pl => base_1+"і"
                     } ;
              Dat => table {
                       Sg => nonExist ;
                       Pl => base_1+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"ів" ;
                       Pl => base_1+"ів"
                     } ;
              Loc => table {
                       Sg => nonExist ;
                       Pl => base_1+"ях"
                     } ;
              Instr => table {
                         Sg => nonExist ;
                         Pl => base_1+"ями"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => base_1+"і"
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN405"
  } ;

mkN406 : Str -> N ;
mkN406 base =
  case base of {
    base_1 => lin N
      { s = table {
              Nom => table {
                       Sg => base_1 ;
                       Pl => base_1+"и"
                     } ;
              Acc => table {
                       Sg => base_1 ;
                       Pl => base_1+"и"
                     } ;
              Dat => table {
                       Sg => base_1+"ові" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"ів"
                     } ;
              Loc => table {
                       Sg => base_1+"ові" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ом" ;
                         Pl => base_1+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"е" ;
                Pl => base_1+"и"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN406"
  } ;

mkN407 : Str -> N ;
mkN407 base =
  case base of {
    base_1+base_2@(?+?+?+?+?+?+?+?+?+?) => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+base_2 ;
                       Pl => base_1+"и"+base_2+"и"
                     } ;
              Acc => table {
                       Sg => base_1+"а"+base_2+"а" ;
                       Pl => base_1+"ів"+base_2+"ів"
                     } ;
              Dat => table {
                       Sg => base_1+"ові"+base_2+"ові" ;
                       Pl => base_1+"ам"+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"а"+base_2+"а" ;
                       Pl => base_1+"ів"+base_2+"ів"
                     } ;
              Loc => table {
                       Sg => base_1+"ові"+base_2+"ові" ;
                       Pl => base_1+"ах"+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ом"+base_2+"ом" ;
                         Pl => base_1+"ами"+base_2+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"е"+base_2+"у" ;
                Pl => base_1+"и"+base_2+"и"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN407"
  } ;

mkN408 : Str -> N ;
mkN408 base =
  case base of {
    base_1+base_2@?+"а" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+base_2+"а" ;
                       Pl => base_1+base_2+"и"
                     } ;
              Acc => table {
                       Sg => base_1+base_2+"у" ;
                       Pl => base_1+base_2+"и"
                     } ;
              Dat => table {
                       Sg => base_1+base_2+"і" ;
                       Pl => base_1+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+base_2+"у" ;
                       Pl => base_1+"е"+base_2
                     } ;
              Loc => table {
                       Sg => base_1+base_2+"і" ;
                       Pl => base_1+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+base_2+"ою" ;
                         Pl => base_1+base_2+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+base_2+"о" ;
                Pl => base_1+base_2+"и"
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN408"
  } ;

mkN409 : Str -> N ;
mkN409 base =
  case base of {
    base_1+"о" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"о" ;
                       Pl => base_1+"а"
                     } ;
              Acc => table {
                       Sg => base_1+"а" ;
                       Pl => base_1
                     } ;
              Dat => table {
                       Sg => base_1+"ові" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"а" ;
                       Pl => base_1
                     } ;
              Loc => table {
                       Sg => base_1+"ові" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ом" ;
                         Pl => base_1+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"у" ;
                Pl => base_1+"а"
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN409"
  } ;

mkN410 : Str -> N ;
mkN410 base =
  case base of {
    base_1+"я" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"я" ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"ю" ;
                       Pl => base_1+"і"
                     } ;
              Dat => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ь"
                     } ;
              Loc => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"ею" ;
                         Pl => base_1+"ями"
                       }
            } ;
        Voc = table {
                Sg => base_1+"ю" ;
                Pl => base_1+"і"
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN410"
  } ;

mkN411 : Str -> N ;
mkN411 base =
  case base of {
    base_1+"я" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"я" ;
                       Pl => base_1+"я"
                     } ;
              Acc => table {
                       Sg => nonExist ;
                       Pl => base_1+"я"
                     } ;
              Dat => table {
                       Sg => nonExist ;
                       Pl => base_1+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"ів" ;
                       Pl => base_1+"ів"
                     } ;
              Loc => table {
                       Sg => nonExist ;
                       Pl => base_1+"ях"
                     } ;
              Instr => table {
                         Sg => nonExist ;
                         Pl => base_1+"ями"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => base_1+"я"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN411"
  } ;

mkN412 : Str -> N ;
mkN412 base =
  case base of {
    base_1+"і"+base_2@? => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"і"+base_2 ;
                       Pl => base_1+"е"+base_2+"и"
                     } ;
              Acc => table {
                       Sg => base_1+"е"+base_2+"а" ;
                       Pl => base_1+"е"+base_2+"ів"
                     } ;
              Dat => table {
                       Sg => base_1+"е"+base_2+"ові" ;
                       Pl => base_1+"е"+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"е"+base_2+"а" ;
                       Pl => base_1+"е"+base_2+"ів"
                     } ;
              Loc => table {
                       Sg => base_1+"е"+base_2+"ові" ;
                       Pl => base_1+"е"+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"е"+base_2+"ом" ;
                         Pl => base_1+"е"+base_2+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"е"+base_2+"е" ;
                Pl => base_1+"е"+base_2+"и"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN412"
  } ;

mkN413 : Str -> N ;
mkN413 base =
  case base of {
    base_1+"ама" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ама" ;
                       Pl => base_1+"ами"
                     } ;
              Acc => table {
                       Sg => base_1+"аму" ;
                       Pl => base_1+"ам"
                     } ;
              Dat => table {
                       Sg => base_1+"амі" ;
                       Pl => base_1+"амам"
                     } ;
              Gen => table {
                       Sg => "ози"+base_1+"ини" ;
                       Pl => base_1+"ам"
                     } ;
              Loc => table {
                       Sg => base_1+"амі" ;
                       Pl => base_1+"амах"
                     } ;
              Instr => table {
                         Sg => base_1+"амою" ;
                         Pl => base_1+"амами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"амо" ;
                Pl => base_1+"ами"
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN413"
  } ;

mkN414 : Str -> N ;
mkN414 base =
  case base of {
    base_1+base_2@?+"я" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+base_2+"я" ;
                       Pl => base_1+base_2+"я"
                     } ;
              Acc => table {
                       Sg => base_1+base_2+"я" ;
                       Pl => base_1+base_2+"я"
                     } ;
              Dat => table {
                       Sg => base_1+base_2+"ю" ;
                       Pl => base_1+base_2+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+base_2+"я" ;
                       Pl => base_1+"е"+base_2
                     } ;
              Loc => table {
                       Sg => base_1+base_2+"і" ;
                       Pl => base_1+base_2+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+base_2+"ям" ;
                         Pl => base_1+base_2+"ями"
                       }
            } ;
        Voc = table {
                Sg => base_1+base_2+"я" ;
                Pl => base_1+base_2+"я"
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN414"
  } ;

mkN415 : Str -> N ;
mkN415 base =
  case base of {
    base_1+base_2@?+"а" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+base_2+"а" ;
                       Pl => base_1+base_2+"и"
                     } ;
              Acc => table {
                       Sg => base_1+base_2+"у" ;
                       Pl => base_1+"е"+base_2
                     } ;
              Dat => table {
                       Sg => base_1+base_2+"і" ;
                       Pl => base_1+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+base_2+"и" ;
                       Pl => base_1+"е"+base_2
                     } ;
              Loc => table {
                       Sg => base_1+base_2+"і" ;
                       Pl => base_1+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+base_2+"ою" ;
                         Pl => base_1+base_2+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+base_2+"о" ;
                Pl => base_1+base_2+"и"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN415"
  } ;

mkN416 : Str -> N ;
mkN416 base =
  case base of {
    base_1+"ка" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ка" ;
                       Pl => base_1+"ки"
                     } ;
              Acc => table {
                       Sg => base_1+"ку" ;
                       Pl => base_1+"ків"
                     } ;
              Dat => table {
                       Sg => base_1+"ці" ;
                       Pl => base_1+"кам"
                     } ;
              Gen => table {
                       Sg => base_1+"ки" ;
                       Pl => base_1+"ків"
                     } ;
              Loc => table {
                       Sg => base_1+"ці" ;
                       Pl => base_1+"ках"
                     } ;
              Instr => table {
                         Sg => base_1+"кою" ;
                         Pl => base_1+"ками"
                       }
            } ;
        Voc = table {
                Sg => base_1+"ко" ;
                Pl => base_1+"ки"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN416"
  } ;

mkN417 : Str -> N ;
mkN417 base =
  case base of {
    base_1+"ка" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ка" ;
                       Pl => base_1+"очки"
                     } ;
              Acc => table {
                       Sg => base_1+"ку" ;
                       Pl => base_1+"ки"
                     } ;
              Dat => table {
                       Sg => base_1+"ці" ;
                       Pl => base_1+"кам"
                     } ;
              Gen => table {
                       Sg => base_1+"очки" ;
                       Pl => base_1+"очок"
                     } ;
              Loc => table {
                       Sg => base_1+"ці" ;
                       Pl => base_1+"ках"
                     } ;
              Instr => table {
                         Sg => base_1+"кою" ;
                         Pl => base_1+"ками"
                       }
            } ;
        Voc = table {
                Sg => base_1+"ко" ;
                Pl => base_1+"ки"
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN417"
  } ;

mkN418 : Str -> N ;
mkN418 base =
  case base of {
    base_1+"ха" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ха" ;
                       Pl => base_1+"хи"
                     } ;
              Acc => table {
                       Sg => base_1+"ху" ;
                       Pl => base_1+"х"
                     } ;
              Dat => table {
                       Sg => base_1+"сі" ;
                       Pl => base_1+"хам"
                     } ;
              Gen => table {
                       Sg => base_1+"хи" ;
                       Pl => base_1+"х"
                     } ;
              Loc => table {
                       Sg => base_1+"сі" ;
                       Pl => base_1+"хах"
                     } ;
              Instr => table {
                         Sg => base_1+"хою" ;
                         Pl => base_1+"хами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"хо" ;
                Pl => base_1+"хи"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN418"
  } ;

mkN419 : Str -> N ;
mkN419 base =
  case base of {
    base_1 => lin N
      { s = table {
              Nom => table {
                       Sg => base_1 ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"я" ;
                       Pl => base_1+"ів"
                     } ;
              Dat => table {
                       Sg => base_1+"еві" ;
                       Pl => base_1+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"я" ;
                       Pl => base_1+"ів"
                     } ;
              Loc => table {
                       Sg => base_1+"еві" ;
                       Pl => base_1+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"ем" ;
                         Pl => base_1+"ями"
                       }
            } ;
        Voc = table {
                Sg => base_1+"е" ;
                Pl => base_1+"і"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN419"
  } ;

mkN420 : Str -> N ;
mkN420 base =
  case base of {
    base_1+"і" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => nonExist ;
                       Pl => base_1+"і"
                     } ;
              Dat => table {
                       Sg => nonExist ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1 ;
                       Pl => base_1
                     } ;
              Loc => table {
                       Sg => nonExist ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => nonExist ;
                         Pl => base_1+"ами"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => base_1+"і"
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN420"
  } ;

mkN421 : Str -> N ;
mkN421 base =
  case base of {
    base_1+"і"+base_2@? => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"і"+base_2 ;
                       Pl => base_1+"е"+base_2+"и"
                     } ;
              Acc => table {
                       Sg => base_1+"і"+base_2 ;
                       Pl => base_1+"е"+base_2+"и"
                     } ;
              Dat => table {
                       Sg => base_1+"е"+base_2+"ові" ;
                       Pl => base_1+"е"+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"е"+base_2+"а" ;
                       Pl => base_1+"е"+base_2+"ів"
                     } ;
              Loc => table {
                       Sg => base_1+"е"+base_2+"і" ;
                       Pl => base_1+"е"+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"е"+base_2+"ом" ;
                         Pl => base_1+"е"+base_2+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"е"+base_2+"е" ;
                Pl => base_1+"е"+base_2+"и"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN421"
  } ;

mkN422 : Str -> N ;
mkN422 base =
  case base of {
    base_1+"чя" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"чя" ;
                       Pl => base_1+"чя"
                     } ;
              Acc => table {
                       Sg => base_1+"чя" ;
                       Pl => base_1+"чя"
                     } ;
              Dat => table {
                       Sg => base_1+"чю" ;
                       Pl => base_1+"чям"
                     } ;
              Gen => table {
                       Sg => base_1+"чя" ;
                       Pl => base_1
                     } ;
              Loc => table {
                       Sg => base_1+"чю" ;
                       Pl => base_1+"чях"
                     } ;
              Instr => table {
                         Sg => base_1+"чям" ;
                         Pl => base_1+"чями"
                       }
            } ;
        Voc = table {
                Sg => base_1+"чя" ;
                Pl => base_1+"чя"
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN422"
  } ;

mkN423 : Str -> N ;
mkN423 base =
  case base of {
    base_1+"е" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"е" ;
                       Pl => base_1+"а"
                     } ;
              Acc => table {
                       Sg => base_1+"е" ;
                       Pl => base_1
                     } ;
              Dat => table {
                       Sg => base_1+"еві" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"а" ;
                       Pl => base_1
                     } ;
              Loc => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ем" ;
                         Pl => base_1+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"е" ;
                Pl => base_1+"а"
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN423"
  } ;

mkN424 : Str -> N ;
mkN424 base =
  case base of {
    base_1+"й" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"й" ;
                       Pl => base_1+"ї"
                     } ;
              Acc => table {
                       Sg => base_1+"я" ;
                       Pl => base_1+"їв"
                     } ;
              Dat => table {
                       Sg => base_1+"ю" ;
                       Pl => base_1+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"я" ;
                       Pl => base_1+"їв"
                     } ;
              Loc => table {
                       Sg => base_1+"ю" ;
                       Pl => base_1+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"єм" ;
                         Pl => base_1+"ями"
                       }
            } ;
        Voc = table {
                Sg => base_1+"е" ;
                Pl => base_1+"ї"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN424"
  } ;

mkN425 : Str -> N ;
mkN425 base =
  case base of {
    base_1 => lin N
      { s = table {
              Nom => table {
                       Sg => base_1 ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => base_1 ;
                       Pl => base_1+"ей"
                     } ;
              Dat => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ей"
                     } ;
              Loc => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"чю" ;
                         Pl => base_1+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"е" ;
                Pl => base_1+"і"
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN425"
  } ;

mkN426 : Str -> N ;
mkN426 base =
  case base of {
    base_1+"ій" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ій" ;
                       Pl => nonExist
                     } ;
              Acc => table {
                       Sg => base_1+"ій" ;
                       Pl => nonExist
                     } ;
              Dat => table {
                       Sg => base_1+"ею" ;
                       Pl => nonExist
                     } ;
              Gen => table {
                       Sg => base_1+"ею" ;
                       Pl => nonExist
                     } ;
              Loc => table {
                       Sg => base_1+"ею" ;
                       Pl => nonExist
                     } ;
              Instr => table {
                         Sg => base_1+"еєм" ;
                         Pl => nonExist
                       }
            } ;
        Voc = table {
                Sg => base_1+"ею" ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN426"
  } ;

mkN427 : Str -> N ;
mkN427 base =
  case base of {
    base_1+"що"+base_2@? => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"що"+base_2 ;
                       Pl => base_1+"ш"+base_2+"и"
                     } ;
              Acc => table {
                       Sg => base_1+"що"+base_2 ;
                       Pl => base_1+"ш"+base_2+"и"
                     } ;
              Dat => table {
                       Sg => base_1+"ш"+base_2+"ові" ;
                       Pl => base_1+"ш"+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"ш"+base_2+"а" ;
                       Pl => base_1+"ш"+base_2+"ів"
                     } ;
              Loc => table {
                       Sg => base_1+"ш"+base_2+"ові" ;
                       Pl => base_1+"ш"+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ш"+base_2+"ом" ;
                         Pl => base_1+"ш"+base_2+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"ш"+base_2+"у" ;
                Pl => base_1+"ш"+base_2+"и"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN427"
  } ;

mkN428 : Str -> N ;
mkN428 base =
  case base of {
    base_1+"ка" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ка" ;
                       Pl => base_1+"ки"
                     } ;
              Acc => table {
                       Sg => base_1+"ку" ;
                       Pl => base_1+"ки"
                     } ;
              Dat => table {
                       Sg => base_1+"ці" ;
                       Pl => base_1+"кам"
                     } ;
              Gen => table {
                       Sg => base_1+"ки" ;
                       Pl => base_1+"ок"
                     } ;
              Loc => table {
                       Sg => base_1+"ці" ;
                       Pl => base_1+"ках"
                     } ;
              Instr => table {
                         Sg => base_1+"кою" ;
                         Pl => base_1+"ками"
                       }
            } ;
        Voc = table {
                Sg => base_1+"ко" ;
                Pl => base_1+"ки"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN428"
  } ;

mkN429 : Str -> N ;
mkN429 base =
  case base of {
    base_1+"ка"+base_2@(?+?+?+?+?+?+?+?) => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ка"+base_2 ;
                       Pl => base_1+"ки"+base_2+"и"
                     } ;
              Acc => table {
                       Sg => base_1+"ку"+base_2 ;
                       Pl => base_1+"ки"+base_2+"и"
                     } ;
              Dat => table {
                       Sg => base_1+"ці"+base_2+"ові" ;
                       Pl => base_1+"кам"+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"ки"+base_2+"а" ;
                       Pl => base_1+"ок"+base_2+"ів"
                     } ;
              Loc => table {
                       Sg => base_1+"ці"+base_2+"у" ;
                       Pl => base_1+"ках"+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"кою"+base_2+"ом" ;
                         Pl => base_1+"ками"+base_2+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"ко"+base_2+"у" ;
                Pl => base_1+"ки"+base_2+"и"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN429"
  } ;

mkN430 : Str -> N ;
mkN430 base =
  case base of {
    base_1+"ція" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ція" ;
                       Pl => nonExist
                     } ;
              Acc => table {
                       Sg => base_1+"цію" ;
                       Pl => nonExist
                     } ;
              Dat => table {
                       Sg => base_1+"ції" ;
                       Pl => nonExist
                     } ;
              Gen => table {
                       Sg => base_1+"тору" ;
                       Pl => nonExist
                     } ;
              Loc => table {
                       Sg => base_1+"ції" ;
                       Pl => nonExist
                     } ;
              Instr => table {
                         Sg => base_1+"цією" ;
                         Pl => nonExist
                       }
            } ;
        Voc = table {
                Sg => base_1+"ціє" ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN430"
  } ;

mkN431 : Str -> N ;
mkN431 base =
  case base of {
    base_1+base_2@(?+?+?+?+?+?+?+?+?) => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+base_2 ;
                       Pl => base_1+base_2+"и"
                     } ;
              Acc => table {
                       Sg => base_1+base_2 ;
                       Pl => base_1+"и"+base_2+"и"
                     } ;
              Dat => table {
                       Sg => base_1+"у"+base_2+"ові" ;
                       Pl => base_1+"ам"+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+base_2+"у" ;
                       Pl => base_1+base_2+"ів"
                     } ;
              Loc => table {
                       Sg => base_1+"і"+base_2+"і" ;
                       Pl => base_1+"ах"+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ом"+base_2+"ом" ;
                         Pl => base_1+"ами"+base_2+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"е"+base_2+"е" ;
                Pl => base_1+"и"+base_2+"и"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN431"
  } ;

mkN432 : Str -> N ;
mkN432 base =
  case base of {
    base_1 => lin N
      { s = table {
              Nom => table {
                       Sg => base_1 ;
                       Pl => base_1+"и"
                     } ;
              Acc => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"ів"
                     } ;
              Dat => table {
                       Sg => base_1+"ові" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"ів"
                     } ;
              Loc => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ом" ;
                         Pl => base_1+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"е" ;
                Pl => base_1+"и"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN432"
  } ;

mkN433 : Str -> N ;
mkN433 base =
  case base of {
    base_1+"ня" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ня" ;
                       Pl => base_1+"ня"
                     } ;
              Acc => table {
                       Sg => nonExist ;
                       Pl => base_1+"ня"
                     } ;
              Dat => table {
                       Sg => nonExist ;
                       Pl => base_1+"ням"
                     } ;
              Gen => table {
                       Sg => base_1+"ь" ;
                       Pl => base_1+"ь"
                     } ;
              Loc => table {
                       Sg => nonExist ;
                       Pl => base_1+"нях"
                     } ;
              Instr => table {
                         Sg => nonExist ;
                         Pl => base_1+"нями"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => base_1+"ня"
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN433"
  } ;

mkN434 : Str -> N ;
mkN434 base =
  case base of {
    "причина" => lin N
      { s = table {
              Nom => table {
                       Sg => "причина" ;
                       Pl => "сволоти"
                     } ;
              Acc => table {
                       Sg => "причину" ;
                       Pl => "причини"
                     } ;
              Dat => table {
                       Sg => "причині" ;
                       Pl => "причинам"
                     } ;
              Gen => table {
                       Sg => "сволоти" ;
                       Pl => "сволот"
                     } ;
              Loc => table {
                       Sg => "причині" ;
                       Pl => "причинах"
                     } ;
              Instr => table {
                         Sg => "причиною" ;
                         Pl => "причинами"
                       }
            } ;
        Voc = table {
                Sg => "причино" ;
                Pl => "причини"
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN434"
  } ;

mkN435 : Str -> N ;
mkN435 base =
  case base of {
    base_1+"ьо"+base_2@? => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ьо"+base_2 ;
                       Pl => base_1+base_2+"и"
                     } ;
              Acc => table {
                       Sg => base_1+"ьо"+base_2 ;
                       Pl => base_1+base_2+"и"
                     } ;
              Dat => table {
                       Sg => base_1+base_2+"ові" ;
                       Pl => base_1+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+base_2+"а" ;
                       Pl => base_1+base_2+"ів"
                     } ;
              Loc => table {
                       Sg => base_1+base_2+"у" ;
                       Pl => base_1+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+base_2+"ом" ;
                         Pl => base_1+base_2+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+base_2+"у" ;
                Pl => base_1+base_2+"и"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN435"
  } ;

mkN436 : Str -> N ;
mkN436 base =
  case base of {
    base_1+"х" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"х" ;
                       Pl => base_1+"хи"
                     } ;
              Acc => table {
                       Sg => base_1+"ха" ;
                       Pl => base_1+"хи"
                     } ;
              Dat => table {
                       Sg => base_1+"хові" ;
                       Pl => base_1+"хам"
                     } ;
              Gen => table {
                       Sg => base_1+"ха" ;
                       Pl => base_1+"хів"
                     } ;
              Loc => table {
                       Sg => base_1+"хові" ;
                       Pl => base_1+"хах"
                     } ;
              Instr => table {
                         Sg => base_1+"хом" ;
                         Pl => base_1+"хами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"ше" ;
                Pl => base_1+"хи"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN436"
  } ;

mkN437 : Str -> N ;
mkN437 base =
  case base of {
    base_1+base_2@?+"ця" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+base_2+"ця" ;
                       Pl => base_1+base_2+"ця"
                     } ;
              Acc => table {
                       Sg => nonExist ;
                       Pl => base_1+base_2+"ця"
                     } ;
              Dat => table {
                       Sg => nonExist ;
                       Pl => base_1+base_2+"цям"
                     } ;
              Gen => table {
                       Sg => base_1+"ец"+base_2 ;
                       Pl => base_1+"ец"+base_2
                     } ;
              Loc => table {
                       Sg => nonExist ;
                       Pl => base_1+base_2+"цях"
                     } ;
              Instr => table {
                         Sg => nonExist ;
                         Pl => base_1+base_2+"цями"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => base_1+base_2+"ця"
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN437"
  } ;

mkN438 : Str -> N ;
mkN438 base =
  case base of {
    base_1+"е"+base_2@? => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"е"+base_2 ;
                       Pl => base_1+base_2+"и"
                     } ;
              Acc => table {
                       Sg => base_1+"е"+base_2 ;
                       Pl => base_1+base_2+"и"
                     } ;
              Dat => table {
                       Sg => base_1+base_2+"ові" ;
                       Pl => base_1+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+base_2+"а" ;
                       Pl => base_1+base_2+"ів"
                     } ;
              Loc => table {
                       Sg => base_1+base_2+"у" ;
                       Pl => base_1+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+base_2+"ом" ;
                         Pl => base_1+base_2+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+base_2+"е" ;
                Pl => base_1+base_2+"и"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN438"
  } ;

mkN439 : Str -> N ;
mkN439 base =
  case base of {
    base_1+"о" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"о" ;
                       Pl => base_1+"и"
                     } ;
              Acc => table {
                       Sg => base_1+"о" ;
                       Pl => base_1+"ів"
                     } ;
              Dat => table {
                       Sg => base_1+"ові" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"ів"
                     } ;
              Loc => table {
                       Sg => base_1+"ові" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ом" ;
                         Pl => base_1+"ами"
                       }
            } ;
        Voc = table {
                Sg => base_1+"о" ;
                Pl => base_1+"и"
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN439"
  } ;

mkN440 : Str -> N ;
mkN440 base =
  case base of {
    base_1+"р"+base_2@?+base_3@?+"ь" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"р"+base_2+base_3+"ь" ;
                       Pl => base_1+base_2+"р"+base_3+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"р"+base_2+base_3+"ь" ;
                       Pl => base_1+base_2+"р"+base_3+"і"
                     } ;
              Dat => table {
                       Sg => base_1+base_2+"р"+base_3+"еві" ;
                       Pl => base_1+base_2+"р"+base_3+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+base_2+"р"+base_3+"я" ;
                       Pl => base_1+base_2+"р"+base_3+"ів"
                     } ;
              Loc => table {
                       Sg => base_1+base_2+"р"+base_3+"ю" ;
                       Pl => base_1+base_2+"р"+base_3+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+base_2+"р"+base_3+"ем" ;
                         Pl => base_1+base_2+"р"+base_3+"ями"
                       }
            } ;
        Voc = table {
                Sg => base_1+base_2+"р"+base_3+"ю" ;
                Pl => base_1+base_2+"р"+base_3+"і"
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN440"
  } ;

mkN441 : Str -> N ;
mkN441 base =
  case base of {
    base_1+"і"+base_2@(?+?)+"ь" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"і"+base_2+"ь" ;
                       Pl => nonExist
                     } ;
              Acc => table {
                       Sg => base_1+"і"+base_2+"ь" ;
                       Pl => nonExist
                     } ;
              Dat => table {
                       Sg => base_1+"о"+base_2+"і" ;
                       Pl => nonExist
                     } ;
              Gen => table {
                       Sg => base_1+"о"+base_2+"и" ;
                       Pl => nonExist
                     } ;
              Loc => table {
                       Sg => base_1+"о"+base_2+"і" ;
                       Pl => nonExist
                     } ;
              Instr => table {
                         Sg => base_1+"і"+base_2+"ю" ;
                         Pl => nonExist
                       }
            } ;
        Voc = table {
                Sg => base_1+"о"+base_2+"е" ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN441"
  } ;

mkN442 : Str -> N ;
mkN442 base =
  case base of {
    base_1+"я" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"я" ;
                       Pl => nonExist
                     } ;
              Acc => table {
                       Sg => base_1+"ю" ;
                       Pl => nonExist
                     } ;
              Dat => table {
                       Sg => base_1+"ї" ;
                       Pl => nonExist
                     } ;
              Gen => table {
                       Sg => base_1+"ї" ;
                       Pl => nonExist
                     } ;
              Loc => table {
                       Sg => base_1+"і" ;
                       Pl => nonExist
                     } ;
              Instr => table {
                         Sg => base_1+"єю" ;
                         Pl => nonExist
                       }
            } ;
        Voc = table {
                Sg => base_1+"є" ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN442"
  } ;

mkV001 : Str -> V ;
mkV001 base =
  case base of {
    base_1+"ти" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"ти" ;
                                                Pl => base_1+"єм"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"єш" ;
                                                Pl => base_1+"єте"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"є" ;
                                                Pl => base_1+"ють"
                                              }
                                      }
                             } ;
                   Perf => { Past = base_1+"лий" ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"ти" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"ймо" ;
        imperative2 = table {
                        Sg => base_1+"й" ;
                        Pl => base_1+"йте"
                      } ;
        infinitive = base_1+"ти" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"в" ;
                                 Pl => base_1+"ли"
                               } ;
                       Fem => table {
                                Sg => base_1+"ла" ;
                                Pl => base_1+"ли"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"ло" ;
                                   Pl => base_1+"ли"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => base_1+"тий"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"ний"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV001"
  } ;

mkV002 : Str -> V ;
mkV002 base =
  case base of {
    base_1+"ити" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"ити" ;
                                                Pl => base_1+"им"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"иш" ;
                                                Pl => base_1+"ите"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"ить" ;
                                                Pl => base_1+"ять"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"ити" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"ьмо" ;
        imperative2 = table {
                        Sg => base_1+"ь" ;
                        Pl => base_1+"ьте"
                      } ;
        infinitive = base_1+"ити" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"ив" ;
                                 Pl => base_1+"или"
                               } ;
                       Fem => table {
                                Sg => base_1+"ила" ;
                                Pl => base_1+"или"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"ило" ;
                                   Pl => base_1+"или"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => base_1+"ений"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"ений"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV002"
  } ;

mkV003 : Str -> V ;
mkV003 base =
  case base of {
    base_1+"вати" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"вати" ;
                                                Pl => base_1+"єм"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"єш" ;
                                                Pl => base_1+"єте"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"є" ;
                                                Pl => base_1+"ють"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"ваймо" ;
        imperative2 = table {
                        Sg => base_1+"вай" ;
                        Pl => base_1+"вайте"
                      } ;
        infinitive = base_1+"вати" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"вав" ;
                                 Pl => base_1+"вали"
                               } ;
                       Fem => table {
                                Sg => base_1+"вала" ;
                                Pl => base_1+"вали"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"вало" ;
                                   Pl => base_1+"вали"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => base_1+"ваний"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV003"
  } ;

mkV004 : Str -> V ;
mkV004 base =
  case base of {
    base_1+"с"+base_2@?+"ати" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"с"+base_2+"ати" ;
                                                Pl => base_1+"ш"+base_2+"ем"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"ш"+base_2+"еш" ;
                                                Pl => base_1+"ш"+base_2+"ете"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"ш"+base_2+"е" ;
                                                Pl => base_1+"ш"+base_2+"ють"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"с"+base_2+"ати" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"ш"+base_2+"ім" ;
        imperative2 = table {
                        Sg => base_1+"ш"+base_2+"и" ;
                        Pl => base_1+"ш"+base_2+"іть"
                      } ;
        infinitive = base_1+"с"+base_2+"ати" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"с"+base_2+"ав" ;
                                 Pl => base_1+"с"+base_2+"али"
                               } ;
                       Fem => table {
                                Sg => base_1+"с"+base_2+"ала" ;
                                Pl => base_1+"с"+base_2+"али"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"с"+base_2+"ало" ;
                                   Pl => base_1+"с"+base_2+"али"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"с"+base_2+"аний"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV004"
  } ;

mkV005 : Str -> V ;
mkV005 base =
  case base of {
    base_1+base_2@?+"ати" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+base_2+"ати" ;
                                                Pl => base_1+"те"+base_2+"ем"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"те"+base_2+"еш" ;
                                                Pl => base_1+"те"+base_2+"ете"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"те"+base_2+"е" ;
                                                Pl => base_1+"те"+base_2+"ють"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+base_2+"ати" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"те"+base_2+"ім" ;
        imperative2 = table {
                        Sg => base_1+"те"+base_2+"и" ;
                        Pl => base_1+"те"+base_2+"іть"
                      } ;
        infinitive = base_1+base_2+"ати" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+base_2+"ав" ;
                                 Pl => base_1+base_2+"али"
                               } ;
                       Fem => table {
                                Sg => base_1+base_2+"ала" ;
                                Pl => base_1+base_2+"али"
                              } ;
                       Neuter => table {
                                   Sg => base_1+base_2+"ало" ;
                                   Pl => base_1+base_2+"али"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+base_2+"аний"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV005"
  } ;

mkV006 : Str -> V ;
mkV006 base =
  case base of {
    "с"+base_1+"ати" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => "с"+base_1+"ати" ;
                                                Pl => "ш"+base_1+"ем"
                                              } ;
                                        P2 => table {
                                                Sg => "ш"+base_1+"еш" ;
                                                Pl => "ш"+base_1+"ете"
                                              } ;
                                        P3 => table {
                                                Sg => "ш"+base_1+"е" ;
                                                Pl => "ш"+base_1+"ють"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = "ш"+base_1+"ім" ;
        imperative2 = table {
                        Sg => "ш"+base_1+"и" ;
                        Pl => "ш"+base_1+"іть"
                      } ;
        infinitive = "с"+base_1+"ати" ;
        participle = table {
                       Masc => table {
                                 Sg => "с"+base_1+"ав" ;
                                 Pl => "с"+base_1+"али"
                               } ;
                       Fem => table {
                                Sg => "с"+base_1+"ала" ;
                                Pl => "с"+base_1+"али"
                              } ;
                       Neuter => table {
                                   Sg => "с"+base_1+"ало" ;
                                   Pl => "с"+base_1+"али"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV006"
  } ;

mkV007 : Str -> V ;
mkV007 base =
  case base of {
    base_1+"ити" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"ити" ;
                                                Pl => base_1+"им"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"иш" ;
                                                Pl => base_1+"ите"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"ить" ;
                                                Pl => base_1+"лять"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"ити" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"мо" ;
        imperative2 = table {
                        Sg => base_1 ;
                        Pl => base_1+"те"
                      } ;
        infinitive = base_1+"ити" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"ив" ;
                                 Pl => base_1+"или"
                               } ;
                       Fem => table {
                                Sg => base_1+"ила" ;
                                Pl => base_1+"или"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"ило" ;
                                   Pl => base_1+"или"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => base_1+"лений"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"лений"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV007"
  } ;

mkV008 : Str -> V ;
mkV008 base =
  case base of {
    base_1+"тити" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"тити" ;
                                                Pl => base_1+"тим"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"тиш" ;
                                                Pl => base_1+"тите"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"тить" ;
                                                Pl => base_1+"тять"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"тити" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"тьмо" ;
        imperative2 = table {
                        Sg => base_1+"ть" ;
                        Pl => base_1+"тьте"
                      } ;
        infinitive = base_1+"тити" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"тив" ;
                                 Pl => base_1+"тили"
                               } ;
                       Fem => table {
                                Sg => base_1+"тила" ;
                                Pl => base_1+"тили"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"тило" ;
                                   Pl => base_1+"тили"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => base_1+"чений"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"чений"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV008"
  } ;

mkV009 : Str -> V ;
mkV009 base =
  case base of {
    base_1+"ити" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"ити" ;
                                                Pl => base_1+"'єм"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"'єш" ;
                                                Pl => base_1+"'єте"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"'є" ;
                                                Pl => base_1+"'ють"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"иймо" ;
        imperative2 = table {
                        Sg => base_1+"ий" ;
                        Pl => base_1+"ийте"
                      } ;
        infinitive = base_1+"ити" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"ив" ;
                                 Pl => base_1+"или"
                               } ;
                       Fem => table {
                                Sg => base_1+"ила" ;
                                Pl => base_1+"или"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"ило" ;
                                   Pl => base_1+"или"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => base_1+"итий"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV009"
  } ;

mkV010 : Str -> V ;
mkV010 base =
  case base of {
    base_1+"ити" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"ити" ;
                                                Pl => base_1+"им"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"иш" ;
                                                Pl => base_1+"ите"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"ить" ;
                                                Pl => base_1+"ять"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"ити" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"ім" ;
        imperative2 = table {
                        Sg => base_1+"и" ;
                        Pl => base_1+"іть"
                      } ;
        infinitive = base_1+"ити" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"ив" ;
                                 Pl => base_1+"или"
                               } ;
                       Fem => table {
                                Sg => base_1+"ила" ;
                                Pl => base_1+"или"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"ило" ;
                                   Pl => base_1+"или"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => base_1+"жений"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"лений"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV010"
  } ;

mkV011 : Str -> V ;
mkV011 base =
  case base of {
    base_1+"ити" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"ити" ;
                                                Pl => base_1+"им"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"иш" ;
                                                Pl => base_1+"ите"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"ить" ;
                                                Pl => base_1+"ать"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"ити" ; --guessed
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"ім" ;
        imperative2 = table {
                        Sg => base_1+"и" ;
                        Pl => base_1+"іть"
                      } ;
        infinitive = base_1+"ити" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"ив" ;
                                 Pl => base_1+"или"
                               } ;
                       Fem => table {
                                Sg => base_1+"ила" ;
                                Pl => base_1+"или"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"ило" ;
                                   Pl => base_1+"или"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => base_1+"ений"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"лений" --guessed
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV011"
  } ;

mkV012 : Str -> V ;
mkV012 base =
  case base of {
    base_1+"ити" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"ити" ;
                                                Pl => base_1+"им"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"иш" ;
                                                Pl => base_1+"ите"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"ить" ;
                                                Pl => base_1+"лять"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"ити" ; --guessed
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"ім" ;
        imperative2 = table {
                        Sg => base_1+"и" ;
                        Pl => base_1+"іть"
                      } ;
        infinitive = base_1+"ити" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"ив" ;
                                 Pl => base_1+"или"
                               } ;
                       Fem => table {
                                Sg => base_1+"ила" ;
                                Pl => base_1+"или"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"ило" ;
                                   Pl => base_1+"или"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => base_1+"лений"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"лений" --guessed
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV012"
  } ;

mkV013 : Str -> V ;
mkV013 base =
  case base of {
    base_1+"ти" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"ти" ;
                                                Pl => base_1+"єм"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"єш" ;
                                                Pl => base_1+"єте"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"є" ;
                                                Pl => base_1+"ють"
                                              }
                                      }
                             } ;
                   Perf => { Past = base_1+"лий" ; --guessed
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"ти" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"ймо" ;
        imperative2 = table {
                        Sg => base_1+"й" ;
                        Pl => base_1+"йте"
                      } ;
        infinitive = base_1+"ти" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"в" ;
                                 Pl => base_1+"ли"
                               } ;
                       Fem => table {
                                Sg => base_1+"ла" ;
                                Pl => base_1+"ли"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"ло" ;
                                   Pl => base_1+"ли"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => base_1+"ний"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"тий"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV013"
  } ;

mkV014 : Str -> V ;
mkV014 base =
  case base of {
    base_1+"ати" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"ати" ;
                                                Pl => base_1+"ем"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"еш" ;
                                                Pl => base_1+"ете"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"е" ;
                                                Pl => base_1+"ють"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"ати" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"ім" ;
        imperative2 = table {
                        Sg => base_1+"и" ;
                        Pl => base_1+"іть"
                      } ;
        infinitive = base_1+"ати" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"ав" ;
                                 Pl => base_1+"али"
                               } ;
                       Fem => table {
                                Sg => base_1+"ала" ;
                                Pl => base_1+"али"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"ало" ;
                                   Pl => base_1+"али"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => base_1+"аний"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"аний"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV014"
  } ;

mkV015 : Str -> V ;
mkV015 base =
  case base of {
    base_1+"ести" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"ести" ;
                                                Pl => base_1+"едем"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"едеш" ;
                                                Pl => base_1+"едете"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"еде" ;
                                                Pl => base_1+"едуть"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"ести" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"едім" ;
        imperative2 = table {
                        Sg => base_1+"еди" ;
                        Pl => base_1+"едіть"
                      } ;
        infinitive = base_1+"ести" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"ів" ;
                                 Pl => base_1+"ели"
                               } ;
                       Fem => table {
                                Sg => base_1+"ела" ;
                                Pl => base_1+"ели"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"ело" ;
                                   Pl => base_1+"ели"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => base_1+"едений"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"едений"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV015"
  } ;

mkV016 : Str -> V ;
mkV016 base =
  case base of {
    base_1+"зати" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"зати" ;
                                                Pl => base_1+"жем"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"жеш" ;
                                                Pl => base_1+"жете"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"же" ;
                                                Pl => base_1+"жуть"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"зати" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"жім" ;
        imperative2 = table {
                        Sg => base_1+"жи" ;
                        Pl => base_1+"жіть"
                      } ;
        infinitive = base_1+"зати" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"зав" ;
                                 Pl => base_1+"зали"
                               } ;
                       Fem => table {
                                Sg => base_1+"зала" ;
                                Pl => base_1+"зали"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"зало" ;
                                   Pl => base_1+"зали"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => base_1+"заний"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"заний"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV016"
  } ;

mkV017 : Str -> V ;
mkV017 base =
  case base of {
    base_1+"ати" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"ати" ;
                                                Pl => base_1+"им"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"иш" ;
                                                Pl => base_1+"ите"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"ить" ;
                                                Pl => base_1+"ать"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"ати" ; --guessed
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"ім" ;
        imperative2 = table {
                        Sg => base_1+"и" ;
                        Pl => base_1+"іть"
                      } ;
        infinitive = base_1+"ати" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"ав" ;
                                 Pl => base_1+"али"
                               } ;
                       Fem => table {
                                Sg => base_1+"ала" ;
                                Pl => base_1+"али"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"ало" ;
                                   Pl => base_1+"али"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => base_1+"аний"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"аний" --guessed
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV017"
  } ;

mkV018 : Str -> V ;
mkV018 base =
  case base of {
    base_1+"сити" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"сити" ;
                                                Pl => base_1+"сим"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"сиш" ;
                                                Pl => base_1+"сите"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"сить" ;
                                                Pl => base_1+"сять"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"сити" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"сім" ;
        imperative2 = table {
                        Sg => base_1+"си" ;
                        Pl => base_1+"сіть"
                      } ;
        infinitive = base_1+"сити" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"сив" ;
                                 Pl => base_1+"сили"
                               } ;
                       Fem => table {
                                Sg => base_1+"сила" ;
                                Pl => base_1+"сили"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"сило" ;
                                   Pl => base_1+"сили"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => base_1+"шений"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"шений"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV018"
  } ;

mkV019 : Str -> V ;
mkV019 base =
  case base of {
    base_1+"сати" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"сати" ;
                                                Pl => base_1+"шем"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"шеш" ;
                                                Pl => base_1+"шете"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"ше" ;
                                                Pl => base_1+"шуть"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"сати" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"шім" ;
        imperative2 = table {
                        Sg => base_1+"ши" ;
                        Pl => base_1+"шіть"
                      } ;
        infinitive = base_1+"сати" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"сав" ;
                                 Pl => base_1+"сали"
                               } ;
                       Fem => table {
                                Sg => base_1+"сала" ;
                                Pl => base_1+"сали"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"сало" ;
                                   Pl => base_1+"сали"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => base_1+"саний"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"саний"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV019"
  } ;

mkV020 : Str -> V ;
mkV020 base =
  case base of {
    base_1+"ти" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"ти" ;
                                                Pl => nonExist
                                              } ;
                                        P2 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"є" ; --guessed
                                                Pl => base_1+"ють" --guessed
                                              }
                                      }
                             } ;
                   Perf => { Past = base_1+"лий" ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"ти" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"ньмо" ;
        imperative2 = table {
                        Sg => base_1+"нь" ;
                        Pl => base_1+"ньте"
                      } ;
        infinitive = base_1+"ти" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"в" ;
                                 Pl => base_1+"ли"
                               } ;
                       Fem => table {
                                Sg => base_1+"ла" ;
                                Pl => base_1+"ли"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"ло" ;
                                   Pl => base_1+"ли"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"тий"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV020"
  } ;

mkV021 : Str -> V ;
mkV021 base =
  case base of {
    base_1+"ити" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"ити" ;
                                                Pl => base_1+"им"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"иш" ;
                                                Pl => base_1+"ите"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"ить" ;
                                                Pl => base_1+"ять"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"ити" ; --guessed
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"ім" ;
        imperative2 = table {
                        Sg => base_1+"и" ;
                        Pl => base_1+"іть"
                      } ;
        infinitive = base_1+"ити" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"ив" ;
                                 Pl => base_1+"или"
                               } ;
                       Fem => table {
                                Sg => base_1+"ила" ;
                                Pl => base_1+"или"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"ило" ;
                                   Pl => base_1+"или"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => base_1+"ений"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"лений" --guessed
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV021"
  } ;

mkV022 : Str -> V ;
mkV022 base =
  case base of {
    base_1+"ити" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"ити" ;
                                                Pl => "будемо "+base_1+"ити"
                                              } ;
                                        P2 => table {
                                                Sg => "будеш "+base_1+"ити" ;
                                                Pl => "будете "+base_1+"ити"
                                              } ;
                                        P3 => table {
                                                Sg => "буде "+base_1+"ити" ;
                                                Pl => "будуть "+base_1+"ити"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"ити" ; --guessed
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"ім" ;
        imperative2 = table {
                        Sg => base_1+"и" ;
                        Pl => base_1+"іть"
                      } ;
        infinitive = base_1+"ити" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"ив" ;
                                 Pl => base_1+"или"
                               } ;
                       Fem => table {
                                Sg => base_1+"ила" ;
                                Pl => base_1+"или"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"ило" ;
                                   Pl => base_1+"или"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => base_1+"жений"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"лений" --guessed
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV022"
  } ;

mkV023 : Str -> V ;
mkV023 base =
  case base of {
    base_1+"зати" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"зати" ;
                                                Pl => base_1+"жем"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"жеш" ;
                                                Pl => base_1+"жете"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"же" ;
                                                Pl => base_1+"жуть"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"зати" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"жмо" ;
        imperative2 = table {
                        Sg => base_1+"ж" ;
                        Pl => base_1+"жте"
                      } ;
        infinitive = base_1+"зати" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"зав" ;
                                 Pl => base_1+"зали"
                               } ;
                       Fem => table {
                                Sg => base_1+"зала" ;
                                Pl => base_1+"зали"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"зало" ;
                                   Pl => base_1+"зали"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => base_1+"заний"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"заний"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV023"
  } ;

mkV024 : Str -> V ;
mkV024 base =
  case base of {
    base_1+"е"+base_2@("рз"|?)+"ти" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"е"+base_2+"ти" ;
                                                Pl => base_1+"е"+base_2+"ем"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"е"+base_2+"еш" ;
                                                Pl => base_1+"е"+base_2+"ете"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"е"+base_2+"е" ;
                                                Pl => base_1+"е"+base_2+"уть"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"е"+base_2+"ти" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"е"+base_2+"ім" ;
        imperative2 = table {
                        Sg => base_1+"е"+base_2+"и" ;
                        Pl => base_1+"е"+base_2+"іть"
                      } ;
        infinitive = base_1+"е"+base_2+"ти" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"і"+base_2 ;
                                 Pl => base_1+"е"+base_2+"ли"
                               } ;
                       Fem => table {
                                Sg => base_1+"е"+base_2+"ла" ;
                                Pl => base_1+"е"+base_2+"ли"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"е"+base_2+"ло" ;
                                   Pl => base_1+"е"+base_2+"ли"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => base_1+"е"+base_2+"ений"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"е"+base_2+"ений"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV024"
  } ;

mkV025 : Str -> V ;
mkV025 base =
  case base of {
    base_1+"сти" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"сти" ;
                                                Pl => base_1+"дем"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"деш" ;
                                                Pl => base_1+"дете"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"де" ;
                                                Pl => base_1+"дуть"
                                              }
                                      }
                             } ;
                   Perf => { Past = base_1+"лий" ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"сти" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"дім" ;
        imperative2 = table {
                        Sg => base_1+"ди" ;
                        Pl => base_1+"діть"
                      } ;
        infinitive = base_1+"сти" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"в" ;
                                 Pl => base_1+"ли"
                               } ;
                       Fem => table {
                                Sg => base_1+"ла" ;
                                Pl => base_1+"ли"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"ло" ;
                                   Pl => base_1+"ли"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => base_1+"дений"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"дений"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV025"
  } ;

mkV026 : Str -> V ;
mkV026 base =
  case base of {
    base_1+"сти" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"сти" ;
                                                Pl => base_1+"дем"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"деш" ;
                                                Pl => base_1+"дете"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"де" ;
                                                Pl => base_1+"дуть"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"сти" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"дьмо" ;
        imperative2 = table {
                        Sg => base_1+"дь" ;
                        Pl => base_1+"дьте"
                      } ;
        infinitive = base_1+"сти" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"в" ;
                                 Pl => base_1+"ли"
                               } ;
                       Fem => table {
                                Sg => base_1+"ла" ;
                                Pl => base_1+"ли"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"ло" ;
                                   Pl => base_1+"ли"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => base_1+"дений"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"дений"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV026"
  } ;

mkV027 : Str -> V ;
mkV027 base =
  case base of {
    base_1+"стити" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"стити" ;
                                                Pl => base_1+"стим"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"стиш" ;
                                                Pl => base_1+"стите"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"стить" ;
                                                Pl => base_1+"стять"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"стити" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"стьмо" ;
        imperative2 = table {
                        Sg => base_1+"сть" ;
                        Pl => base_1+"стьте"
                      } ;
        infinitive = base_1+"стити" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"стив" ;
                                 Pl => base_1+"стили"
                               } ;
                       Fem => table {
                                Sg => base_1+"стила" ;
                                Pl => base_1+"стили"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"стило" ;
                                   Pl => base_1+"стили"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => base_1+"щений"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"щений"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV027"
  } ;

mkV028 : Str -> V ;
mkV028 base =
  case base of {
    base_1+"ти" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"ти" ;
                                                Pl => base_1+"вем"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"веш" ;
                                                Pl => base_1+"вете"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"ве" ;
                                                Pl => base_1+"вуть"
                                              }
                                      }
                             } ;
                   Perf => { Past = base_1+"лий" ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"ти" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"вім" ;
        imperative2 = table {
                        Sg => base_1+"ви" ;
                        Pl => base_1+"віть"
                      } ;
        infinitive = base_1+"ти" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"в" ;
                                 Pl => base_1+"ли"
                               } ;
                       Fem => table {
                                Sg => base_1+"ла" ;
                                Pl => base_1+"ли"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"ло" ;
                                   Pl => base_1+"ли"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => base_1+"тий"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"тий"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV028"
  } ;

mkV029 : Str -> V ;
mkV029 base =
  case base of {
    base_1+"ести" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"ести" ;
                                                Pl => base_1+"етем"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"етеш" ;
                                                Pl => base_1+"етете"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"ете" ;
                                                Pl => base_1+"етуть"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"ести" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"етім" ;
        imperative2 = table {
                        Sg => base_1+"ети" ;
                        Pl => base_1+"етіть"
                      } ;
        infinitive = base_1+"ести" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"ів" ;
                                 Pl => base_1+"ели"
                               } ;
                       Fem => table {
                                Sg => base_1+"ела" ;
                                Pl => base_1+"ели"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"ело" ;
                                   Pl => base_1+"ели"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => base_1+"етений"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"етений"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV029"
  } ;

mkV030 : Str -> V ;
mkV030 base =
  case base of {
    base_1+"ити" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"ити" ;
                                                Pl => base_1+"лєм"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"лєш" ;
                                                Pl => base_1+"лєте"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"лє" ;
                                                Pl => base_1+"лють"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"иймо" ;
        imperative2 = table {
                        Sg => base_1+"ий" ;
                        Pl => base_1+"ийте"
                      } ;
        infinitive = base_1+"ити" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"ив" ;
                                 Pl => base_1+"или"
                               } ;
                       Fem => table {
                                Sg => base_1+"ила" ;
                                Pl => base_1+"или"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"ило" ;
                                   Pl => base_1+"или"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => base_1+"итий"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV030"
  } ;

mkV031 : Str -> V ;
mkV031 base =
  case base of {
    base_1+"ити" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"ити" ;
                                                Pl => base_1+"им"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"иш" ;
                                                Pl => base_1+"ите"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"ить" ;
                                                Pl => base_1+"ать"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"ити" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"мо" ;
        imperative2 = table {
                        Sg => base_1 ;
                        Pl => base_1+"те"
                      } ;
        infinitive = base_1+"ити" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"ив" ;
                                 Pl => base_1+"или"
                               } ;
                       Fem => table {
                                Sg => base_1+"ила" ;
                                Pl => base_1+"или"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"ило" ;
                                   Pl => base_1+"или"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => base_1+"ений"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"ений"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV031"
  } ;

mkV032 : Str -> V ;
mkV032 base =
  case base of {
    base_1+"сти" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"сти" ;
                                                Pl => base_1+"мо"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"си" ;
                                                Pl => base_1+"сте"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"сть" ;
                                                Pl => base_1+"дять"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"сти" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"жмо" ;
        imperative2 = table {
                        Sg => base_1+"ж" ;
                        Pl => base_1+"жте"
                      } ;
        infinitive = base_1+"сти" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"в" ;
                                 Pl => base_1+"ли"
                               } ;
                       Fem => table {
                                Sg => base_1+"ла" ;
                                Pl => base_1+"ли"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"ло" ;
                                   Pl => base_1+"ли"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"дений"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV032"
  } ;

mkV033 : Str -> V ;
mkV033 base =
  case base of {
    base_1+"ти" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"ти" ;
                                                Pl => base_1+"дем"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"деш" ;
                                                Pl => base_1+"дете"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"де" ;
                                                Pl => base_1+"дуть"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"ти" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"дім" ;
        imperative2 = table {
                        Sg => base_1+"ди" ;
                        Pl => base_1+"діть"
                      } ;
        infinitive = base_1+"ти" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"шов" ;
                                 Pl => base_1+"шли"
                               } ;
                       Fem => table {
                                Sg => base_1+"шла" ;
                                Pl => base_1+"шли"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"шло" ;
                                   Pl => base_1+"шли"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"дений"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV033"
  } ;

mkV034 : Str -> V ;
mkV034 base =
  case base of {
    base_1+"ти" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"ти" ;
                                                Pl => base_1+"ем"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"еш" ;
                                                Pl => base_1+"ете"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"е" ;
                                                Pl => base_1+"уть"
                                              }
                                      }
                             } ;
                   Perf => { Past = base_1+"лий" ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"ти" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"ім" ;
        imperative2 = table {
                        Sg => base_1+"и" ;
                        Pl => base_1+"іть"
                      } ;
        infinitive = base_1+"ти" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1 ;
                                 Pl => base_1+"ли"
                               } ;
                       Fem => table {
                                Sg => base_1+"ла" ;
                                Pl => base_1+"ли"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"ло" ;
                                   Pl => base_1+"ли"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => base_1+"ений"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"тий"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV034"
  } ;

mkV035 : Str -> V ;
mkV035 base =
  case base of {
    base_1+"увати" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"увати" ;
                                                Pl => base_1+"уєм"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"уєш" ;
                                                Pl => base_1+"уєте"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"ує" ;
                                                Pl => base_1+"ують"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"увати" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"уймо" ;
        imperative2 = table {
                        Sg => base_1+"уй" ;
                        Pl => base_1+"уйте"
                      } ;
        infinitive = base_1+"увати" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"ував" ;
                                 Pl => base_1+"ували"
                               } ;
                       Fem => table {
                                Sg => base_1+"увала" ;
                                Pl => base_1+"ували"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"увало" ;
                                   Pl => base_1+"ували"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => base_1+"ований"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"ований"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV035"
  } ;

mkV036 : Str -> V ;
mkV036 base =
  case base of {
    base_1+"вати" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"вати" ;
                                                Pl => base_1+"єм"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"єш" ;
                                                Pl => base_1+"єте"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"є" ;
                                                Pl => base_1+"ють"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"вати" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"ймо" ;
        imperative2 = table {
                        Sg => base_1+"й" ;
                        Pl => base_1+"йте"
                      } ;
        infinitive = base_1+"вати" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"вав" ;
                                 Pl => base_1+"вали"
                               } ;
                       Fem => table {
                                Sg => base_1+"вала" ;
                                Pl => base_1+"вали"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"вало" ;
                                   Pl => base_1+"вали"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => base_1+"ваний"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"ваний"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV036"
  } ;

mkV037 : Str -> V ;
mkV037 base =
  case base of {
    "бути" => lin V
      { active = table {
                   Imperf => { Past = "бувший" ;
                               Pres = table {
                                        P1 => table {
                                                Sg => "бути" ;
                                                Pl => "є"
                                              } ;
                                        P2 => table {
                                                Sg => "є" ;
                                                Pl => "є"
                                              } ;
                                        P3 => table {
                                                Sg => "є" ;
                                                Pl => "є"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = "будьмо" ;
        imperative2 = table {
                        Sg => "будь" ;
                        Pl => "будьте"
                      } ;
        infinitive = "бути" ;
        participle = table {
                       Masc => table {
                                 Sg => "був" ;
                                 Pl => "були"
                               } ;
                       Fem => table {
                                Sg => "була" ;
                                Pl => "були"
                              } ;
                       Neuter => table {
                                   Sg => "було" ;
                                   Pl => "були"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV037"
  } ;

mkV038 : Str -> V ;
mkV038 base =
  case base of {
    base_1+"ути" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"ути" ;
                                                Pl => base_1+"ем"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"еш" ;
                                                Pl => base_1+"ете"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"е" ;
                                                Pl => base_1+"уть"
                                              }
                                      }
                             } ;
                   Perf => { Past = base_1+"улий" ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"ути" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"ім" ;
        imperative2 = table {
                        Sg => base_1+"и" ;
                        Pl => base_1+"іть"
                      } ;
        infinitive = base_1+"ути" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"ув" ;
                                 Pl => base_1+"ули"
                               } ;
                       Fem => table {
                                Sg => base_1+"ула" ;
                                Pl => base_1+"ули"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"уло" ;
                                   Pl => base_1+"ули"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => base_1+"ений"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"ений"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV038"
  } ;

mkV039 : Str -> V ;
mkV039 base =
  case base of {
    base_1+"ити" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"ити" ;
                                                Pl => base_1+"им" --guessed
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"иш" ; --guessed
                                                Pl => base_1+"ите" --guessed
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"ить" ; --guessed
                                                Pl => base_1+"ать" --guessed
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"ити" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"ім" ;
        imperative2 = table {
                        Sg => base_1+"и" ;
                        Pl => base_1+"іть"
                      } ;
        infinitive = base_1+"ити" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"ив" ;
                                 Pl => base_1+"или"
                               } ;
                       Fem => table {
                                Sg => base_1+"ила" ;
                                Pl => base_1+"или"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"ило" ;
                                   Pl => base_1+"или"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"ений"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV039"
  } ;

mkV040 : Str -> V ;
mkV040 base =
  case base of {
    base_1+base_2@?+"ати" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+base_2+"ати" ;
                                                Pl => base_1+"е"+base_2+"ем"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"е"+base_2+"еш" ;
                                                Pl => base_1+"е"+base_2+"ете"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"е"+base_2+"е" ;
                                                Pl => base_1+"е"+base_2+"уть"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+base_2+"ати" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"е"+base_2+"ім" ;
        imperative2 = table {
                        Sg => base_1+"е"+base_2+"и" ;
                        Pl => base_1+"е"+base_2+"іть"
                      } ;
        infinitive = base_1+base_2+"ати" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+base_2+"ав" ;
                                 Pl => base_1+base_2+"али"
                               } ;
                       Fem => table {
                                Sg => base_1+base_2+"ала" ;
                                Pl => base_1+base_2+"али"
                              } ;
                       Neuter => table {
                                   Sg => base_1+base_2+"ало" ;
                                   Pl => base_1+base_2+"али"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => base_1+base_2+"аний"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+base_2+"аний"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV040"
  } ;

mkV041 : Str -> V ;
mkV041 base =
  case base of {
    base_1+"нути" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"нути" ;
                                                Pl => base_1+"нем"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"неш" ;
                                                Pl => base_1+"нете"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"не" ;
                                                Pl => base_1+"нуть"
                                              }
                                      }
                             } ;
                   Perf => { Past = base_1+"лий" ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"нути" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"нім" ;
        imperative2 = table {
                        Sg => base_1+"ни" ;
                        Pl => base_1+"ніть"
                      } ;
        infinitive = base_1+"нути" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"нув" ;
                                 Pl => base_1+"ли"
                               } ;
                       Fem => table {
                                Sg => base_1+"ла" ;
                                Pl => base_1+"ли"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"ло" ;
                                   Pl => base_1+"ли"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => base_1+"нений"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV041"
  } ;

mkV042 : Str -> V ;
mkV042 base =
  case base of {
    base_1+"нути" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"нути" ;
                                                Pl => base_1+"нем"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"неш" ;
                                                Pl => base_1+"нете"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"не" ;
                                                Pl => base_1+"нуть"
                                              }
                                      }
                             } ;
                   Perf => { Past = base_1+"лий" ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"нути" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"нім" ;
        imperative2 = table {
                        Sg => base_1+"ни" ;
                        Pl => base_1+"ніть"
                      } ;
        infinitive = base_1+"нути" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1 ;
                                 Pl => base_1+"ли"
                               } ;
                       Fem => table {
                                Sg => base_1+"ла" ;
                                Pl => base_1+"ли"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"ло" ;
                                   Pl => base_1+"ли"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => base_1+"нений"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"нутий"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV042"
  } ;

mkV043 : Str -> V ;
mkV043 base =
  case base of {
    base_1+"стити" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"стити" ;
                                                Pl => base_1+"стим"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"стиш" ;
                                                Pl => base_1+"стите"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"стить" ;
                                                Pl => base_1+"стять"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"стити" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"стім" ;
        imperative2 = table {
                        Sg => base_1+"сти" ;
                        Pl => base_1+"стіть"
                      } ;
        infinitive = base_1+"стити" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"стив" ;
                                 Pl => base_1+"стили"
                               } ;
                       Fem => table {
                                Sg => base_1+"стила" ;
                                Pl => base_1+"стили"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"стило" ;
                                   Pl => base_1+"стили"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => base_1+"щений"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"щений"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV043"
  } ;

mkV044 : Str -> V ;
mkV044 base =
  case base of {
    base_1 => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1 ;
                                                Pl => nonExist
                                              } ;
                                        P2 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              } ;
                                        P3 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = nonExist ;
        imperative2 = table {
                        Sg => nonExist ;
                        Pl => nonExist
                      } ;
        infinitive = base_1 ;
        participle = table {
                       Masc => table {
                                 Sg => nonExist ;
                                 Pl => nonExist
                               } ;
                       Fem => table {
                                Sg => nonExist ;
                                Pl => nonExist
                              } ;
                       Neuter => table {
                                   Sg => nonExist ;
                                   Pl => nonExist
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV044"
  } ;

mkV045 : Str -> V ;
mkV045 base =
  case base of {
    base_1+"ити" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"ити" ;
                                                Pl => base_1+"им" --guessed
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"иш" ; --guessed
                                                Pl => base_1+"ите" --guessed
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"ить" ; --guessed
                                                Pl => base_1+"ать" --guessed
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"ити" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"ім" ;
        imperative2 = table {
                        Sg => base_1+"и" ;
                        Pl => base_1+"іть"
                      } ;
        infinitive = base_1+"ити" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"ив" ;
                                 Pl => base_1+"или"
                               } ;
                       Fem => table {
                                Sg => base_1+"ила" ;
                                Pl => base_1+"или"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"ило" ;
                                   Pl => base_1+"или"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"жений"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV045"
  } ;

mkV046 : Str -> V ;
mkV046 base =
  case base of {
    base_1+"ути" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"ути" ;
                                                Pl => base_1+"ем"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"еш" ;
                                                Pl => base_1+"ете"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"е" ;
                                                Pl => base_1+"уть"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"ути" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"ьмо" ;
        imperative2 = table {
                        Sg => base_1+"ь" ;
                        Pl => base_1+"ьте"
                      } ;
        infinitive = base_1+"ути" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"ув" ;
                                 Pl => base_1+"ули"
                               } ;
                       Fem => table {
                                Sg => base_1+"ула" ;
                                Pl => base_1+"ули"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"уло" ;
                                   Pl => base_1+"ули"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"ений"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV046"
  } ;

mkV047 : Str -> V ;
mkV047 base =
  case base of {
    base_1+"тити" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"тити" ;
                                                Pl => base_1+"тим"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"тиш" ;
                                                Pl => base_1+"тите"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"тить" ;
                                                Pl => base_1+"тять"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"тити" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"тім" ;
        imperative2 = table {
                        Sg => base_1+"ти" ;
                        Pl => base_1+"тіть"
                      } ;
        infinitive = base_1+"тити" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"тив" ;
                                 Pl => base_1+"тили"
                               } ;
                       Fem => table {
                                Sg => base_1+"тила" ;
                                Pl => base_1+"тили"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"тило" ;
                                   Pl => base_1+"тили"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => base_1+"чений"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"чений"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV047"
  } ;

mkV048 : Str -> V ;
mkV048 base =
  case base of {
    base_1+"ити" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"ити" ;
                                                Pl => base_1+"им"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"иш" ;
                                                Pl => base_1+"ите"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"ить" ;
                                                Pl => base_1+"ять"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"мо" ;
        imperative2 = table {
                        Sg => base_1 ;
                        Pl => base_1+"те"
                      } ;
        infinitive = base_1+"ити" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"ив" ;
                                 Pl => base_1+"или"
                               } ;
                       Fem => table {
                                Sg => base_1+"ила" ;
                                Pl => base_1+"или"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"ило" ;
                                   Pl => base_1+"или"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => base_1+"ений"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV048"
  } ;

mkV049 : Str -> V ;
mkV049 base =
  case base of {
    base_1+"кати" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"кати" ;
                                                Pl => base_1+"чем"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"чеш" ;
                                                Pl => base_1+"чете"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"че" ;
                                                Pl => base_1+"чуть"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"чім" ;
        imperative2 = table {
                        Sg => base_1+"чи" ;
                        Pl => base_1+"чіть"
                      } ;
        infinitive = base_1+"кати" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"кав" ;
                                 Pl => base_1+"кали"
                               } ;
                       Fem => table {
                                Sg => base_1+"кала" ;
                                Pl => base_1+"кали"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"кало" ;
                                   Pl => base_1+"кали"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => base_1+"каний"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV049"
  } ;

mkV050 : Str -> V ;
mkV050 base =
  case base of {
    base_1+"ати" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"ати" ;
                                                Pl => base_1+"ем"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"еш" ;
                                                Pl => base_1+"ете"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"е" ;
                                                Pl => base_1+"уть"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"ати" ; --guessed
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"ім" ;
        imperative2 = table {
                        Sg => base_1+"и" ;
                        Pl => base_1+"іть"
                      } ;
        infinitive = base_1+"ати" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"ав" ;
                                 Pl => base_1+"али"
                               } ;
                       Fem => table {
                                Sg => base_1+"ала" ;
                                Pl => base_1+"али"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"ало" ;
                                   Pl => base_1+"али"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => base_1+"аний"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV050"
  } ;

mkV051 : Str -> V ;
mkV051 base =
  case base of {
    base_1+"сити" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"сити" ;
                                                Pl => base_1+"сим"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"сиш" ;
                                                Pl => base_1+"сите"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"сить" ;
                                                Pl => base_1+"сять"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"сити" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"сьмо" ;
        imperative2 = table {
                        Sg => base_1+"сь" ;
                        Pl => base_1+"сьте"
                      } ;
        infinitive = base_1+"сити" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"сив" ;
                                 Pl => base_1+"сили"
                               } ;
                       Fem => table {
                                Sg => base_1+"сила" ;
                                Pl => base_1+"сили"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"сило" ;
                                   Pl => base_1+"сили"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => base_1+"шений"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"шений"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV051"
  } ;

mkV052 : Str -> V ;
mkV052 base =
  case base of {
    base_1+"ати" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"ати" ;
                                                Pl => base_1+"им"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"иш" ;
                                                Pl => base_1+"ите"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"ить" ;
                                                Pl => base_1+"лять"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"ати" ; --guessed
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"ім" ;
        imperative2 = table {
                        Sg => base_1+"и" ;
                        Pl => base_1+"іть"
                      } ;
        infinitive = base_1+"ати" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"ав" ;
                                 Pl => base_1+"али"
                               } ;
                       Fem => table {
                                Sg => base_1+"ала" ;
                                Pl => base_1+"али"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"ало" ;
                                   Pl => base_1+"али"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV052"
  } ;

mkV053 : Str -> V ;
mkV053 base =
  case base of {
    base_1+"г"+base_2@?+"ати" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"г"+base_2+"ати" ;
                                                Pl => nonExist
                                              } ;
                                        P2 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              } ;
                                        P3 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"г"+base_2+"ати" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"же"+base_2+"ім" ;
        imperative2 = table {
                        Sg => base_1+"же"+base_2+"и" ;
                        Pl => base_1+"же"+base_2+"іть"
                      } ;
        infinitive = base_1+"г"+base_2+"ати" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"г"+base_2+"ав" ;
                                 Pl => base_1+"г"+base_2+"али"
                               } ;
                       Fem => table {
                                Sg => base_1+"г"+base_2+"ала" ;
                                Pl => base_1+"г"+base_2+"али"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"г"+base_2+"ало" ;
                                   Pl => base_1+"г"+base_2+"али"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"г"+base_2+"аний"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV053"
  } ;

mkV054 : Str -> V ;
mkV054 base =
  case base of {
    base_1+"нути" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"нути" ;
                                                Pl => base_1+"нем" --guessed
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"неш" ; --guessed
                                                Pl => base_1+"нете" --guessed
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"не" ; --guessed
                                                Pl => base_1+"нуть" --guessed
                                              }
                                      }
                             } ;
                   Perf => { Past = base_1+"лий" ; --guessed
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"нути" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"нім" ;
        imperative2 = table {
                        Sg => base_1+"ни" ;
                        Pl => base_1+"ніть"
                      } ;
        infinitive = base_1+"нути" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1 ;
                                 Pl => base_1+"ли"
                               } ;
                       Fem => table {
                                Sg => base_1+"ла" ;
                                Pl => base_1+"ли"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"ло" ;
                                   Pl => base_1+"ли"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => base_1+"нений" --guessed
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"нений"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV054"
  } ;

mkV055 : Str -> V ;
mkV055 base =
  case base of {
    base_1+"ити" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"ити" ;
                                                Pl => base_1+"им"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"иш" ;
                                                Pl => base_1+"ите"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"ить" ;
                                                Pl => base_1+"ять"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"ити" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"ьмо" ;
        imperative2 = table {
                        Sg => base_1+"ь" ;
                        Pl => base_1+"ьте"
                      } ;
        infinitive = base_1+"ити" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"ив" ;
                                 Pl => base_1+"или"
                               } ;
                       Fem => table {
                                Sg => base_1+"ила" ;
                                Pl => base_1+"или"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"ило" ;
                                   Pl => base_1+"или"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => base_1+"жений"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"жений"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV055"
  } ;

mkV056 : Str -> V ;
mkV056 base =
  case base of {
    base_1+"ати" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"ати" ;
                                                Pl => base_1+"лем"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"леш" ;
                                                Pl => base_1+"лете"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"ле" ;
                                                Pl => base_1+"лють"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"ати" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"мо" ;
        imperative2 = table {
                        Sg => base_1 ;
                        Pl => base_1+"те"
                      } ;
        infinitive = base_1+"ати" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"ав" ;
                                 Pl => base_1+"али"
                               } ;
                       Fem => table {
                                Sg => base_1+"ала" ;
                                Pl => base_1+"али"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"ало" ;
                                   Pl => base_1+"али"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => base_1+"аний"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"аний"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV056"
  } ;

mkV057 : Str -> V ;
mkV057 base =
  case base of {
    base_1+"хати" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"хати" ;
                                                Pl => base_1+"дем"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"деш" ;
                                                Pl => base_1+"дете"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"де" ;
                                                Pl => base_1+"дуть"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"хати" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"дьмо" ;
        imperative2 = table {
                        Sg => base_1+"дь" ;
                        Pl => base_1+"дьте"
                      } ;
        infinitive = base_1+"хати" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"хав" ;
                                 Pl => base_1+"хали"
                               } ;
                       Fem => table {
                                Sg => base_1+"хала" ;
                                Pl => base_1+"хали"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"хало" ;
                                   Pl => base_1+"хали"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"ханий"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV057"
  } ;

mkV058 : Str -> V ;
mkV058 base =
  case base of {
    base_1+"огти" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"огти" ;
                                                Pl => base_1+"ожем"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"ожеш" ;
                                                Pl => base_1+"ожете"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"оже" ;
                                                Pl => base_1+"ожуть"
                                              }
                                      }
                             } ;
                   Perf => { Past = base_1+"ігший" ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"огти" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"ожім" ;
        imperative2 = table {
                        Sg => base_1+"ожи" ;
                        Pl => base_1+"ожіть"
                      } ;
        infinitive = base_1+"огти" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"іг" ;
                                 Pl => base_1+"огли"
                               } ;
                       Fem => table {
                                Sg => base_1+"огла" ;
                                Pl => base_1+"огли"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"огло" ;
                                   Pl => base_1+"огли"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"ожений"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV058"
  } ;

mkV059 : Str -> V ;
mkV059 base =
  case base of {
    "йти" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => "jty" ;
                                                Pl => "йдем"
                                              } ;
                                        P2 => table {
                                                Sg => "йдеш" ;
                                                Pl => "йдете"
                                              } ;
                                        P3 => table {
                                                Sg => "йде" ;
                                                Pl => "йдуть"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = "йдім" ;
        imperative2 = table {
                        Sg => "йди" ;
                        Pl => "йдіть"
                      } ;
        infinitive = "йти" ;
        participle = table {
                       Masc => table {
                                 Sg => "йшов" ;
                                 Pl => "йшли"
                               } ;
                       Fem => table {
                                Sg => "йшла" ;
                                Pl => "йшли"
                              } ;
                       Neuter => table {
                                   Sg => "йшло" ;
                                   Pl => "йшли"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV059"
  } ;

mkV060 : Str -> V ;
mkV060 base =
  case base of {
    base_1+"кати" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"кати" ;
                                                Pl => base_1+"чем"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"чеш" ;
                                                Pl => base_1+"чете"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"че" ;
                                                Pl => base_1+"чуть"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"кати" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"чмо" ;
        imperative2 = table {
                        Sg => base_1+"ч" ;
                        Pl => base_1+"чте"
                      } ;
        infinitive = base_1+"кати" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"кав" ;
                                 Pl => base_1+"кали"
                               } ;
                       Fem => table {
                                Sg => base_1+"кала" ;
                                Pl => base_1+"кали"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"кало" ;
                                   Pl => base_1+"кали"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => base_1+"каний"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"каний"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV060"
  } ;

mkV061 : Str -> V ;
mkV061 base =
  case base of {
    base_1+"о"+base_2@?+"ти" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"о"+base_2+"ти" ;
                                                Pl => base_1+"о"+base_2+"тем"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"о"+base_2+"теш" ;
                                                Pl => base_1+"о"+base_2+"тете"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"о"+base_2+"те" ;
                                                Pl => base_1+"о"+base_2+"туть"
                                              }
                                      }
                             } ;
                   Perf => { Past = base_1+"о"+base_2+"лий" ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"о"+base_2+"ти" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"о"+base_2+"тім" ;
        imperative2 = table {
                        Sg => base_1+"о"+base_2+"ти" ;
                        Pl => base_1+"о"+base_2+"тіть"
                      } ;
        infinitive = base_1+"о"+base_2+"ти" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"і"+base_2 ;
                                 Pl => base_1+"о"+base_2+"ли"
                               } ;
                       Fem => table {
                                Sg => base_1+"о"+base_2+"ла" ;
                                Pl => base_1+"о"+base_2+"ли"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"о"+base_2+"ло" ;
                                   Pl => base_1+"о"+base_2+"ли"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV061"
  } ;

mkV062 : Str -> V ;
mkV062 base =
  case base of {
    base_1+"іти" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"іти" ;
                                                Pl => base_1+"им"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"иш" ;
                                                Pl => base_1+"ите"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"ить" ;
                                                Pl => base_1+"ять"
                                              }
                                      }
                             } ;
                   Perf => { Past = base_1+"ілий" ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"іти" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"ім" ;
        imperative2 = table {
                        Sg => base_1+"и" ;
                        Pl => base_1+"іть"
                      } ;
        infinitive = base_1+"іти" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"ів" ;
                                 Pl => base_1+"іли"
                               } ;
                       Fem => table {
                                Sg => base_1+"іла" ;
                                Pl => base_1+"іли"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"іло" ;
                                   Pl => base_1+"іли"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"жений" --guessed
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV062"
  } ;

mkV063 : Str -> V ;
mkV063 base =
  case base of {
    "г"+base_1+"ати" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => "г"+base_1+"ати" ;
                                                Pl => "же"+base_1+"ем"
                                              } ;
                                        P2 => table {
                                                Sg => "же"+base_1+"еш" ;
                                                Pl => "же"+base_1+"ете"
                                              } ;
                                        P3 => table {
                                                Sg => "же"+base_1+"е" ;
                                                Pl => "же"+base_1+"уть"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = "же"+base_1+"ім" ;
        imperative2 = table {
                        Sg => "же"+base_1+"и" ;
                        Pl => "же"+base_1+"іть"
                      } ;
        infinitive = "г"+base_1+"ати" ;
        participle = table {
                       Masc => table {
                                 Sg => "г"+base_1+"ав" ;
                                 Pl => "г"+base_1+"али"
                               } ;
                       Fem => table {
                                Sg => "г"+base_1+"ала" ;
                                Pl => "г"+base_1+"али"
                              } ;
                       Neuter => table {
                                   Sg => "г"+base_1+"ало" ;
                                   Pl => "г"+base_1+"али"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => "г"+base_1+"аний"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV063"
  } ;

mkV064 : Str -> V ;
mkV064 base =
  case base of {
    base_1+"тіти" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"тіти" ;
                                                Pl => base_1+"чем"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"чеш" ;
                                                Pl => base_1+"чете"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"че" ;
                                                Pl => base_1+"чуть"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"тім" ;
        imperative2 = table {
                        Sg => base_1+"ти" ;
                        Pl => base_1+"тіть"
                      } ;
        infinitive = base_1+"тіти" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"тів" ;
                                 Pl => base_1+"тіли"
                               } ;
                       Fem => table {
                                Sg => base_1+"тіла" ;
                                Pl => base_1+"тіли"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"тіло" ;
                                   Pl => base_1+"тіли"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV064"
  } ;

mkV065 : Str -> V ;
mkV065 base =
  case base of {
    base_1+"ити"+base_2@(?+?) => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"ити"+base_2 ;
                                                Pl => base_1+"им"+base_2
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"иш"+base_2 ;
                                                Pl => base_1+"ите"+base_2
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"ить"+base_2 ;
                                                Pl => base_1+"лять"+base_2
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"ити"+base_2 ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"ім"+base_2 ;
        imperative2 = table {
                        Sg => base_1+"и"+base_2 ;
                        Pl => base_1+"іть"+base_2
                      } ;
        infinitive = base_1+"ити"+base_2 ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"ив"+base_2 ;
                                 Pl => base_1+"или"+base_2
                               } ;
                       Fem => table {
                                Sg => base_1+"ила"+base_2 ;
                                Pl => base_1+"или"+base_2
                              } ;
                       Neuter => table {
                                   Sg => base_1+"ило"+base_2 ;
                                   Pl => base_1+"или"+base_2
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV065"
  } ;

mkV066 : Str -> V ;
mkV066 base =
  case base of {
    base_1+"о"+base_2@?+"ити" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"о"+base_2+"ити" ;
                                                Pl => nonExist
                                              } ;
                                        P2 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              } ;
                                        P3 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"о"+base_2+"ити" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"е"+base_2+"ім" ;
        imperative2 = table {
                        Sg => base_1+"е"+base_2+"и" ;
                        Pl => base_1+"е"+base_2+"уть"
                      } ;
        infinitive = base_1+"о"+base_2+"ити" ;
        participle = table {
                       Masc => table {
                                 Sg => nonExist ;
                                 Pl => base_1+"о"+base_2+"или"
                               } ;
                       Fem => table {
                                Sg => base_1+"о"+base_2+"ила" ;
                                Pl => base_1+"о"+base_2+"или"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"о"+base_2+"ило" ;
                                   Pl => base_1+"о"+base_2+"или"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV066"
  } ;

mkV067 : Str -> V ;
mkV067 base =
  case base of {
    base_1+"ти" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => "-"+base_1+"ти" ;
                                                Pl => "-"+base_1+"єм"
                                              } ;
                                        P2 => table {
                                                Sg => "-"+base_1+"єш" ;
                                                Pl => "-"+base_1+"єте"
                                              } ;
                                        P3 => table {
                                                Sg => "-"+base_1+"є" ;
                                                Pl => "-"+base_1+"ють"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = "-"+base_1+"ймо" ;
        imperative2 = table {
                        Sg => "-"+base_1+"й" ;
                        Pl => "-"+base_1+"йте"
                      } ;
        infinitive = base_1+"ти" ;
        participle = table {
                       Masc => table {
                                 Sg => "-"+base_1+"в" ;
                                 Pl => "-"+base_1+"ли"
                               } ;
                       Fem => table {
                                Sg => "-"+base_1+"ла" ;
                                Pl => "-"+base_1+"ли"
                              } ;
                       Neuter => table {
                                   Sg => "-"+base_1+"ло" ;
                                   Pl => "-"+base_1+"ли"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV067"
  } ;

mkV068 : Str -> V ;
mkV068 base =
  case base of {
    base_1+base_2@?+"яти" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+base_2+"яти" ;
                                                Pl => nonExist
                                              } ;
                                        P2 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              } ;
                                        P3 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+base_2+"яти" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"і"+base_2+"ьмім" ;
        imperative2 = table {
                        Sg => base_1+"і"+base_2+"ьми" ;
                        Pl => base_1+"і"+base_2+"ьміть"
                      } ;
        infinitive = base_1+base_2+"яти" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+base_2+"яв" ;
                                 Pl => base_1+base_2+"яли"
                               } ;
                       Fem => table {
                                Sg => base_1+base_2+"яла" ;
                                Pl => base_1+base_2+"яли"
                              } ;
                       Neuter => table {
                                   Sg => base_1+base_2+"яло" ;
                                   Pl => base_1+base_2+"яли"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+base_2+"ятий"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV068"
  } ;

mkV069 : Str -> V ;
mkV069 base =
  case base of {
    "у"+base_1+"яти" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => "у"+base_1+"яти" ;
                                                Pl => nonExist
                                              } ;
                                        P2 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              } ;
                                        P3 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => "у"+base_1+"яти" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = "ві"+base_1+"ьмім" ;
        imperative2 = table {
                        Sg => "ві"+base_1+"ьми" ;
                        Pl => "ві"+base_1+"ьміть"
                      } ;
        infinitive = "у"+base_1+"яти" ;
        participle = table {
                       Masc => table {
                                 Sg => "у"+base_1+"яв" ;
                                 Pl => "у"+base_1+"яли"
                               } ;
                       Fem => table {
                                Sg => "у"+base_1+"яла" ;
                                Pl => "у"+base_1+"яли"
                              } ;
                       Neuter => table {
                                   Sg => "у"+base_1+"яло" ;
                                   Pl => "у"+base_1+"яли"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => "у"+base_1+"ятий"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV069"
  } ;

mkV070 : Str -> V ;
mkV070 base =
  case base of {
    base_1+"ти" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"ти" ;
                                                Pl => base_1+"нем"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"неш" ;
                                                Pl => base_1+"нете"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"не" ;
                                                Pl => base_1+"нуть"
                                              }
                                      }
                             } ;
                   Perf => { Past = base_1+"лий" ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"ти" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"нім" ;
        imperative2 = table {
                        Sg => base_1+"ни" ;
                        Pl => base_1+"ніть"
                      } ;
        infinitive = base_1+"ти" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1 ;
                                 Pl => base_1+"ли"
                               } ;
                       Fem => table {
                                Sg => base_1+"ла" ;
                                Pl => base_1+"ли"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"ло" ;
                                   Pl => base_1+"ли"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"нений"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV070"
  } ;

mkV071 : Str -> V ;
mkV071 base =
  case base of {
    base_1+"ти"+base_2@(?+?) => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"ти"+base_2 ;
                                                Pl => base_1+"єм"+base_2
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"єш"+base_2 ;
                                                Pl => base_1+"єте"+base_2
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"єть"+base_2 ;
                                                Pl => base_1+"ють"+base_2
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"ти"+base_2 ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"ймо"+base_2 ;
        imperative2 = table {
                        Sg => base_1+"й"+base_2 ;
                        Pl => base_1+"йте"+base_2
                      } ;
        infinitive = base_1+"ти"+base_2 ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"в"+base_2 ;
                                 Pl => base_1+"ли"+base_2
                               } ;
                       Fem => table {
                                Sg => base_1+"ла"+base_2 ;
                                Pl => base_1+"ли"+base_2
                              } ;
                       Neuter => table {
                                   Sg => base_1+"ло"+base_2 ;
                                   Pl => base_1+"ли"+base_2
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV071"
  } ;

mkV072 : Str -> V ;
mkV072 base =
  case base of {
    base_1+"о"+base_2@?+"оти" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"о"+base_2+"оти" ;
                                                Pl => base_1+"е"+base_2+"ем"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"е"+base_2+"еш" ;
                                                Pl => base_1+"е"+base_2+"ете"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"е"+base_2+"е" ;
                                                Pl => base_1+"е"+base_2+"ють"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"е"+base_2+"ім" ;
        imperative2 = table {
                        Sg => base_1+"е"+base_2+"и" ;
                        Pl => base_1+"е"+base_2+"іть"
                      } ;
        infinitive = base_1+"о"+base_2+"оти" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"о"+base_2+"ов" ;
                                 Pl => base_1+"о"+base_2+"оли"
                               } ;
                       Fem => table {
                                Sg => base_1+"о"+base_2+"ола" ;
                                Pl => base_1+"о"+base_2+"оли"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"о"+base_2+"оло" ;
                                   Pl => base_1+"о"+base_2+"оли"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => base_1+"е"+base_2+"ений"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV072"
  } ;

mkV073 : Str -> V ;
mkV073 base =
  case base of {
    base_1+"яти" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"яти" ;
                                                Pl => base_1+"нем"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"неш" ;
                                                Pl => base_1+"нете"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"не" ;
                                                Pl => base_1+"нуть"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"нім" ;
        imperative2 = table {
                        Sg => base_1+"ни" ;
                        Pl => base_1+"ніть"
                      } ;
        infinitive = base_1+"яти" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"яв" ;
                                 Pl => base_1+"яли"
                               } ;
                       Fem => table {
                                Sg => base_1+"яла" ;
                                Pl => base_1+"яли"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"яло" ;
                                   Pl => base_1+"яли"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => base_1+"ятий"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV073"
  } ;

mkV074 : Str -> V ;
mkV074 base =
  case base of {
    base_1+"оти" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"оти" ;
                                                Pl => base_1+"ем"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"еш" ;
                                                Pl => base_1+"ете"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"е" ;
                                                Pl => base_1+"ють"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"оти" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"ім" ;
        imperative2 = table {
                        Sg => base_1+"и" ;
                        Pl => base_1+"іть"
                      } ;
        infinitive = base_1+"оти" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"ов" ;
                                 Pl => base_1+"оли"
                               } ;
                       Fem => table {
                                Sg => base_1+"ола" ;
                                Pl => base_1+"оли"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"оло" ;
                                   Pl => base_1+"оли"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => base_1+"ений"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"ений"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV074"
  } ;

mkV075 : Str -> V ;
mkV075 base =
  case base of {
    base_1+"ити" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"ити" ;
                                                Pl => "будемо "+base_1+"ити"
                                              } ;
                                        P2 => table {
                                                Sg => "будеш "+base_1+"ити" ;
                                                Pl => "будете "+base_1+"ити"
                                              } ;
                                        P3 => table {
                                                Sg => "буде "+base_1+"ити" ;
                                                Pl => "будуть "+base_1+"ити"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"мо" ;
        imperative2 = table {
                        Sg => base_1 ;
                        Pl => base_1+"те"
                      } ;
        infinitive = base_1+"ити" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"ив" ;
                                 Pl => base_1+"или"
                               } ;
                       Fem => table {
                                Sg => base_1+"ила" ;
                                Pl => base_1+"или"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"ило" ;
                                   Pl => base_1+"или"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => base_1+"лений"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV075"
  } ;

mkV076 : Str -> V ;
mkV076 base =
  case base of {
    base_1+"увати" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"увати" ;
                                                Pl => "будемо "+base_1+"увати"
                                              } ;
                                        P2 => table {
                                                Sg => "будеш "+base_1+"увати" ;
                                                Pl => "будете "+base_1+"увати"
                                              } ;
                                        P3 => table {
                                                Sg => "буде "+base_1+"увати" ;
                                                Pl => "будуть "+base_1+"увати"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"уймо" ;
        imperative2 = table {
                        Sg => base_1+"уй" ;
                        Pl => base_1+"уйте"
                      } ;
        infinitive = base_1+"увати" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"ував" ;
                                 Pl => base_1+"ували"
                               } ;
                       Fem => table {
                                Sg => base_1+"увала" ;
                                Pl => base_1+"ували"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"увало" ;
                                   Pl => base_1+"ували"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => base_1+"ований"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV076"
  } ;

mkV077 : Str -> V ;
mkV077 base =
  case base of {
    base_1+"е"+base_2@?+"ти" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"е"+base_2+"ти" ;
                                                Pl => base_1+base_2+"ем"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+base_2+"еш" ;
                                                Pl => base_1+base_2+"ете"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+base_2+"е" ;
                                                Pl => base_1+base_2+"уть"
                                              }
                                      }
                             } ;
                   Perf => { Past = base_1+"е"+base_2+"лий" ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"е"+base_2+"ти" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+base_2+"ім" ;
        imperative2 = table {
                        Sg => base_1+base_2+"и" ;
                        Pl => base_1+base_2+"іть"
                      } ;
        infinitive = base_1+"е"+base_2+"ти" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"е"+base_2 ;
                                 Pl => base_1+"е"+base_2+"ли"
                               } ;
                       Fem => table {
                                Sg => base_1+"е"+base_2+"ла" ;
                                Pl => base_1+"е"+base_2+"ли"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"е"+base_2+"ло" ;
                                   Pl => base_1+"е"+base_2+"ли"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => base_1+"е"+base_2+"тий"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"е"+base_2+"тий"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV077"
  } ;

mkV078 : Str -> V ;
mkV078 base =
  case base of {
    base_1+"яти" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"яти" ;
                                                Pl => base_1+"яєм"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"яєш" ;
                                                Pl => base_1+"яєте"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"яє" ;
                                                Pl => base_1+"яють"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"яймо" ;
        imperative2 = table {
                        Sg => base_1+"яй" ;
                        Pl => base_1+"яйте"
                      } ;
        infinitive = base_1+"яти" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"яв" ;
                                 Pl => base_1+"яли"
                               } ;
                       Fem => table {
                                Sg => base_1+"яла" ;
                                Pl => base_1+"яли"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"яло" ;
                                   Pl => base_1+"яли"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => base_1+"юваний"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV078"
  } ;

mkV079 : Str -> V ;
mkV079 base =
  case base of {
    base_1+"ти" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"ти" ;
                                                Pl => nonExist
                                              } ;
                                        P2 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"є" ; --guessed
                                                Pl => base_1+"ють" --guessed
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"ти" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"дьмо" ;
        imperative2 = table {
                        Sg => base_1+"дь" ;
                        Pl => base_1+"дьте"
                      } ;
        infinitive = base_1+"ти" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"в" ;
                                 Pl => base_1+"ли"
                               } ;
                       Fem => table {
                                Sg => base_1+"ла" ;
                                Pl => base_1+"ли"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"ло" ;
                                   Pl => base_1+"ли"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"тий"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV079"
  } ;

mkV080 : Str -> V ;
mkV080 base =
  case base of {
    base_1+"вати"+base_2@(?+?) => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"вати"+base_2 ;
                                                Pl => base_1+"єм"+base_2
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"єш"+base_2 ;
                                                Pl => base_1+"єте"+base_2
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"єть"+base_2 ;
                                                Pl => base_1+"ють"+base_2
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"вати"+base_2 ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"ймо"+base_2 ;
        imperative2 = table {
                        Sg => base_1+"й"+base_2 ;
                        Pl => base_1+"йте"+base_2
                      } ;
        infinitive = base_1+"вати"+base_2 ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"вав"+base_2 ;
                                 Pl => base_1+"вали"+base_2
                               } ;
                       Fem => table {
                                Sg => base_1+"вала"+base_2 ;
                                Pl => base_1+"вали"+base_2
                              } ;
                       Neuter => table {
                                   Sg => base_1+"вало"+base_2 ;
                                   Pl => base_1+"вали"+base_2
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV080"
  } ;

mkV081 : Str -> V ;
mkV081 base =
  case base of {
    base_1+"їти" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"їти" ;
                                                Pl => base_1+"їм"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"їш" ;
                                                Pl => base_1+"їте"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"їть" ;
                                                Pl => base_1+"ять"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"їти" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"ймо" ;
        imperative2 = table {
                        Sg => base_1+"й" ;
                        Pl => base_1+"йте"
                      } ;
        infinitive = base_1+"їти" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"їв" ;
                                 Pl => base_1+"їли"
                               } ;
                       Fem => table {
                                Sg => base_1+"їла" ;
                                Pl => base_1+"їли"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"їло" ;
                                   Pl => base_1+"їли"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => base_1+"єний"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"єний"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV081"
  } ;

mkV082 : Str -> V ;
mkV082 base =
  case base of {
    base_1+"їти" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"їти" ;
                                                Pl => base_1+"їм"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"їш" ;
                                                Pl => base_1+"їте"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"їть" ;
                                                Pl => base_1+"ять"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"їти" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"їм" ;
        imperative2 = table {
                        Sg => base_1+"ї" ;
                        Pl => base_1+"їть"
                      } ;
        infinitive = base_1+"їти" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"їв" ;
                                 Pl => base_1+"їли"
                               } ;
                       Fem => table {
                                Sg => base_1+"їла" ;
                                Pl => base_1+"їли"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"їло" ;
                                   Pl => base_1+"їли"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => base_1+"єний"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"єний"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV082"
  } ;

mkV083 : Str -> V ;
mkV083 base =
  case base of {
    base_1+"оїти" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"оїти" ;
                                                Pl => base_1+"оїм"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"оїш" ;
                                                Pl => base_1+"оїте"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"оїть" ;
                                                Pl => base_1+"оять"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"оїти" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"іймо" ;
        imperative2 = table {
                        Sg => base_1+"ій" ;
                        Pl => base_1+"ійте"
                      } ;
        infinitive = base_1+"оїти" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"оїв" ;
                                 Pl => base_1+"оїли"
                               } ;
                       Fem => table {
                                Sg => base_1+"оїла" ;
                                Pl => base_1+"оїли"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"оїло" ;
                                   Pl => base_1+"оїли"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => base_1+"оєний"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"оєний"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV083"
  } ;

mkV084 : Str -> V ;
mkV084 base =
  case base of {
    base_1+base_2@?+"е"+base_3@?+"ти" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+base_2+"е"+base_3+"ти" ;
                                                Pl => nonExist
                                              } ;
                                        P2 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              } ;
                                        P3 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+base_2+"е"+base_3+"ти" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"і"+base_2+base_3+"ім" ;
        imperative2 = table {
                        Sg => base_1+"і"+base_2+base_3+"и" ;
                        Pl => base_1+"і"+base_2+base_3+"іть"
                      } ;
        infinitive = base_1+base_2+"е"+base_3+"ти" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+base_2+"е"+base_3 ;
                                 Pl => base_1+base_2+"е"+base_3+"ли"
                               } ;
                       Fem => table {
                                Sg => base_1+base_2+"е"+base_3+"ла" ;
                                Pl => base_1+base_2+"е"+base_3+"ли"
                              } ;
                       Neuter => table {
                                   Sg => base_1+base_2+"е"+base_3+"ло" ;
                                   Pl => base_1+base_2+"е"+base_3+"ли"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+base_2+"е"+base_3+"тий"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV084"
  } ;

mkV085 : Str -> V ;
mkV085 base =
  case base of {
    base_1+"ювати" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"ювати" ;
                                                Pl => base_1+"юєм"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"юєш" ;
                                                Pl => base_1+"юєте"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"ює" ;
                                                Pl => base_1+"юють"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"ювати" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"юймо" ;
        imperative2 = table {
                        Sg => base_1+"юй" ;
                        Pl => base_1+"юйте"
                      } ;
        infinitive = base_1+"ювати" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"ював" ;
                                 Pl => base_1+"ювали"
                               } ;
                       Fem => table {
                                Sg => base_1+"ювала" ;
                                Pl => base_1+"ювали"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"ювало" ;
                                   Pl => base_1+"ювали"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => base_1+"ьований"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"ьований"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV085"
  } ;

mkV086 : Str -> V ;
mkV086 base =
  case base of {
    base_1+"хати" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"хати" ;
                                                Pl => base_1+"шем"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"шеш" ;
                                                Pl => base_1+"шете"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"ше" ;
                                                Pl => base_1+"шуть"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"хати" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"шім" ;
        imperative2 = table {
                        Sg => base_1+"ши" ;
                        Pl => base_1+"шіть"
                      } ;
        infinitive = base_1+"хати" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"хав" ;
                                 Pl => base_1+"хали"
                               } ;
                       Fem => table {
                                Sg => base_1+"хала" ;
                                Pl => base_1+"хали"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"хало" ;
                                   Pl => base_1+"хали"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => base_1+"ханий"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV086"
  } ;

mkV087 : Str -> V ;
mkV087 base =
  case base of {
    base_1+"ктати" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"ктати" ;
                                                Pl => base_1+"чем"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"чеш" ;
                                                Pl => base_1+"чете"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"че" ;
                                                Pl => base_1+"чуть"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"чім" ;
        imperative2 = table {
                        Sg => base_1+"чи" ;
                        Pl => base_1+"чіть"
                      } ;
        infinitive = base_1+"ктати" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"ктав" ;
                                 Pl => base_1+"ктали"
                               } ;
                       Fem => table {
                                Sg => base_1+"ктала" ;
                                Pl => base_1+"ктали"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"ктало" ;
                                   Pl => base_1+"ктали"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV087"
  } ;

mkV088 : Str -> V ;
mkV088 base =
  case base of {
    base_1+"сти" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"сти" ;
                                                Pl => nonExist
                                              } ;
                                        P2 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              } ;
                                        P3 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"сти" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"джмо" ;
        imperative2 = table {
                        Sg => base_1+"дж" ;
                        Pl => base_1+"джте"
                      } ;
        infinitive = base_1+"сти" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"в" ;
                                 Pl => base_1+"ли"
                               } ;
                       Fem => table {
                                Sg => base_1+"ла" ;
                                Pl => base_1+"ли"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"ло" ;
                                   Pl => base_1+"ли"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV088"
  } ;

mkV089 : Str -> V ;
mkV089 base =
  case base of {
    base_1+"яти" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"яти" ;
                                                Pl => base_1+"єм"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"єш" ;
                                                Pl => base_1+"єте"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"є" ;
                                                Pl => base_1+"ють"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"яти" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"ймо" ;
        imperative2 = table {
                        Sg => base_1+"й" ;
                        Pl => base_1+"йте"
                      } ;
        infinitive = base_1+"яти" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"яв" ;
                                 Pl => base_1+"яли"
                               } ;
                       Fem => table {
                                Sg => base_1+"яла" ;
                                Pl => base_1+"яли"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"яло" ;
                                   Pl => base_1+"яли"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => base_1+"яний"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"яний"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV089"
  } ;

mkV090 : Str -> V ;
mkV090 base =
  case base of {
    base_1+"іти" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"іти" ;
                                                Pl => base_1+"им"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"иш" ;
                                                Pl => base_1+"ите"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"ить" ;
                                                Pl => base_1+"ять"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"іти" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"ьмо" ;
        imperative2 = table {
                        Sg => base_1+"ь" ;
                        Pl => base_1+"ьте"
                      } ;
        infinitive = base_1+"іти" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"ів" ;
                                 Pl => base_1+"іли"
                               } ;
                       Fem => table {
                                Sg => base_1+"іла" ;
                                Pl => base_1+"іли"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"іло" ;
                                   Pl => base_1+"іли"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"жений"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV090"
  } ;

mkV091 : Str -> V ;
mkV091 base =
  case base of {
    base_1+"ити"+base_2@(?+?) => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"ити"+base_2 ;
                                                Pl => base_1+"им"+base_2
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"иш"+base_2 ;
                                                Pl => base_1+"ите"+base_2
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"ить"+base_2 ;
                                                Pl => base_1+"ять"+base_2
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"ити"+base_2 ; --guessed
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"ім"+base_2 ;
        imperative2 = table {
                        Sg => base_1+"и"+base_2 ;
                        Pl => base_1+"іть"+base_2
                      } ;
        infinitive = base_1+"ити"+base_2 ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"ив"+base_2 ;
                                 Pl => base_1+"или"+base_2
                               } ;
                       Fem => table {
                                Sg => base_1+"ила"+base_2 ;
                                Pl => base_1+"или"+base_2
                              } ;
                       Neuter => table {
                                   Sg => base_1+"ило"+base_2 ;
                                   Pl => base_1+"или"+base_2
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV091"
  } ;

mkV092 : Str -> V ;
mkV092 base =
  case base of {
    base_1+"ояти"+base_2@(?+?) => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"ояти"+base_2 ;
                                                Pl => base_1+"оїм"+base_2
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"оїш"+base_2 ;
                                                Pl => base_1+"оїте"+base_2
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"оїть"+base_2 ;
                                                Pl => base_1+"оять"+base_2
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"іймо"+base_2 ;
        imperative2 = table {
                        Sg => base_1+"ій"+base_2 ;
                        Pl => base_1+"ійте"+base_2
                      } ;
        infinitive = base_1+"ояти"+base_2 ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"ояв"+base_2 ;
                                 Pl => base_1+"ояли"+base_2
                               } ;
                       Fem => table {
                                Sg => base_1+"ояла"+base_2 ;
                                Pl => base_1+"ояли"+base_2
                              } ;
                       Neuter => table {
                                   Sg => base_1+"ояло"+base_2 ;
                                   Pl => base_1+"ояли"+base_2
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV092"
  } ;

mkV093 : Str -> V ;
mkV093 base =
  case base of {
    base_1+"ягти" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"ягти" ;
                                                Pl => nonExist
                                              } ;
                                        P2 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              } ;
                                        P3 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"ягти" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"яжмо" ;
        imperative2 = table {
                        Sg => base_1+"яж" ;
                        Pl => base_1+"яжте"
                      } ;
        infinitive = base_1+"ягти" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"іг" ;
                                 Pl => base_1+"ягли"
                               } ;
                       Fem => table {
                                Sg => base_1+"ягла" ;
                                Pl => base_1+"ягли"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"ягло" ;
                                   Pl => base_1+"ягли"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV093"
  } ;

mkV094 : Str -> V ;
mkV094 base =
  case base of {
    base_1+"екти" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"екти" ;
                                                Pl => base_1+"ечем"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"ечеш" ;
                                                Pl => base_1+"ечете"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"ече" ;
                                                Pl => base_1+"ечуть"
                                              }
                                      }
                             } ;
                   Perf => { Past = base_1+"еклий" ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"екти" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"ечім" ;
        imperative2 = table {
                        Sg => base_1+"ечи" ;
                        Pl => base_1+"ечіть"
                      } ;
        infinitive = base_1+"екти" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"ік" ;
                                 Pl => base_1+"екли"
                               } ;
                       Fem => table {
                                Sg => base_1+"екла" ;
                                Pl => base_1+"екли"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"екло" ;
                                   Pl => base_1+"екли"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => base_1+"ечений"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"ечений"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV094"
  } ;

mkV095 : Str -> V ;
mkV095 base =
  case base of {
    base_1+"істи" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"істи" ;
                                                Pl => nonExist
                                              } ;
                                        P2 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              } ;
                                        P3 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"істи" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"ядьмо" ;
        imperative2 = table {
                        Sg => base_1+"ядь" ;
                        Pl => base_1+"ядьте"
                      } ;
        infinitive = base_1+"істи" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"ів" ;
                                 Pl => base_1+"іли"
                               } ;
                       Fem => table {
                                Sg => base_1+"іла" ;
                                Pl => base_1+"іли"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"іло" ;
                                   Pl => base_1+"іли"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV095"
  } ;

mkV096 : Str -> V ;
mkV096 base =
  case base of {
    base_1+"ути"+base_2@(?+?) => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"ути"+base_2 ;
                                                Pl => base_1+"ем"+base_2
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"еш"+base_2 ;
                                                Pl => base_1+"ете"+base_2
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"еть"+base_2 ;
                                                Pl => base_1+"уть"+base_2
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"ути"+base_2 ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"ім"+base_2 ;
        imperative2 = table {
                        Sg => base_1+"и"+base_2 ;
                        Pl => base_1+"іть"+base_2
                      } ;
        infinitive = base_1+"ути"+base_2 ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"ув"+base_2 ;
                                 Pl => base_1+"ули"+base_2
                               } ;
                       Fem => table {
                                Sg => base_1+"ула"+base_2 ;
                                Pl => base_1+"ули"+base_2
                              } ;
                       Neuter => table {
                                   Sg => base_1+"уло"+base_2 ;
                                   Pl => base_1+"ули"+base_2
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV096"
  } ;

mkV097 : Str -> V ;
mkV097 base =
  case base of {
    base_1+"гти" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"гти" ;
                                                Pl => base_1+"жим"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"жиш" ;
                                                Pl => base_1+"жите"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"жить" ;
                                                Pl => base_1+"жать"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"гти" ; --guessed
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"жім" ;
        imperative2 = table {
                        Sg => base_1+"жи" ;
                        Pl => base_1+"жіть"
                      } ;
        infinitive = base_1+"гти" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"г" ;
                                 Pl => base_1+"гли"
                               } ;
                       Fem => table {
                                Sg => base_1+"гла" ;
                                Pl => base_1+"гли"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"гло" ;
                                   Pl => base_1+"гли"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"жений" --guessed
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV097"
  } ;

mkV098 : Str -> V ;
mkV098 base =
  case base of {
    base_1+"ояти" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"ояти" ;
                                                Pl => base_1+"оїм"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"оїш" ;
                                                Pl => base_1+"оїте"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"оїть" ;
                                                Pl => base_1+"оять"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"ояти" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"іймо" ;
        imperative2 = table {
                        Sg => base_1+"ій" ;
                        Pl => base_1+"ійте"
                      } ;
        infinitive = base_1+"ояти" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"ояв" ;
                                 Pl => base_1+"ояли"
                               } ;
                       Fem => table {
                                Sg => base_1+"ояла" ;
                                Pl => base_1+"ояли"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"ояло" ;
                                   Pl => base_1+"ояли"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"ояний"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV098"
  } ;

mkV099 : Str -> V ;
mkV099 base =
  case base of {
    base_1+"яти"+base_2@(?+?) => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"яти"+base_2 ;
                                                Pl => base_1+"єм"+base_2
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"єш"+base_2 ;
                                                Pl => base_1+"єте"+base_2
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"єть"+base_2 ;
                                                Pl => base_1+"ють"+base_2
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"яти"+base_2 ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"ймо"+base_2 ;
        imperative2 = table {
                        Sg => base_1+"й"+base_2 ;
                        Pl => base_1+"йте"+base_2
                      } ;
        infinitive = base_1+"яти"+base_2 ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"яв"+base_2 ;
                                 Pl => base_1+"яли"+base_2
                               } ;
                       Fem => table {
                                Sg => base_1+"яла"+base_2 ;
                                Pl => base_1+"яли"+base_2
                              } ;
                       Neuter => table {
                                   Sg => base_1+"яло"+base_2 ;
                                   Pl => base_1+"яли"+base_2
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV099"
  } ;

mkV100 : Str -> V ;
mkV100 base =
  case base of {
    base_1+"іти" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"іти" ;
                                                Pl => base_1+"им"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"иш" ;
                                                Pl => base_1+"ите"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"ить" ;
                                                Pl => base_1+"лять"
                                              }
                                      }
                             } ;
                   Perf => { Past = base_1+"ілий" ; --guessed
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"іти" ; --guessed
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"ім" ;
        imperative2 = table {
                        Sg => base_1+"и" ;
                        Pl => base_1+"іть"
                      } ;
        infinitive = base_1+"іти" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"ів" ;
                                 Pl => base_1+"іли"
                               } ;
                       Fem => table {
                                Sg => base_1+"іла" ;
                                Pl => base_1+"іли"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"іло" ;
                                   Pl => base_1+"іли"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV100"
  } ;

mkV101 : Str -> V ;
mkV101 base =
  case base of {
    base_1+"тати" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"тати" ;
                                                Pl => base_1+"чем"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"чеш" ;
                                                Pl => base_1+"чете"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"че" ;
                                                Pl => base_1+"чуть"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"тати" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"чім" ;
        imperative2 = table {
                        Sg => base_1+"чи" ;
                        Pl => base_1+"чіть"
                      } ;
        infinitive = base_1+"тати" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"тав" ;
                                 Pl => base_1+"тали"
                               } ;
                       Fem => table {
                                Sg => base_1+"тала" ;
                                Pl => base_1+"тали"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"тало" ;
                                   Pl => base_1+"тали"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => base_1+"таний"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"таний"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV101"
  } ;

mkV102 : Str -> V ;
mkV102 base =
  case base of {
    base_1+"ти" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"ти" ;
                                                Pl => base_1+"ем"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"еш" ;
                                                Pl => base_1+"ете"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"е" ;
                                                Pl => base_1+"уть"
                                              }
                                      }
                             } ;
                   Perf => { Past = base_1+"лий" ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"ти" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"ьмо" ;
        imperative2 = table {
                        Sg => base_1+"ь" ;
                        Pl => base_1+"ьте"
                      } ;
        infinitive = base_1+"ти" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1 ;
                                 Pl => base_1+"ли"
                               } ;
                       Fem => table {
                                Sg => base_1+"ла" ;
                                Pl => base_1+"ли"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"ло" ;
                                   Pl => base_1+"ли"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV102"
  } ;

mkV103 : Str -> V ;
mkV103 base =
  case base of {
    base_1+"яти" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"яти" ;
                                                Pl => nonExist
                                              } ;
                                        P2 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"є" ; --guessed
                                                Pl => base_1+"ють" --guessed
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"яти" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"імім" ;
        imperative2 = table {
                        Sg => base_1+"іми" ;
                        Pl => base_1+"іміть"
                      } ;
        infinitive = base_1+"яти" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"яв" ;
                                 Pl => base_1+"яли"
                               } ;
                       Fem => table {
                                Sg => base_1+"яла" ;
                                Pl => base_1+"яли"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"яло" ;
                                   Pl => base_1+"яли"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"ятий"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV103"
  } ;

mkV104 : Str -> V ;
mkV104 base =
  case base of {
    base_1+"гти" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"гти" ;
                                                Pl => base_1+"жем"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"жеш" ;
                                                Pl => base_1+"жете"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"же" ;
                                                Pl => base_1+"жуть"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"гти" ; --guessed
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"жім" ;
        imperative2 = table {
                        Sg => base_1+"жи" ;
                        Pl => base_1+"жіть"
                      } ;
        infinitive = base_1+"гти" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"г" ;
                                 Pl => base_1+"гли"
                               } ;
                       Fem => table {
                                Sg => base_1+"гла" ;
                                Pl => base_1+"гли"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"гло" ;
                                   Pl => base_1+"гли"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => base_1+"жений"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"жений" --guessed
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV104"
  } ;

mkV105 : Str -> V ;
mkV105 base =
  case base of {
    base_1+"сти" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"сти" ;
                                                Pl => base_1+"вем"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"веш" ;
                                                Pl => base_1+"вете"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"ве" ;
                                                Pl => base_1+"вуть"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"сти" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"вім" ;
        imperative2 = table {
                        Sg => base_1+"ви" ;
                        Pl => base_1+"віть"
                      } ;
        infinitive = base_1+"сти" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"в" ;
                                 Pl => base_1+"ли"
                               } ;
                       Fem => table {
                                Sg => base_1+"ла" ;
                                Pl => base_1+"ли"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"ло" ;
                                   Pl => base_1+"ли"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV105"
  } ;

mkV106 : Str -> V ;
mkV106 base =
  case base of {
    base_1+"оти"+base_2@(?+?) => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"оти"+base_2 ;
                                                Pl => base_1+"ем"+base_2
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"еш"+base_2 ;
                                                Pl => base_1+"ете"+base_2
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"еть"+base_2 ;
                                                Pl => base_1+"ють"+base_2
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"ім"+base_2 ;
        imperative2 = table {
                        Sg => base_1+"и"+base_2 ;
                        Pl => base_1+"іть"+base_2
                      } ;
        infinitive = base_1+"оти"+base_2 ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"ов"+base_2 ;
                                 Pl => base_1+"оли"+base_2
                               } ;
                       Fem => table {
                                Sg => base_1+"ола"+base_2 ;
                                Pl => base_1+"оли"+base_2
                              } ;
                       Neuter => table {
                                   Sg => base_1+"оло"+base_2 ;
                                   Pl => base_1+"оли"+base_2
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV106"
  } ;

mkV107 : Str -> V ;
mkV107 base =
  case base of {
    "і"+base_1+"ювати" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => "і"+base_1+"ювати" ;
                                                Pl => "будемо й"+base_1+"ювати"
                                              } ;
                                        P2 => table {
                                                Sg => "будеш і"+base_1+"ювати" ;
                                                Pl => "будете й"+base_1+"ювати"
                                              } ;
                                        P3 => table {
                                                Sg => "буде й"+base_1+"ювати" ;
                                                Pl => "будуть і"+base_1+"ювати"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = "і"+base_1+"юймо" ;
        imperative2 = table {
                        Sg => "і"+base_1+"юй" ;
                        Pl => "і"+base_1+"юйте"
                      } ;
        infinitive = "і"+base_1+"ювати" ;
        participle = table {
                       Masc => table {
                                 Sg => "і"+base_1+"ював" ;
                                 Pl => "і"+base_1+"ювали"
                               } ;
                       Fem => table {
                                Sg => "і"+base_1+"ювала" ;
                                Pl => "і"+base_1+"ювали"
                              } ;
                       Neuter => table {
                                   Sg => "і"+base_1+"ювало" ;
                                   Pl => "і"+base_1+"ювали"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => "і"+base_1+"ьований"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV107"
  } ;

mkV108 : Str -> V ;
mkV108 base =
  case base of {
    base_1+"ати" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"ати" ;
                                                Pl => base_1+"мем"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"меш" ;
                                                Pl => base_1+"мете"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"ме" ;
                                                Pl => base_1+"муть"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"мім" ;
        imperative2 = table {
                        Sg => base_1+"ми" ;
                        Pl => base_1+"міть"
                      } ;
        infinitive = base_1+"ати" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"ав" ;
                                 Pl => base_1+"али"
                               } ;
                       Fem => table {
                                Sg => base_1+"ала" ;
                                Pl => base_1+"али"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"ало" ;
                                   Pl => base_1+"али"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => base_1+"атий"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV108"
  } ;

mkV109 : Str -> V ;
mkV109 base =
  case base of {
    base_1+"ати" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"ати" ;
                                                Pl => base_1+"нем"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"неш" ;
                                                Pl => base_1+"нете"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"не" ;
                                                Pl => base_1+"нуть"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"ати" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"нім" ;
        imperative2 = table {
                        Sg => base_1+"ни" ;
                        Pl => base_1+"ніть"
                      } ;
        infinitive = base_1+"ати" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"ав" ;
                                 Pl => base_1+"али"
                               } ;
                       Fem => table {
                                Sg => base_1+"ала" ;
                                Pl => base_1+"али"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"ало" ;
                                   Pl => base_1+"али"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => base_1+"атий"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"атий"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV109"
  } ;

mkV110 : Str -> V ;
mkV110 base =
  case base of {
    base_1+"егти" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"егти" ;
                                                Pl => base_1+"ежем"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"ежеш" ;
                                                Pl => base_1+"ежете"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"еже" ;
                                                Pl => base_1+"ежуть"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"егти" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"ежім" ;
        imperative2 = table {
                        Sg => base_1+"ежи" ;
                        Pl => base_1+"ежіть"
                      } ;
        infinitive = base_1+"егти" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"іг" ;
                                 Pl => base_1+"егли"
                               } ;
                       Fem => table {
                                Sg => base_1+"егла" ;
                                Pl => base_1+"егли"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"егло" ;
                                   Pl => base_1+"егли"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => base_1+"ежений"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"ежений"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV110"
  } ;

mkV111 : Str -> V ;
mkV111 base =
  case base of {
    base_1+"іти" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"іти" ;
                                                Pl => base_1+"ем"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"еш" ;
                                                Pl => base_1+"ете"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"е" ;
                                                Pl => base_1+"лять"
                                              }
                                      }
                             } ;
                   Perf => { Past = base_1+"ілий" ; --guessed
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"іти" ; --guessed
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"ім" ;
        imperative2 = table {
                        Sg => base_1+"и" ;
                        Pl => base_1+"іть"
                      } ;
        infinitive = base_1+"іти" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"ів" ;
                                 Pl => base_1+"іли"
                               } ;
                       Fem => table {
                                Sg => base_1+"іла" ;
                                Pl => base_1+"іли"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"іло" ;
                                   Pl => base_1+"іли"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV111"
  } ;

mkV112 : Str -> V ;
mkV112 base =
  case base of {
    base_1+"вати"+base_2@(?+?) => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"вати"+base_2 ;
                                                Pl => base_1+"єм"+base_2
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"єш"+base_2 ;
                                                Pl => base_1+"єте"+base_2
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"єть"+base_2 ;
                                                Pl => base_1+"ють"+base_2
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"ваймо"+base_2 ;
        imperative2 = table {
                        Sg => base_1+"вай"+base_2 ;
                        Pl => base_1+"вайте"+base_2
                      } ;
        infinitive = base_1+"вати"+base_2 ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"вав"+base_2 ;
                                 Pl => base_1+"вали"+base_2
                               } ;
                       Fem => table {
                                Sg => base_1+"вала"+base_2 ;
                                Pl => base_1+"вали"+base_2
                              } ;
                       Neuter => table {
                                   Sg => base_1+"вало"+base_2 ;
                                   Pl => base_1+"вали"+base_2
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV112"
  } ;

mkV113 : Str -> V ;
mkV113 base =
  case base of {
    base_1+"вати" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"вати" ;
                                                Pl => "будемо "+base_1+"вати"
                                              } ;
                                        P2 => table {
                                                Sg => "будеш "+base_1+"вати" ;
                                                Pl => "будете "+base_1+"вати"
                                              } ;
                                        P3 => table {
                                                Sg => "буде "+base_1+"вати" ;
                                                Pl => "будуть "+base_1+"вати"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"вати" ; --guessed
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"ймо" ;
        imperative2 = table {
                        Sg => base_1+"й" ;
                        Pl => base_1+"йте"
                      } ;
        infinitive = base_1+"вати" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"вав" ;
                                 Pl => base_1+"вали"
                               } ;
                       Fem => table {
                                Sg => base_1+"вала" ;
                                Pl => base_1+"вали"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"вало" ;
                                   Pl => base_1+"вали"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => base_1+"ваний"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"ваний" --guessed
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV113"
  } ;

mkV114 : Str -> V ;
mkV114 base =
  case base of {
    base_1+"ити"+base_2@(?+?) => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"ити"+base_2 ;
                                                Pl => "будемо "+base_1+"ити"+base_2
                                              } ;
                                        P2 => table {
                                                Sg => "будеш "+base_1+"ити"+base_2 ;
                                                Pl => "будете "+base_1+"ити"+base_2
                                              } ;
                                        P3 => table {
                                                Sg => "буде "+base_1+"ити"+base_2 ;
                                                Pl => "будуть "+base_1+"ити"+base_2
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"ім"+base_2 ;
        imperative2 = table {
                        Sg => base_1+"и"+base_2 ;
                        Pl => base_1+"іть"+base_2
                      } ;
        infinitive = base_1+"ити"+base_2 ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"ив"+base_2 ;
                                 Pl => base_1+"или"+base_2
                               } ;
                       Fem => table {
                                Sg => base_1+"ила"+base_2 ;
                                Pl => base_1+"или"+base_2
                              } ;
                       Neuter => table {
                                   Sg => base_1+"ило"+base_2 ;
                                   Pl => base_1+"или"+base_2
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV114"
  } ;

mkV115 : Str -> V ;
mkV115 base =
  case base of {
    base_1+"ити"+base_2@(?+?) => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"ити"+base_2 ;
                                                Pl => base_1+"им"+base_2
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"иш"+base_2 ;
                                                Pl => base_1+"ите"+base_2
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"ить"+base_2 ;
                                                Pl => base_1+"ять"+base_2
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"ити"+base_2 ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"ьмо"+base_2 ;
        imperative2 = table {
                        Sg => base_1+"ь"+base_2 ;
                        Pl => base_1+"ьте"+base_2
                      } ;
        infinitive = base_1+"ити"+base_2 ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"ив"+base_2 ;
                                 Pl => base_1+"или"+base_2
                               } ;
                       Fem => table {
                                Sg => base_1+"ила"+base_2 ;
                                Pl => base_1+"или"+base_2
                              } ;
                       Neuter => table {
                                   Sg => base_1+"ило"+base_2 ;
                                   Pl => base_1+"или"+base_2
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV115"
  } ;

mkV116 : Str -> V ;
mkV116 base =
  case base of {
    base_1+"ути" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"ути" ;
                                                Pl => nonExist
                                              } ;
                                        P2 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              } ;
                                        P3 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"ути" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"ьмо" ;
        imperative2 = table {
                        Sg => base_1+"ь" ;
                        Pl => base_1+"ьте"
                      } ;
        infinitive = base_1+"ути" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"ув" ;
                                 Pl => base_1+"ули"
                               } ;
                       Fem => table {
                                Sg => base_1+"ула" ;
                                Pl => base_1+"ули"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"уло" ;
                                   Pl => base_1+"ули"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"утий"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV116"
  } ;

mkV117 : Str -> V ;
mkV117 base =
  case base of {
    base_1+"ути" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"ути" ;
                                                Pl => base_1+"мем"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"меш" ;
                                                Pl => base_1+"мете"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"ме" ;
                                                Pl => base_1+"муть"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"ути" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"мім" ;
        imperative2 = table {
                        Sg => base_1+"ми" ;
                        Pl => base_1+"міть"
                      } ;
        infinitive = base_1+"ути" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"ув" ;
                                 Pl => base_1+"ули"
                               } ;
                       Fem => table {
                                Sg => base_1+"ула" ;
                                Pl => base_1+"ули"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"уло" ;
                                   Pl => base_1+"ули"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"утий"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV117"
  } ;

mkV118 : Str -> V ;
mkV118 base =
  case base of {
    base_1+"ити"+base_2@(?+?) => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"ити"+base_2 ;
                                                Pl => base_1+"'єм"+base_2
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"'єш"+base_2 ;
                                                Pl => base_1+"'єте"+base_2
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"'єть"+base_2 ;
                                                Pl => base_1+"'ють"+base_2
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"иймо"+base_2 ;
        imperative2 = table {
                        Sg => base_1+"ий"+base_2 ;
                        Pl => base_1+"ийте"+base_2
                      } ;
        infinitive = base_1+"ити"+base_2 ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"ив"+base_2 ;
                                 Pl => base_1+"или"+base_2
                               } ;
                       Fem => table {
                                Sg => base_1+"ила"+base_2 ;
                                Pl => base_1+"или"+base_2
                              } ;
                       Neuter => table {
                                   Sg => base_1+"ило"+base_2 ;
                                   Pl => base_1+"или"+base_2
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV118"
  } ;

mkV119 : Str -> V ;
mkV119 base =
  case base of {
    base_1+"окти" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"окти" ;
                                                Pl => base_1+"очем"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"очеш" ;
                                                Pl => base_1+"очете"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"оче" ;
                                                Pl => base_1+"очуть"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"очім" ;
        imperative2 = table {
                        Sg => base_1+"очи" ;
                        Pl => base_1+"очіть"
                      } ;
        infinitive = base_1+"окти" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"ік" ;
                                 Pl => base_1+"окли"
                               } ;
                       Fem => table {
                                Sg => base_1+"окла" ;
                                Pl => base_1+"окли"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"окло" ;
                                   Pl => base_1+"окли"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => base_1+"очений"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV119"
  } ;

mkV120 : Str -> V ;
mkV120 base =
  case base of {
    base_1+"ти"+base_2@(?+?) => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"ти"+base_2 ;
                                                Pl => nonExist
                                              } ;
                                        P2 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"єть"+base_2 ; --guessed
                                                Pl => base_1+"ють"+base_2 --guessed
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"ти"+base_2 ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"ньмо"+base_2 ;
        imperative2 = table {
                        Sg => base_1+"нь"+base_2 ;
                        Pl => base_1+"ньте"+base_2
                      } ;
        infinitive = base_1+"ти"+base_2 ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"в"+base_2 ;
                                 Pl => base_1+"ли"+base_2
                               } ;
                       Fem => table {
                                Sg => base_1+"ла"+base_2 ;
                                Pl => base_1+"ли"+base_2
                              } ;
                       Neuter => table {
                                   Sg => base_1+"ло"+base_2 ;
                                   Pl => base_1+"ли"+base_2
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV120"
  } ;

mkV121 : Str -> V ;
mkV121 base =
  case base of {
    base_1+"тіти" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"тіти" ;
                                                Pl => base_1+"тим"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"тиш" ;
                                                Pl => base_1+"тите"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"тить" ;
                                                Pl => base_1+"тять"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"тім" ;
        imperative2 = table {
                        Sg => base_1+"ти" ;
                        Pl => base_1+"тіть"
                      } ;
        infinitive = base_1+"тіти" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"тів" ;
                                 Pl => base_1+"тіли"
                               } ;
                       Fem => table {
                                Sg => base_1+"тіла" ;
                                Pl => base_1+"тіли"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"тіло" ;
                                   Pl => base_1+"тіли"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => base_1+"чений"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV121"
  } ;

mkV122 : Str -> V ;
mkV122 base =
  case base of {
    base_1+"ати" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"ати" ;
                                                Pl => base_1+"им"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"иш" ;
                                                Pl => base_1+"ите"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"ить" ;
                                                Pl => base_1+"ать"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"ати" ; --guessed
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"мо" ;
        imperative2 = table {
                        Sg => base_1 ;
                        Pl => base_1+"те"
                      } ;
        infinitive = base_1+"ати" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"ав" ;
                                 Pl => base_1+"али"
                               } ;
                       Fem => table {
                                Sg => base_1+"ала" ;
                                Pl => base_1+"али"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"ало" ;
                                   Pl => base_1+"али"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"аний" --guessed
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV122"
  } ;

mkV123 : Str -> V ;
mkV123 base =
  case base of {
    base_1+"ити"+base_2@(?+?) => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"ити"+base_2 ;
                                                Pl => base_1+"им"+base_2
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"иш"+base_2 ;
                                                Pl => base_1+"ите"+base_2
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"ить"+base_2 ;
                                                Pl => base_1+"лять"+base_2
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"ити"+base_2 ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"мо"+base_2 ;
        imperative2 = table {
                        Sg => base_1+base_2 ;
                        Pl => base_1+"те"+base_2
                      } ;
        infinitive = base_1+"ити"+base_2 ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"ив"+base_2 ;
                                 Pl => base_1+"или"+base_2
                               } ;
                       Fem => table {
                                Sg => base_1+"ила"+base_2 ;
                                Pl => base_1+"или"+base_2
                              } ;
                       Neuter => table {
                                   Sg => base_1+"ило"+base_2 ;
                                   Pl => base_1+"или"+base_2
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV123"
  } ;

mkV124 : Str -> V ;
mkV124 base =
  case base of {
    "і"+base_1+"увати" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => "і"+base_1+"увати" ;
                                                Pl => "будемо й"+base_1+"увати"
                                              } ;
                                        P2 => table {
                                                Sg => "будеш і"+base_1+"увати" ;
                                                Pl => "будете й"+base_1+"увати"
                                              } ;
                                        P3 => table {
                                                Sg => "буде й"+base_1+"увати" ;
                                                Pl => "будуть і"+base_1+"увати"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = "і"+base_1+"уймо" ;
        imperative2 = table {
                        Sg => "і"+base_1+"уй" ;
                        Pl => "і"+base_1+"уйте"
                      } ;
        infinitive = "і"+base_1+"увати" ;
        participle = table {
                       Masc => table {
                                 Sg => "і"+base_1+"ував" ;
                                 Pl => "і"+base_1+"ували"
                               } ;
                       Fem => table {
                                Sg => "і"+base_1+"увала" ;
                                Pl => "і"+base_1+"ували"
                              } ;
                       Neuter => table {
                                   Sg => "і"+base_1+"увало" ;
                                   Pl => "і"+base_1+"ували"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => "і"+base_1+"ований"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV124"
  } ;

mkV125 : Str -> V ;
mkV125 base =
  case base of {
    base_1+"ювати" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"ювати" ;
                                                Pl => "будемо "+base_1+"ювати"
                                              } ;
                                        P2 => table {
                                                Sg => "будеш "+base_1+"ювати" ;
                                                Pl => "будете "+base_1+"ювати"
                                              } ;
                                        P3 => table {
                                                Sg => "буде "+base_1+"ювати" ;
                                                Pl => "будуть "+base_1+"ювати"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"ювати" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"юймо" ;
        imperative2 = table {
                        Sg => base_1+"юй" ;
                        Pl => base_1+"юйте"
                      } ;
        infinitive = base_1+"ювати" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"ював" ;
                                 Pl => base_1+"ювали"
                               } ;
                       Fem => table {
                                Sg => base_1+"ювала" ;
                                Pl => base_1+"ювали"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"ювало" ;
                                   Pl => base_1+"ювали"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => base_1+"йований"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"йований"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV125"
  } ;

mkV126 : Str -> V ;
mkV126 base =
  case base of {
    base_1+"няти" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"няти" ;
                                                Pl => nonExist
                                              } ;
                                        P2 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              } ;
                                        P3 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"няти" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"мім" ;
        imperative2 = table {
                        Sg => base_1+"ми" ;
                        Pl => base_1+"міть"
                      } ;
        infinitive = base_1+"няти" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"няв" ;
                                 Pl => base_1+"няли"
                               } ;
                       Fem => table {
                                Sg => base_1+"няла" ;
                                Pl => base_1+"няли"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"няло" ;
                                   Pl => base_1+"няли"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"нятий"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV126"
  } ;

mkV127 : Str -> V ;
mkV127 base =
  case base of {
    base_1+"зити" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"зити" ;
                                                Pl => base_1+"зим"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"зиш" ;
                                                Pl => base_1+"зите"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"зить" ;
                                                Pl => base_1+"зять"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"зити" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"зім" ;
        imperative2 = table {
                        Sg => base_1+"зи" ;
                        Pl => base_1+"зіть"
                      } ;
        infinitive = base_1+"зити" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"зив" ;
                                 Pl => base_1+"зили"
                               } ;
                       Fem => table {
                                Sg => base_1+"зила" ;
                                Pl => base_1+"зили"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"зило" ;
                                   Pl => base_1+"зили"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => base_1+"жений"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"жений"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV127"
  } ;

mkV128 : Str -> V ;
mkV128 base =
  case base of {
    base_1+"зити" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"зити" ;
                                                Pl => base_1+"зим"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"зиш" ;
                                                Pl => base_1+"зите"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"зить" ;
                                                Pl => base_1+"зять"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"зити" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"зьмо" ;
        imperative2 = table {
                        Sg => base_1+"зь" ;
                        Pl => base_1+"зьте"
                      } ;
        infinitive = base_1+"зити" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"зив" ;
                                 Pl => base_1+"зили"
                               } ;
                       Fem => table {
                                Sg => base_1+"зила" ;
                                Pl => base_1+"зили"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"зило" ;
                                   Pl => base_1+"зили"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => base_1+"жений"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"жений"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV128"
  } ;

mkV129 : Str -> V ;
mkV129 base =
  case base of {
    base_1+"ти"+base_2@(?+?) => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"ти"+base_2 ;
                                                Pl => nonExist
                                              } ;
                                        P2 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"деть"+base_2 ;
                                                Pl => nonExist
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"ти"+base_2 ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"дім"+base_2 ;
        imperative2 = table {
                        Sg => base_1+"ди"+base_2 ;
                        Pl => base_1+"діть"+base_2
                      } ;
        infinitive = base_1+"ти"+base_2 ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"шов"+base_2 ;
                                 Pl => base_1+"шли"+base_2
                               } ;
                       Fem => table {
                                Sg => base_1+"шла"+base_2 ;
                                Pl => base_1+"шли"+base_2
                              } ;
                       Neuter => table {
                                   Sg => base_1+"шло"+base_2 ;
                                   Pl => base_1+"шли"+base_2
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV129"
  } ;

mkV130 : Str -> V ;
mkV130 base =
  case base of {
    base_1+"ти"+base_2@(?+?) => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"ти"+base_2 ;
                                                Pl => nonExist
                                              } ;
                                        P2 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"ть"+base_2 ;
                                                Pl => nonExist
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"ти"+base_2 ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"дьмо"+base_2 ;
        imperative2 = table {
                        Sg => base_1+"дь"+base_2 ;
                        Pl => base_1+"дьте"+base_2
                      } ;
        infinitive = base_1+"ти"+base_2 ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"в"+base_2 ;
                                 Pl => base_1+"ли"+base_2
                               } ;
                       Fem => table {
                                Sg => base_1+"ла"+base_2 ;
                                Pl => base_1+"ли"+base_2
                              } ;
                       Neuter => table {
                                   Sg => base_1+"ло"+base_2 ;
                                   Pl => base_1+"ли"+base_2
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV130"
  } ;

mkV131 : Str -> V ;
mkV131 base =
  case base of {
    base_1+"ути"+base_2@(?+?) => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"ути"+base_2 ;
                                                Pl => nonExist
                                              } ;
                                        P2 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              } ;
                                        P3 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"ути"+base_2 ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"ьмо"+base_2 ;
        imperative2 = table {
                        Sg => base_1+"ь"+base_2 ;
                        Pl => base_1+"ьте"+base_2
                      } ;
        infinitive = base_1+"ути"+base_2 ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"ув"+base_2 ;
                                 Pl => base_1+"ули"+base_2
                               } ;
                       Fem => table {
                                Sg => base_1+"ула"+base_2 ;
                                Pl => base_1+"ули"+base_2
                              } ;
                       Neuter => table {
                                   Sg => base_1+"уло"+base_2 ;
                                   Pl => base_1+"ули"+base_2
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV131"
  } ;

mkV132 : Str -> V ;
mkV132 base =
  case base of {
    base_1+"гти" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"гти" ;
                                                Pl => base_1+"жим" --guessed
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"жиш" ; --guessed
                                                Pl => base_1+"жите" --guessed
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"жить" ; --guessed
                                                Pl => base_1+"жать" --guessed
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"гти" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"жім" ;
        imperative2 = table {
                        Sg => base_1+"жи" ;
                        Pl => base_1+"жіть"
                      } ;
        infinitive = base_1+"гти" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"г" ;
                                 Pl => base_1+"гли"
                               } ;
                       Fem => table {
                                Sg => base_1+"гла" ;
                                Pl => base_1+"гли"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"гло" ;
                                   Pl => base_1+"гли"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => base_1+"жений" --guessed
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"жений"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV132"
  } ;

mkV133 : Str -> V ;
mkV133 base =
  case base of {
    base_1+"і"+base_2@?+base_3@?+"ати" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"і"+base_2+base_3+"ати" ;
                                                Pl => nonExist
                                              } ;
                                        P2 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              } ;
                                        P3 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"і"+base_2+base_3+"ати" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+base_2+"е"+base_3+"ім" ;
        imperative2 = table {
                        Sg => base_1+base_2+"е"+base_3+"и" ;
                        Pl => base_1+base_2+"е"+base_3+"іть"
                      } ;
        infinitive = base_1+"і"+base_2+base_3+"ати" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"і"+base_2+base_3+"ав" ;
                                 Pl => base_1+"і"+base_2+base_3+"али"
                               } ;
                       Fem => table {
                                Sg => base_1+"і"+base_2+base_3+"ала" ;
                                Pl => base_1+"і"+base_2+base_3+"али"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"і"+base_2+base_3+"ало" ;
                                   Pl => base_1+"і"+base_2+base_3+"али"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"і"+base_2+base_3+"аний"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV133"
  } ;

mkV134 : Str -> V ;
mkV134 base =
  case base of {
    base_1+"ити"+base_2@(?+?) => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"ити"+base_2 ;
                                                Pl => base_1+"им"+base_2
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"иш"+base_2 ;
                                                Pl => base_1+"ите"+base_2
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"ить"+base_2 ;
                                                Pl => base_1+"ать"+base_2
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"мо"+base_2 ;
        imperative2 = table {
                        Sg => base_1+base_2 ;
                        Pl => base_1+"те"+base_2
                      } ;
        infinitive = base_1+"ити"+base_2 ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"ив"+base_2 ;
                                 Pl => base_1+"или"+base_2
                               } ;
                       Fem => table {
                                Sg => base_1+"ила"+base_2 ;
                                Pl => base_1+"или"+base_2
                              } ;
                       Neuter => table {
                                   Sg => base_1+"ило"+base_2 ;
                                   Pl => base_1+"или"+base_2
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV134"
  } ;

mkV135 : Str -> V ;
mkV135 base =
  case base of {
    base_1+"вати" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"вати" ;
                                                Pl => base_1+"єм" --guessed
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"єш" ; --guessed
                                                Pl => base_1+"єте" --guessed
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"є" ;
                                                Pl => base_1+"ють"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"вати" ; --guessed
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"ваймо" ; --guessed
        imperative2 = table {
                        Sg => base_1+"вай" ; --guessed
                        Pl => base_1+"вайте" --guessed
                      } ;
        infinitive = base_1+"вати" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"вав" ;
                                 Pl => base_1+"вали"
                               } ;
                       Fem => table {
                                Sg => base_1+"вала" ;
                                Pl => base_1+"вали"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"вало" ;
                                   Pl => base_1+"вали"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => base_1+"ваний" --guessed
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"ваний" --guessed
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV135"
  } ;

mkV136 : Str -> V ;
mkV136 base =
  case base of {
    base_1+"ати"+base_2@(?+?) => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"ати"+base_2 ;
                                                Pl => base_1+"ем"+base_2
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"еш"+base_2 ;
                                                Pl => base_1+"ете"+base_2
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"еть"+base_2 ;
                                                Pl => base_1+"уть"+base_2
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"ати"+base_2 ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"ім"+base_2 ;
        imperative2 = table {
                        Sg => base_1+"и"+base_2 ;
                        Pl => base_1+"іть"+base_2
                      } ;
        infinitive = base_1+"ати"+base_2 ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"ав"+base_2 ;
                                 Pl => base_1+"али"+base_2
                               } ;
                       Fem => table {
                                Sg => base_1+"ала"+base_2 ;
                                Pl => base_1+"али"+base_2
                              } ;
                       Neuter => table {
                                   Sg => base_1+"ало"+base_2 ;
                                   Pl => base_1+"али"+base_2
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV136"
  } ;

mkV137 : Str -> V ;
mkV137 base =
  case base of {
    base_1+base_2@?+"ати"+base_3@(?+?) => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+base_2+"ати"+base_3 ;
                                                Pl => base_1+"е"+base_2+"ем"+base_3
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"е"+base_2+"еш"+base_3 ;
                                                Pl => base_1+"е"+base_2+"ете"+base_3
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"е"+base_2+"еть"+base_3 ;
                                                Pl => base_1+"е"+base_2+"уть"+base_3
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+base_2+"ати"+base_3 ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"е"+base_2+"ім"+base_3 ;
        imperative2 = table {
                        Sg => base_1+"е"+base_2+"и"+base_3 ;
                        Pl => base_1+"е"+base_2+"іть"+base_3
                      } ;
        infinitive = base_1+base_2+"ати"+base_3 ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+base_2+"ав"+base_3 ;
                                 Pl => base_1+base_2+"али"+base_3
                               } ;
                       Fem => table {
                                Sg => base_1+base_2+"ала"+base_3 ;
                                Pl => base_1+base_2+"али"+base_3
                              } ;
                       Neuter => table {
                                   Sg => base_1+base_2+"ало"+base_3 ;
                                   Pl => base_1+base_2+"али"+base_3
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV137"
  } ;

mkV138 : Str -> V ;
mkV138 base =
  case base of {
    base_1+"ясти" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"ясти" ;
                                                Pl => base_1+"енем"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"енеш" ;
                                                Pl => base_1+"енете"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"ене" ;
                                                Pl => base_1+"енуть"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"енім" ;
        imperative2 = table {
                        Sg => base_1+"ени" ;
                        Pl => base_1+"еніть"
                      } ;
        infinitive = base_1+"ясти" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"яв" ;
                                 Pl => base_1+"яли"
                               } ;
                       Fem => table {
                                Sg => base_1+"яла" ;
                                Pl => base_1+"яли"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"яло" ;
                                   Pl => base_1+"яли"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => base_1+"ятий"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV138"
  } ;

mkV139 : Str -> V ;
mkV139 base =
  case base of {
    base_1+"ести"+base_2@(?+?) => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"ести"+base_2 ;
                                                Pl => nonExist
                                              } ;
                                        P2 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"едеть"+base_2 ;
                                                Pl => base_1+"едуть"+base_2
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = nonExist ;
        imperative2 = table {
                        Sg => nonExist ;
                        Pl => nonExist
                      } ;
        infinitive = base_1+"ести"+base_2 ;
        participle = table {
                       Masc => table {
                                 Sg => "ві"+base_1+base_2 ;
                                 Pl => base_1+"ели"+base_2
                               } ;
                       Fem => table {
                                Sg => base_1+"ела"+base_2 ;
                                Pl => base_1+"ели"+base_2
                              } ;
                       Neuter => table {
                                   Sg => base_1+"ело"+base_2 ;
                                   Pl => base_1+"ели"+base_2
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV139"
  } ;

mkV140 : Str -> V ;
mkV140 base =
  case base of {
    base_1+"іти" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"іти" ;
                                                Pl => base_1+"им" --guessed
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"иш" ; --guessed
                                                Pl => base_1+"ите" --guessed
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"ить" ;
                                                Pl => base_1+"лять"
                                              }
                                      }
                             } ;
                   Perf => { Past = base_1+"ілий" ; --guessed
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"іти" ; --guessed
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"ім" ; --guessed
        imperative2 = table {
                        Sg => base_1+"и" ; --guessed
                        Pl => base_1+"іть" --guessed
                      } ;
        infinitive = base_1+"іти" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"ів" ;
                                 Pl => base_1+"іли"
                               } ;
                       Fem => table {
                                Sg => base_1+"іла" ;
                                Pl => base_1+"іли"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"іло" ;
                                   Pl => base_1+"іли"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"жений" --guessed
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV140"
  } ;

mkV141 : Str -> V ;
mkV141 base =
  case base of {
    base_1+"няти"+base_2@(?+?) => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"няти"+base_2 ;
                                                Pl => nonExist
                                              } ;
                                        P2 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              } ;
                                        P3 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"няти"+base_2 ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"мім"+base_2 ;
        imperative2 = table {
                        Sg => base_1+"ми"+base_2 ;
                        Pl => base_1+"міть"+base_2
                      } ;
        infinitive = base_1+"няти"+base_2 ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"няв"+base_2 ;
                                 Pl => base_1+"няли"+base_2
                               } ;
                       Fem => table {
                                Sg => base_1+"няла"+base_2 ;
                                Pl => base_1+"няли"+base_2
                              } ;
                       Neuter => table {
                                   Sg => base_1+"няло"+base_2 ;
                                   Pl => base_1+"няли"+base_2
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV141"
  } ;

mkV142 : Str -> V ;
mkV142 base =
  case base of {
    base_1+"ювати" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"ювати" ;
                                                Pl => "будемо "+base_1+"ювати"
                                              } ;
                                        P2 => table {
                                                Sg => "будеш "+base_1+"ювати" ;
                                                Pl => "будете "+base_1+"ювати"
                                              } ;
                                        P3 => table {
                                                Sg => "буде "+base_1+"ювати" ;
                                                Pl => "будуть "+base_1+"ювати"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"ювати" ; --guessed
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"юймо" ;
        imperative2 = table {
                        Sg => base_1+"юй" ;
                        Pl => base_1+"юйте"
                      } ;
        infinitive = base_1+"ювати" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"ював" ;
                                 Pl => base_1+"ювали"
                               } ;
                       Fem => table {
                                Sg => base_1+"ювала" ;
                                Pl => base_1+"ювали"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"ювало" ;
                                   Pl => base_1+"ювали"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => base_1+"ьований"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"йований" --guessed
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV142"
  } ;

mkV143 : Str -> V ;
mkV143 base =
  case base of {
    base_1+"і"+base_2@?+base_3@?+"ати"+base_4@(?+?) => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"і"+base_2+base_3+"ати"+base_4 ;
                                                Pl => nonExist
                                              } ;
                                        P2 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              } ;
                                        P3 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"і"+base_2+base_3+"ати"+base_4 ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+base_2+"е"+base_3+"ім"+base_4 ;
        imperative2 = table {
                        Sg => base_1+base_2+"е"+base_3+"и"+base_4 ;
                        Pl => base_1+base_2+"е"+base_3+"іть"+base_4
                      } ;
        infinitive = base_1+"і"+base_2+base_3+"ати"+base_4 ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"і"+base_2+base_3+"ав"+base_4 ;
                                 Pl => base_1+"і"+base_2+base_3+"али"+base_4
                               } ;
                       Fem => table {
                                Sg => base_1+"і"+base_2+base_3+"ала"+base_4 ;
                                Pl => base_1+"і"+base_2+base_3+"али"+base_4
                              } ;
                       Neuter => table {
                                   Sg => base_1+"і"+base_2+base_3+"ало"+base_4 ;
                                   Pl => base_1+"і"+base_2+base_3+"али"+base_4
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV143"
  } ;

mkV144 : Str -> V ;
mkV144 base =
  case base of {
    base_1+"ути" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"ути" ;
                                                Pl => "будемо "+base_1+"ути"
                                              } ;
                                        P2 => table {
                                                Sg => "будеш "+base_1+"ути" ;
                                                Pl => "будете "+base_1+"ути"
                                              } ;
                                        P3 => table {
                                                Sg => "буде "+base_1+"ути" ;
                                                Pl => "будуть "+base_1+"ути"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"ути" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"ім" ;
        imperative2 = table {
                        Sg => base_1+"и" ;
                        Pl => base_1+"іть"
                      } ;
        infinitive = base_1+"ути" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"ув" ;
                                 Pl => base_1+"ули"
                               } ;
                       Fem => table {
                                Sg => base_1+"ула" ;
                                Pl => base_1+"ули"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"уло" ;
                                   Pl => base_1+"ули"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => base_1+"ений"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"утий"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV144"
  } ;

mkV145 : Str -> V ;
mkV145 base =
  case base of {
    base_1+base_2@?+"іти"+base_3@(?+?) => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+base_2+"іти"+base_3 ;
                                                Pl => nonExist
                                              } ;
                                        P2 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"че"+base_2+"ь"+base_3 ;
                                                Pl => nonExist
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = nonExist ;
        imperative2 = table {
                        Sg => nonExist ;
                        Pl => nonExist
                      } ;
        infinitive = base_1+base_2+"іти"+base_3 ;
        participle = table {
                       Masc => table {
                                 Sg => nonExist ;
                                 Pl => nonExist
                               } ;
                       Fem => table {
                                Sg => nonExist ;
                                Pl => nonExist
                              } ;
                       Neuter => table {
                                   Sg => base_1+base_2+"іло"+base_3 ;
                                   Pl => nonExist
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV145"
  } ;

mkV146 : Str -> V ;
mkV146 base =
  case base of {
    base_1@?+base_2+"увати" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+base_2+"увати" ;
                                                Pl => "б"+base_1+"демо в"+base_2+"увати"
                                              } ;
                                        P2 => table {
                                                Sg => "будеш "+base_1+base_2+"увати" ;
                                                Pl => "б"+base_1+"дете в"+base_2+"увати"
                                              } ;
                                        P3 => table {
                                                Sg => "б"+base_1+"де в"+base_2+"увати" ;
                                                Pl => "будуть "+base_1+base_2+"увати"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+base_2+"уймо" ;
        imperative2 = table {
                        Sg => base_1+base_2+"уй" ;
                        Pl => base_1+base_2+"уйте"
                      } ;
        infinitive = base_1+base_2+"увати" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+base_2+"ував" ;
                                 Pl => base_1+base_2+"ували"
                               } ;
                       Fem => table {
                                Sg => base_1+base_2+"увала" ;
                                Pl => base_1+base_2+"ували"
                              } ;
                       Neuter => table {
                                   Sg => base_1+base_2+"увало" ;
                                   Pl => base_1+base_2+"ували"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => base_1+base_2+"ований"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV146"
  } ;

mkV147 : Str -> V ;
mkV147 base =
  case base of {
    base_1+"нути"+base_2@(?+?) => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"нути"+base_2 ;
                                                Pl => nonExist
                                              } ;
                                        P2 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              } ;
                                        P3 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"нути"+base_2 ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"нім"+base_2 ;
        imperative2 = table {
                        Sg => base_1+"ни"+base_2 ;
                        Pl => base_1+"ніть"+base_2
                      } ;
        infinitive = base_1+"нути"+base_2 ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"нув"+base_2 ;
                                 Pl => base_1+"ли"+base_2
                               } ;
                       Fem => table {
                                Sg => base_1+"ла"+base_2 ;
                                Pl => base_1+"ли"+base_2
                              } ;
                       Neuter => table {
                                   Sg => base_1+"ло"+base_2 ;
                                   Pl => base_1+"ли"+base_2
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV147"
  } ;

mkV148 : Str -> V ;
mkV148 base =
  case base of {
    base_1+base_2@(?+?+?+?+?)+"увати" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+base_2+"увати" ;
                                                Pl => base_1+"удемо б"+base_2+"увати"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"удеш б"+base_2+"увати" ;
                                                Pl => base_1+"удете б"+base_2+"увати"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"уде б"+base_2+"увати" ;
                                                Pl => base_1+"удуть б"+base_2+"увати"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+base_2+"уймо" ;
        imperative2 = table {
                        Sg => base_1+base_2+"уй" ;
                        Pl => base_1+base_2+"уйте"
                      } ;
        infinitive = base_1+base_2+"увати" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+base_2+"ував" ;
                                 Pl => base_1+base_2+"ували"
                               } ;
                       Fem => table {
                                Sg => base_1+base_2+"увала" ;
                                Pl => base_1+base_2+"ували"
                              } ;
                       Neuter => table {
                                   Sg => base_1+base_2+"увало" ;
                                   Pl => base_1+base_2+"ували"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => base_1+base_2+"ований"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV148"
  } ;

mkV149 : Str -> V ;
mkV149 base =
  case base of {
    base_1+"нути" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"нути" ;
                                                Pl => nonExist
                                              } ;
                                        P2 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              } ;
                                        P3 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              }
                                      }
                             } ;
                   Perf => { Past = base_1+"блий" ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"нути" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"ньмо" ;
        imperative2 = table {
                        Sg => base_1+"нь" ;
                        Pl => base_1+"ньте"
                      } ;
        infinitive = base_1+"нути" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"нув" ;
                                 Pl => base_1+"нули"
                               } ;
                       Fem => table {
                                Sg => base_1+"нула" ;
                                Pl => base_1+"нули"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"нуло" ;
                                   Pl => base_1+"нули"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV149"
  } ;

mkV150 : Str -> V ;
mkV150 base =
  case base of {
    "с"+base_1+"е"+base_2@?+"ти" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => "с"+base_1+"е"+base_2+"ти" ;
                                                Pl => nonExist
                                              } ;
                                        P2 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              } ;
                                        P3 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => "с"+base_1+"е"+base_2+"ти" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = "зі"+base_1+base_2+"ім" ;
        imperative2 = table {
                        Sg => "зі"+base_1+base_2+"и" ;
                        Pl => "зі"+base_1+base_2+"іть"
                      } ;
        infinitive = "с"+base_1+"е"+base_2+"ти" ;
        participle = table {
                       Masc => table {
                                 Sg => "с"+base_1+"е"+base_2 ;
                                 Pl => "с"+base_1+"е"+base_2+"ли"
                               } ;
                       Fem => table {
                                Sg => "с"+base_1+"е"+base_2+"ла" ;
                                Pl => "с"+base_1+"е"+base_2+"ли"
                              } ;
                       Neuter => table {
                                   Sg => "с"+base_1+"е"+base_2+"ло" ;
                                   Pl => "с"+base_1+"е"+base_2+"ли"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => "с"+base_1+"е"+base_2+"тий"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV150"
  } ;

mkV151 : Str -> V ;
mkV151 base =
  case base of {
    base_1+"з"+base_2@?+"ити" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"з"+base_2+"ити" ;
                                                Pl => nonExist
                                              } ;
                                        P2 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              } ;
                                        P3 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"з"+base_2+"ити" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"з"+base_2+"ім" ;
        imperative2 = table {
                        Sg => base_1+"з"+base_2+"и" ;
                        Pl => base_1+"з"+base_2+"іть"
                      } ;
        infinitive = base_1+"з"+base_2+"ити" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"з"+base_2+"ив" ;
                                 Pl => base_1+"з"+base_2+"или"
                               } ;
                       Fem => table {
                                Sg => base_1+"з"+base_2+"ила" ;
                                Pl => base_1+"з"+base_2+"или"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"з"+base_2+"ило" ;
                                   Pl => base_1+"з"+base_2+"или"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"ж"+base_2+"жений"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV151"
  } ;

mkV152 : Str -> V ;
mkV152 base =
  case base of {
    base_1+"іг"+base_2@?+"ати" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"іг"+base_2+"ати" ;
                                                Pl => nonExist
                                              } ;
                                        P2 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              } ;
                                        P3 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"іг"+base_2+"ати" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"же"+base_2+"ім" ;
        imperative2 = table {
                        Sg => base_1+"же"+base_2+"и" ;
                        Pl => base_1+"же"+base_2+"іть"
                      } ;
        infinitive = base_1+"іг"+base_2+"ати" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"іг"+base_2+"ав" ;
                                 Pl => base_1+"іг"+base_2+"али"
                               } ;
                       Fem => table {
                                Sg => base_1+"іг"+base_2+"ала" ;
                                Pl => base_1+"іг"+base_2+"али"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"іг"+base_2+"ало" ;
                                   Pl => base_1+"іг"+base_2+"али"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"іг"+base_2+"аний"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV152"
  } ;

mkV153 : Str -> V ;
mkV153 base =
  case base of {
    base_1+base_2@?+"атис"+base_3@? => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+base_2+"атис"+base_3 ;
                                                Pl => nonExist
                                              } ;
                                        P2 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              } ;
                                        P3 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+base_2+"атис"+base_3 ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"шім"+base_2+base_3 ;
        imperative2 = table {
                        Sg => base_1+"ши"+base_2+base_3 ;
                        Pl => base_1+"шіть"+base_2+base_3
                      } ;
        infinitive = base_1+base_2+"атис"+base_3 ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+base_2+"авс"+base_3 ;
                                 Pl => base_1+base_2+"алис"+base_3
                               } ;
                       Fem => table {
                                Sg => base_1+base_2+"алас"+base_3 ;
                                Pl => base_1+base_2+"алис"+base_3
                              } ;
                       Neuter => table {
                                   Sg => base_1+base_2+"алос"+base_3 ;
                                   Pl => base_1+base_2+"алис"+base_3
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV153"
  } ;

mkV154 : Str -> V ;
mkV154 base =
  case base of {
    base_1+"у"+base_2@?+"ати"+base_3@(?+?) => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"у"+base_2+"ати"+base_3 ;
                                                Pl => nonExist
                                              } ;
                                        P2 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              } ;
                                        P3 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"о"+base_2+"увати"+base_3 ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"о"+base_2+"уймо"+base_3 ;
        imperative2 = table {
                        Sg => base_1+"о"+base_2+"уй"+base_3 ;
                        Pl => base_1+"о"+base_2+"уйте"+base_3
                      } ;
        infinitive = base_1+"у"+base_2+"ати"+base_3 ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"овува"+base_2+base_3 ;
                                 Pl => base_1+"о"+base_2+"ували"+base_3
                               } ;
                       Fem => table {
                                Sg => base_1+"о"+base_2+"увала"+base_3 ;
                                Pl => base_1+"о"+base_2+"ували"+base_3
                              } ;
                       Neuter => table {
                                   Sg => base_1+"о"+base_2+"увало"+base_3 ;
                                   Pl => base_1+"о"+base_2+"ували"+base_3
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV154"
  } ;

mkV155 : Str -> V ;
mkV155 base =
  case base of {
    base_1+"ти"+base_2@(?+?) => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"ти"+base_2 ;
                                                Pl => nonExist
                                              } ;
                                        P2 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              } ;
                                        P3 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"ти"+base_2 ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"ім"+base_2 ;
        imperative2 = table {
                        Sg => base_1+"и"+base_2 ;
                        Pl => base_1+"іть"+base_2
                      } ;
        infinitive = base_1+"ти"+base_2 ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+base_2 ;
                                 Pl => base_1+"ли"+base_2
                               } ;
                       Fem => table {
                                Sg => base_1+"ла"+base_2 ;
                                Pl => base_1+"ли"+base_2
                              } ;
                       Neuter => table {
                                   Sg => base_1+"ло"+base_2 ;
                                   Pl => base_1+"ли"+base_2
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV155"
  } ;

mkV156 : Str -> V ;
mkV156 base =
  case base of {
    base_1+"їти"+base_2@(?+?) => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"їти"+base_2 ;
                                                Pl => base_1+"їм"+base_2
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"їш"+base_2 ;
                                                Pl => base_1+"їте"+base_2
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"їть"+base_2 ;
                                                Pl => base_1+"ять"+base_2
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"їти"+base_2 ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"ймо"+base_2 ;
        imperative2 = table {
                        Sg => base_1+"й"+base_2 ;
                        Pl => base_1+"йте"+base_2
                      } ;
        infinitive = base_1+"їти"+base_2 ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"їв"+base_2 ;
                                 Pl => base_1+"їли"+base_2
                               } ;
                       Fem => table {
                                Sg => base_1+"їла"+base_2 ;
                                Pl => base_1+"їли"+base_2
                              } ;
                       Neuter => table {
                                   Sg => base_1+"їло"+base_2 ;
                                   Pl => base_1+"їли"+base_2
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV156"
  } ;

mkV157 : Str -> V ;
mkV157 base =
  case base of {
    base_1+"ювати" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"ювати" ;
                                                Pl => base_1+"юєм"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"юєш" ;
                                                Pl => base_1+"юєте"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"ює" ;
                                                Pl => base_1+"юють"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"юймо" ;
        imperative2 = table {
                        Sg => base_1+"юй" ;
                        Pl => base_1+"юйте"
                      } ;
        infinitive = base_1+"ювати" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"ював" ;
                                 Pl => base_1+"ювали"
                               } ;
                       Fem => table {
                                Sg => base_1+"ювала" ;
                                Pl => base_1+"ювали"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"ювало" ;
                                   Pl => base_1+"ювали"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => base_1+"йований"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV157"
  } ;

mkV158 : Str -> V ;
mkV158 base =
  case base of {
    base_1+"ти" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"ти" ;
                                                Pl => nonExist
                                              } ;
                                        P2 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"ть" ;
                                                Pl => nonExist
                                              }
                                      }
                             } ;
                   Perf => { Past = base_1+"лий" ; --guessed
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"ти" ; --guessed
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"дьмо" ; --guessed
        imperative2 = table {
                        Sg => base_1+"дь" ; --guessed
                        Pl => base_1+"дьте" --guessed
                      } ;
        infinitive = base_1+"ти" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"в" ; --guessed
                                 Pl => base_1+"ли" --guessed
                               } ;
                       Fem => table {
                                Sg => base_1+"ла" ; --guessed
                                Pl => base_1+"ли" --guessed
                              } ;
                       Neuter => table {
                                   Sg => base_1+"ло" ;
                                   Pl => base_1+"ли" --guessed
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"тий" --guessed
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV158"
  } ;

mkV159 : Str -> V ;
mkV159 base =
  case base of {
    base_1+"вати"+base_2@(?+?) => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"вати"+base_2 ;
                                                Pl => "будемо "+base_1+"вати"+base_2
                                              } ;
                                        P2 => table {
                                                Sg => "будеш "+base_1+"вати"+base_2 ;
                                                Pl => "будете "+base_1+"вати"+base_2
                                              } ;
                                        P3 => table {
                                                Sg => "буде "+base_1+"вати"+base_2 ;
                                                Pl => "будуть "+base_1+"вати"+base_2
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"ймо"+base_2 ;
        imperative2 = table {
                        Sg => base_1+"й"+base_2 ;
                        Pl => base_1+"йте"+base_2
                      } ;
        infinitive = base_1+"вати"+base_2 ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"вав"+base_2 ;
                                 Pl => base_1+"вали"+base_2
                               } ;
                       Fem => table {
                                Sg => base_1+"вала"+base_2 ;
                                Pl => base_1+"вали"+base_2
                              } ;
                       Neuter => table {
                                   Sg => base_1+"вало"+base_2 ;
                                   Pl => base_1+"вали"+base_2
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV159"
  } ;

mkV160 : Str -> V ;
mkV160 base =
  case base of {
    "с"+base_1+"ити"+base_2@(?+?) => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => "с"+base_1+"ити"+base_2 ;
                                                Pl => nonExist
                                              } ;
                                        P2 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              } ;
                                        P3 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => "c"+base_1+"ити"+base_2 ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = "c"+base_1+"ім"+base_2 ;
        imperative2 = table {
                        Sg => "c"+base_1+"и"+base_2 ;
                        Pl => "c"+base_1+"іть"+base_2
                      } ;
        infinitive = "с"+base_1+"ити"+base_2 ;
        participle = table {
                       Masc => table {
                                 Sg => "c"+base_1+"ив"+base_2 ;
                                 Pl => "c"+base_1+"или"+base_2
                               } ;
                       Fem => table {
                                Sg => "c"+base_1+"ила"+base_2 ;
                                Pl => "c"+base_1+"или"+base_2
                              } ;
                       Neuter => table {
                                   Sg => "c"+base_1+"ило"+base_2 ;
                                   Pl => "c"+base_1+"или"+base_2
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV160"
  } ;

mkV161 : Str -> V ;
mkV161 base =
  case base of {
    base_1+"ікти" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"ікти" ;
                                                Pl => nonExist
                                              } ;
                                        P2 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              } ;
                                        P3 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"ікти" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"очім" ;
        imperative2 = table {
                        Sg => base_1+"очи" ;
                        Pl => base_1+"очіть"
                      } ;
        infinitive = base_1+"ікти" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"ок" ;
                                 Pl => base_1+"окли"
                               } ;
                       Fem => table {
                                Sg => base_1+"окла" ;
                                Pl => base_1+"окли"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"окло" ;
                                   Pl => base_1+"окли"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV161"
  } ;

mkV162 : Str -> V ;
mkV162 base =
  case base of {
    base_1+"огти"+base_2@(?+?) => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"огти"+base_2 ;
                                                Pl => nonExist
                                              } ;
                                        P2 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              } ;
                                        P3 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"огти"+base_2 ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"ожім"+base_2 ;
        imperative2 = table {
                        Sg => base_1+"ожи"+base_2 ;
                        Pl => base_1+"ожіть"+base_2
                      } ;
        infinitive = base_1+"огти"+base_2 ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"іг"+base_2 ;
                                 Pl => base_1+"огли"+base_2
                               } ;
                       Fem => table {
                                Sg => base_1+"огла"+base_2 ;
                                Pl => base_1+"огли"+base_2
                              } ;
                       Neuter => table {
                                   Sg => base_1+"огло"+base_2 ;
                                   Pl => base_1+"огли"+base_2
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV162"
  } ;

mkV163 : Str -> V ;
mkV163 base =
  case base of {
    base_1+"о"+base_2@?+"ти"+base_3@(?+?) => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"о"+base_2+"ти"+base_3 ;
                                                Pl => nonExist
                                              } ;
                                        P2 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              } ;
                                        P3 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"о"+base_2+"ти"+base_3 ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"о"+base_2+"тім"+base_3 ;
        imperative2 = table {
                        Sg => base_1+"о"+base_2+"ти"+base_3 ;
                        Pl => base_1+"о"+base_2+"тіть"+base_3
                      } ;
        infinitive = base_1+"о"+base_2+"ти"+base_3 ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"і"+base_2+base_3 ;
                                 Pl => base_1+"о"+base_2+"ли"+base_3
                               } ;
                       Fem => table {
                                Sg => base_1+"о"+base_2+"ла"+base_3 ;
                                Pl => base_1+"о"+base_2+"ли"+base_3
                              } ;
                       Neuter => table {
                                   Sg => base_1+"о"+base_2+"ло"+base_3 ;
                                   Pl => base_1+"о"+base_2+"ли"+base_3
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV163"
  } ;

mkV164 : Str -> V ;
mkV164 base =
  case base of {
    base_1+"ти" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"ти" ;
                                                Pl => base_1+"ем"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"еш" ;
                                                Pl => base_1+"ете"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"е" ;
                                                Pl => base_1+"уть"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"ти" ; --guessed
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"ім" ;
        imperative2 = table {
                        Sg => base_1+"и" ;
                        Pl => base_1+"іть"
                      } ;
        infinitive = base_1+"ти" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1 ;
                                 Pl => base_1+"ли"
                               } ;
                       Fem => table {
                                Sg => base_1+"ла" ;
                                Pl => base_1+"ли"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"ло" ;
                                   Pl => base_1+"ли"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => base_1+"тий"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"тий" --guessed
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV164"
  } ;

mkV165 : Str -> V ;
mkV165 base =
  case base of {
    base_1+"ти" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"ти" ;
                                                Pl => nonExist
                                              } ;
                                        P2 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"є" ; --guessed
                                                Pl => base_1+"ють" --guessed
                                              }
                                      }
                             } ;
                   Perf => { Past = base_1+"лий" ; --guessed
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"ти" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"дьмо" ;
        imperative2 = table {
                        Sg => base_1+"дь" ;
                        Pl => base_1+"дьте"
                      } ;
        infinitive = base_1+"ти" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"в" ;
                                 Pl => base_1+"ли"
                               } ;
                       Fem => table {
                                Sg => base_1+"ла" ;
                                Pl => base_1+"ли"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"ло" ;
                                   Pl => base_1+"ли"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"тий" --guessed
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV165"
  } ;

mkV166 : Str -> V ;
mkV166 base =
  case base of {
    base_1+"ити"+base_2@(?+?) => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"ити"+base_2 ;
                                                Pl => base_1+"им"+base_2
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"иш"+base_2 ;
                                                Pl => base_1+"ите"+base_2
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"ить"+base_2 ;
                                                Pl => base_1+"ать"+base_2
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"ім"+base_2 ;
        imperative2 = table {
                        Sg => base_1+"и"+base_2 ;
                        Pl => base_1+"іть"+base_2
                      } ;
        infinitive = base_1+"ити"+base_2 ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"ив"+base_2 ;
                                 Pl => base_1+"или"+base_2
                               } ;
                       Fem => table {
                                Sg => base_1+"ила"+base_2 ;
                                Pl => base_1+"или"+base_2
                              } ;
                       Neuter => table {
                                   Sg => base_1+"ило"+base_2 ;
                                   Pl => base_1+"или"+base_2
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV166"
  } ;

mkV167 : Str -> V ;
mkV167 base =
  case base of {
    base_1+"огти" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"огти" ;
                                                Pl => nonExist
                                              } ;
                                        P2 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              } ;
                                        P3 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"огти" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"ожмо" ;
        imperative2 = table {
                        Sg => base_1+"ож" ;
                        Pl => base_1+"ожте"
                      } ;
        infinitive = base_1+"огти" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"іг" ;
                                 Pl => base_1+"огли"
                               } ;
                       Fem => table {
                                Sg => base_1+"огла" ;
                                Pl => base_1+"огли"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"огло" ;
                                   Pl => base_1+"огли"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV167"
  } ;

mkV168 : Str -> V ;
mkV168 base =
  case base of {
    base_1+"нути" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"нути" ;
                                                Pl => nonExist
                                              } ;
                                        P2 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              } ;
                                        P3 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              }
                                      }
                             } ;
                   Perf => { Past = base_1+"лий" ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"нути" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"нім" ;
        imperative2 = table {
                        Sg => base_1+"ни" ;
                        Pl => base_1+"ніть"
                      } ;
        infinitive = base_1+"нути" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"нув" ;
                                 Pl => base_1+"нули"
                               } ;
                       Fem => table {
                                Sg => base_1+"нула" ;
                                Pl => base_1+"нули"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"нуло" ;
                                   Pl => base_1+"нули"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV168"
  } ;

mkV169 : Str -> V ;
mkV169 base =
  case base of {
    base_1+"ти"+base_2@(?+?) => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"ти"+base_2 ;
                                                Pl => nonExist
                                              } ;
                                        P2 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              } ;
                                        P3 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"ти"+base_2 ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"нім"+base_2 ;
        imperative2 = table {
                        Sg => base_1+"ни"+base_2 ;
                        Pl => base_1+"ніть"+base_2
                      } ;
        infinitive = base_1+"ти"+base_2 ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"нув"+base_2 ;
                                 Pl => base_1+"нули"+base_2
                               } ;
                       Fem => table {
                                Sg => base_1+"нула"+base_2 ;
                                Pl => base_1+"нули"+base_2
                              } ;
                       Neuter => table {
                                   Sg => base_1+"нуло"+base_2 ;
                                   Pl => base_1+"нули"+base_2
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV169"
  } ;

mkV170 : Str -> V ;
mkV170 base =
  case base of {
    base_1+"сти"+base_2@(?+?) => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"сти"+base_2 ;
                                                Pl => nonExist
                                              } ;
                                        P2 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              } ;
                                        P3 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"сти"+base_2 ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"дім"+base_2 ;
        imperative2 = table {
                        Sg => base_1+"ди"+base_2 ;
                        Pl => base_1+"діть"+base_2
                      } ;
        infinitive = base_1+"сти"+base_2 ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"в"+base_2 ;
                                 Pl => base_1+"ли"+base_2
                               } ;
                       Fem => table {
                                Sg => base_1+"ла"+base_2 ;
                                Pl => base_1+"ли"+base_2
                              } ;
                       Neuter => table {
                                   Sg => base_1+"ло"+base_2 ;
                                   Pl => base_1+"ли"+base_2
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV170"
  } ;

mkV171 : Str -> V ;
mkV171 base =
  case base of {
    base_1+"ити"+base_2@(?+?) => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"ити"+base_2 ;
                                                Pl => nonExist
                                              } ;
                                        P2 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"яти"+base_2 ;
                                                Pl => nonExist
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"ити"+base_2 ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"ім"+base_2 ;
        imperative2 = table {
                        Sg => base_1+"и"+base_2 ;
                        Pl => base_1+"іть"+base_2
                      } ;
        infinitive = base_1+"ити"+base_2 ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"ив"+base_2 ;
                                 Pl => base_1+"или"+base_2
                               } ;
                       Fem => table {
                                Sg => base_1+"ила"+base_2 ;
                                Pl => base_1+"или"+base_2
                              } ;
                       Neuter => table {
                                   Sg => base_1+"ило"+base_2 ;
                                   Pl => base_1+"или"+base_2
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV171"
  } ;

mkV172 : Str -> V ;
mkV172 base =
  case base of {
    base_1+"тіти" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"тіти" ;
                                                Pl => base_1+"очем"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"очеш" ;
                                                Pl => base_1+"очете"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"оче" ;
                                                Pl => base_1+"очуть"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"отім" ;
        imperative2 = table {
                        Sg => base_1+"оти" ;
                        Pl => base_1+"отіть"
                      } ;
        infinitive = base_1+"тіти" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"тів" ;
                                 Pl => base_1+"тіли"
                               } ;
                       Fem => table {
                                Sg => base_1+"тіла" ;
                                Pl => base_1+"тіли"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"тіло" ;
                                   Pl => base_1+"тіли"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV172"
  } ;

mkV173 : Str -> V ;
mkV173 base =
  case base of {
    base_1+"зати"+base_2@(?+?) => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"зати"+base_2 ;
                                                Pl => nonExist
                                              } ;
                                        P2 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              } ;
                                        P3 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"зати"+base_2 ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"жім"+base_2 ;
        imperative2 = table {
                        Sg => base_1+"жи"+base_2 ;
                        Pl => base_1+"жіть"+base_2
                      } ;
        infinitive = base_1+"зати"+base_2 ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"зав"+base_2 ;
                                 Pl => base_1+"зали"+base_2
                               } ;
                       Fem => table {
                                Sg => base_1+"зала"+base_2 ;
                                Pl => base_1+"зали"+base_2
                              } ;
                       Neuter => table {
                                   Sg => base_1+"зало"+base_2 ;
                                   Pl => base_1+"зали"+base_2
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV173"
  } ;

mkV174 : Str -> V ;
mkV174 base =
  case base of {
    base_1+"ати" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"ати" ;
                                                Pl => base_1+"аєм"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"аєш" ;
                                                Pl => base_1+"аєте"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"ає" ;
                                                Pl => base_1+"ають"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"нути" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"аймо" ;
        imperative2 = table {
                        Sg => base_1+"ай" ;
                        Pl => base_1+"айте"
                      } ;
        infinitive = base_1+"ати" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"ав" ;
                                 Pl => base_1+"али"
                               } ;
                       Fem => table {
                                Sg => base_1+"ала" ;
                                Pl => base_1+"али"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"ало" ;
                                   Pl => base_1+"али"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV174"
  } ;

mkV175 : Str -> V ;
mkV175 base =
  case base of {
    base_1+"ягти" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"ягти" ;
                                                Pl => base_1+"яжем"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"яжеш" ;
                                                Pl => base_1+"яжете"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"яже" ;
                                                Pl => base_1+"яжуть"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"ягти" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"яжім" ;
        imperative2 = table {
                        Sg => base_1+"яжи" ;
                        Pl => base_1+"яжіть"
                      } ;
        infinitive = base_1+"ягти" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"іг" ;
                                 Pl => base_1+"ягли"
                               } ;
                       Fem => table {
                                Sg => base_1+"ягла" ;
                                Pl => base_1+"ягли"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"ягло" ;
                                   Pl => base_1+"ягли"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => base_1+"яжений"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"яжений"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV175"
  } ;

mkV176 : Str -> V ;
mkV176 base =
  case base of {
    base_1+"і"+base_2@?+base_3@?+"ати" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"і"+base_2+base_3+"ати" ;
                                                Pl => nonExist
                                              } ;
                                        P2 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              } ;
                                        P3 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"і"+base_2+base_3+"ати" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+base_2+"те"+base_3+"ім" ;
        imperative2 = table {
                        Sg => base_1+base_2+"те"+base_3+"и" ;
                        Pl => base_1+base_2+"те"+base_3+"іть"
                      } ;
        infinitive = base_1+"і"+base_2+base_3+"ати" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"і"+base_2+base_3+"ав" ;
                                 Pl => base_1+"і"+base_2+base_3+"али"
                               } ;
                       Fem => table {
                                Sg => base_1+"і"+base_2+base_3+"ала" ;
                                Pl => base_1+"і"+base_2+base_3+"али"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"і"+base_2+base_3+"ало" ;
                                   Pl => base_1+"і"+base_2+base_3+"али"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"і"+base_2+base_3+"аний"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV176"
  } ;

mkV177 : Str -> V ;
mkV177 base =
  case base of {
    base_1+"іти" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"іти" ;
                                                Pl => nonExist
                                              } ;
                                        P2 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"ить" ;
                                                Pl => base_1+"ать"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"іти" ; --guessed
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"ьмо" ; --guessed
        imperative2 = table {
                        Sg => base_1+"ь" ; --guessed
                        Pl => base_1+"ьте" --guessed
                      } ;
        infinitive = base_1+"іти" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"ів" ;
                                 Pl => base_1+"іли"
                               } ;
                       Fem => table {
                                Sg => base_1+"іла" ;
                                Pl => base_1+"іли"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"іло" ;
                                   Pl => base_1+"іли"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"жений" --guessed
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV177"
  } ;

mkV178 : Str -> V ;
mkV178 base =
  case base of {
    base_1+"і"+base_2@?+base_3@?+"ати"+base_4@(?+?) => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"і"+base_2+base_3+"ати"+base_4 ;
                                                Pl => nonExist
                                              } ;
                                        P2 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              } ;
                                        P3 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"і"+base_2+base_3+"ати"+base_4 ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"о"+base_2+"е"+base_3+"ім"+base_4 ;
        imperative2 = table {
                        Sg => base_1+"о"+base_2+"е"+base_3+"и"+base_4 ;
                        Pl => base_1+"о"+base_2+"е"+base_3+"іть"+base_4
                      } ;
        infinitive = base_1+"і"+base_2+base_3+"ати"+base_4 ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"і"+base_2+base_3+"ав"+base_4 ;
                                 Pl => base_1+"і"+base_2+base_3+"али"+base_4
                               } ;
                       Fem => table {
                                Sg => base_1+"і"+base_2+base_3+"ала"+base_4 ;
                                Pl => base_1+"і"+base_2+base_3+"али"+base_4
                              } ;
                       Neuter => table {
                                   Sg => base_1+"і"+base_2+base_3+"ало"+base_4 ;
                                   Pl => base_1+"і"+base_2+base_3+"али"+base_4
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV178"
  } ;

mkV179 : Str -> V ;
mkV179 base =
  case base of {
    base_1+"яти"+base_2@(?+?) => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"яти"+base_2 ;
                                                Pl => nonExist
                                              } ;
                                        P2 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              } ;
                                        P3 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"яти"+base_2 ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"імім"+base_2 ;
        imperative2 = table {
                        Sg => base_1+"іми"+base_2 ;
                        Pl => base_1+"іміть"+base_2
                      } ;
        infinitive = base_1+"яти"+base_2 ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"яв"+base_2 ;
                                 Pl => base_1+"яли"+base_2
                               } ;
                       Fem => table {
                                Sg => base_1+"яла"+base_2 ;
                                Pl => base_1+"яли"+base_2
                              } ;
                       Neuter => table {
                                   Sg => base_1+"яло"+base_2 ;
                                   Pl => base_1+"яли"+base_2
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV179"
  } ;

mkV180 : Str -> V ;
mkV180 base =
  case base of {
    base_1+"ити"+base_2@(?+?) => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"ити"+base_2 ;
                                                Pl => base_1+"им"+base_2
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"иш"+base_2 ;
                                                Pl => base_1+"ите"+base_2
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"ить"+base_2 ;
                                                Pl => base_1+"ять"+base_2
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => "зо"+base_1+"ити"+base_2 ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"мо"+base_2 ;
        imperative2 = table {
                        Sg => base_1+base_2 ;
                        Pl => base_1+"те"+base_2
                      } ;
        infinitive = base_1+"ити"+base_2 ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"ив"+base_2 ;
                                 Pl => base_1+"или"+base_2
                               } ;
                       Fem => table {
                                Sg => base_1+"ила"+base_2 ;
                                Pl => base_1+"или"+base_2
                              } ;
                       Neuter => table {
                                   Sg => base_1+"ило"+base_2 ;
                                   Pl => base_1+"или"+base_2
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV180"
  } ;

mkV181 : Str -> V ;
mkV181 base =
  case base of {
    base_1+"нути" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"нути" ;
                                                Pl => base_1+"нем"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"неш" ;
                                                Pl => base_1+"нете"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"не" ;
                                                Pl => base_1+"нуть"
                                              }
                                      }
                             } ;
                   Perf => { Past = base_1+"лий" ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"нути" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"ньмо" ;
        imperative2 = table {
                        Sg => base_1+"нь" ;
                        Pl => base_1+"ньте"
                      } ;
        infinitive = base_1+"нути" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"в" ;
                                 Pl => base_1+"ли"
                               } ;
                       Fem => table {
                                Sg => base_1+"ла" ;
                                Pl => base_1+"ли"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"ло" ;
                                   Pl => base_1+"ли"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV181"
  } ;

mkV182 : Str -> V ;
mkV182 base =
  case base of {
    "м"+base_1+"лити" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => "м"+base_1+"лити" ;
                                                Pl => "н"+base_1+"жем"
                                              } ;
                                        P2 => table {
                                                Sg => "н"+base_1+"жеш" ;
                                                Pl => "н"+base_1+"жете"
                                              } ;
                                        P3 => table {
                                                Sg => "н"+base_1+"же" ;
                                                Pl => "н"+base_1+"жуть"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = "н"+base_1+"жім" ;
        imperative2 = table {
                        Sg => "н"+base_1+"жи" ;
                        Pl => "н"+base_1+"жіть"
                      } ;
        infinitive = "м"+base_1+"лити" ;
        participle = table {
                       Masc => table {
                                 Sg => "н"+base_1+"зав" ;
                                 Pl => "н"+base_1+"зали"
                               } ;
                       Fem => table {
                                Sg => "н"+base_1+"зала" ;
                                Pl => "н"+base_1+"зали"
                              } ;
                       Neuter => table {
                                   Sg => "н"+base_1+"зало" ;
                                   Pl => "н"+base_1+"зали"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => "н"+base_1+"заний"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV182"
  } ;

mkV183 : Str -> V ;
mkV183 base =
  case base of {
    base_1+"е"+base_2@?+"ти"+base_3@(?+?) => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"е"+base_2+"ти"+base_3 ;
                                                Pl => nonExist
                                              } ;
                                        P2 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              } ;
                                        P3 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"е"+base_2+"ти"+base_3 ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"е"+base_2+"ім"+base_3 ;
        imperative2 = table {
                        Sg => base_1+"е"+base_2+"и"+base_3 ;
                        Pl => base_1+"е"+base_2+"іть"+base_3
                      } ;
        infinitive = base_1+"е"+base_2+"ти"+base_3 ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"і"+base_2+base_3 ;
                                 Pl => base_1+"е"+base_2+"ли"+base_3
                               } ;
                       Fem => table {
                                Sg => base_1+"е"+base_2+"ла"+base_3 ;
                                Pl => base_1+"е"+base_2+"ли"+base_3
                              } ;
                       Neuter => table {
                                   Sg => base_1+"е"+base_2+"ло"+base_3 ;
                                   Pl => base_1+"е"+base_2+"ли"+base_3
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV183"
  } ;

mkV184 : Str -> V ;
mkV184 base =
  case base of {
    base_1+"ти"+base_2@(?+?) => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"ти"+base_2 ;
                                                Pl => base_1+"нем"+base_2
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"неш"+base_2 ;
                                                Pl => base_1+"нете"+base_2
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"неть"+base_2 ;
                                                Pl => base_1+"нуть"+base_2
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"ти"+base_2 ; --guessed
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"нім"+base_2 ;
        imperative2 = table {
                        Sg => base_1+"ни"+base_2 ;
                        Pl => base_1+"ніть"+base_2
                      } ;
        infinitive = base_1+"ти"+base_2 ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+base_2 ;
                                 Pl => base_1+"ли"+base_2
                               } ;
                       Fem => table {
                                Sg => base_1+"ла"+base_2 ;
                                Pl => base_1+"ли"+base_2
                              } ;
                       Neuter => table {
                                   Sg => base_1+"ло"+base_2 ;
                                   Pl => base_1+"ли"+base_2
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV184"
  } ;

mkV185 : Str -> V ;
mkV185 base =
  case base of {
    base_1+"сти" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"сти" ;
                                                Pl => base_1+"тем"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"теш" ;
                                                Pl => base_1+"тете"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"те" ;
                                                Pl => base_1+"туть"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"сти" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"тім" ;
        imperative2 = table {
                        Sg => base_1+"ти" ;
                        Pl => base_1+"тіть"
                      } ;
        infinitive = base_1+"сти" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"в" ;
                                 Pl => base_1+"ли"
                               } ;
                       Fem => table {
                                Sg => base_1+"ла" ;
                                Pl => base_1+"ли"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"ло" ;
                                   Pl => base_1+"ли"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV185"
  } ;

mkV186 : Str -> V ;
mkV186 base =
  case base of {
    base_1+"ти"+base_2@(?+?) => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"ти"+base_2 ;
                                                Pl => base_1+"нем"+base_2 --guessed
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"неш"+base_2 ; --guessed
                                                Pl => base_1+"нете"+base_2 --guessed
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"неть"+base_2 ; --guessed
                                                Pl => base_1+"нуть"+base_2 --guessed
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"ти"+base_2 ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"ім"+base_2 ; --guessed
        imperative2 = table {
                        Sg => base_1+"и"+base_2 ; --guessed
                        Pl => base_1+"іть"+base_2 --guessed
                      } ;
        infinitive = base_1+"ти"+base_2 ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+base_2 ;
                                 Pl => base_1+"ли"+base_2
                               } ;
                       Fem => table {
                                Sg => base_1+"ла"+base_2 ;
                                Pl => base_1+"ли"+base_2
                              } ;
                       Neuter => table {
                                   Sg => base_1+"ло"+base_2 ;
                                   Pl => base_1+"ли"+base_2
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV186"
  } ;

mkV187 : Str -> V ;
mkV187 base =
  case base of {
    base_1+"ати"+base_2@(?+?) => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"ати"+base_2 ;
                                                Pl => nonExist
                                              } ;
                                        P2 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              } ;
                                        P3 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"ати"+base_2 ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"мо"+base_2 ;
        imperative2 = table {
                        Sg => base_1+base_2 ;
                        Pl => base_1+"те"+base_2
                      } ;
        infinitive = base_1+"ати"+base_2 ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"ав"+base_2 ;
                                 Pl => base_1+"али"+base_2
                               } ;
                       Fem => table {
                                Sg => base_1+"ала"+base_2 ;
                                Pl => base_1+"али"+base_2
                              } ;
                       Neuter => table {
                                   Sg => base_1+"ало"+base_2 ;
                                   Pl => base_1+"али"+base_2
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV187"
  } ;

mkV188 : Str -> V ;
mkV188 base =
  case base of {
    base_1+"тати" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"тати" ;
                                                Pl => base_1+"чем"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"чеш" ;
                                                Pl => base_1+"чете"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"че" ;
                                                Pl => base_1+"чуть"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"чмо" ;
        imperative2 = table {
                        Sg => base_1+"ч" ;
                        Pl => base_1+"чте"
                      } ;
        infinitive = base_1+"тати" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"тав" ;
                                 Pl => base_1+"тали"
                               } ;
                       Fem => table {
                                Sg => base_1+"тала" ;
                                Pl => base_1+"тали"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"тало" ;
                                   Pl => base_1+"тали"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => base_1+"таний"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV188"
  } ;

mkV189 : Str -> V ;
mkV189 base =
  case base of {
    base_1+"кти" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"кти" ;
                                                Pl => base_1+"чем"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"чеш" ;
                                                Pl => base_1+"чете"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"че" ;
                                                Pl => base_1+"чуть"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"кти" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"чім" ;
        imperative2 = table {
                        Sg => base_1+"чи" ;
                        Pl => base_1+"чіть"
                      } ;
        infinitive = base_1+"кти" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"к" ;
                                 Pl => base_1+"кли"
                               } ;
                       Fem => table {
                                Sg => base_1+"кла" ;
                                Pl => base_1+"кли"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"кло" ;
                                   Pl => base_1+"кли"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => base_1+"чений"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"чений"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV189"
  } ;

mkV190 : Str -> V ;
mkV190 base =
  case base of {
    base_1+"ти" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"ти" ;
                                                Pl => base_1+"нем"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"неш" ;
                                                Pl => base_1+"нете"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"не" ;
                                                Pl => base_1+"нуть"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"нім" ;
        imperative2 = table {
                        Sg => base_1+"ни" ;
                        Pl => base_1+"ніть"
                      } ;
        infinitive = base_1+"ти" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"нув" ;
                                 Pl => base_1+"нули"
                               } ;
                       Fem => table {
                                Sg => base_1+"нула" ;
                                Pl => base_1+"нули"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"нуло" ;
                                   Pl => base_1+"нули"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => base_1+"нений"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV190"
  } ;

mkV191 : Str -> V ;
mkV191 base =
  case base of {
    base_1+"ести"+base_2@(?+?) => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"ести"+base_2 ;
                                                Pl => nonExist
                                              } ;
                                        P2 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              } ;
                                        P3 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"ести"+base_2 ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"едім"+base_2 ;
        imperative2 = table {
                        Sg => base_1+"еди"+base_2 ;
                        Pl => base_1+"едіть"+base_2
                      } ;
        infinitive = base_1+"ести"+base_2 ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"ів"+base_2 ;
                                 Pl => base_1+"ели"+base_2
                               } ;
                       Fem => table {
                                Sg => base_1+"ела"+base_2 ;
                                Pl => base_1+"ели"+base_2
                              } ;
                       Neuter => table {
                                   Sg => base_1+"ело"+base_2 ;
                                   Pl => base_1+"ели"+base_2
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV191"
  } ;

mkV192 : Str -> V ;
mkV192 base =
  case base of {
    base_1+"віти" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"ріти" ;
                                                Pl => base_1+"рим"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"риш" ;
                                                Pl => base_1+"рите"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"рить" ;
                                                Pl => base_1+"рять"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"рім" ;
        imperative2 = table {
                        Sg => base_1+"ри" ;
                        Pl => base_1+"ріть"
                      } ;
        infinitive = base_1+"віти" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"рів" ;
                                 Pl => base_1+"ріли"
                               } ;
                       Fem => table {
                                Sg => base_1+"ріла" ;
                                Pl => base_1+"ріли"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"ріло" ;
                                   Pl => base_1+"ріли"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV192"
  } ;

mkV193 : Str -> V ;
mkV193 base =
  case base of {
    base_1+"сти"+base_2@(?+?) => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"сти"+base_2 ;
                                                Pl => nonExist
                                              } ;
                                        P2 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              } ;
                                        P3 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"сти"+base_2 ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"жмо"+base_2 ;
        imperative2 = table {
                        Sg => base_1+"ж"+base_2 ;
                        Pl => base_1+"жте"+base_2
                      } ;
        infinitive = base_1+"сти"+base_2 ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"в"+base_2 ;
                                 Pl => base_1+"ли"+base_2
                               } ;
                       Fem => table {
                                Sg => base_1+"ла"+base_2 ;
                                Pl => base_1+"ли"+base_2
                              } ;
                       Neuter => table {
                                   Sg => base_1+"ло"+base_2 ;
                                   Pl => base_1+"ли"+base_2
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV193"
  } ;

mkV194 : Str -> V ;
mkV194 base =
  case base of {
    base_1+"ити" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"ити" ;
                                                Pl => "будемо "+base_1+"ити"
                                              } ;
                                        P2 => table {
                                                Sg => "будеш "+base_1+"ити" ;
                                                Pl => "будете "+base_1+"ити"
                                              } ;
                                        P3 => table {
                                                Sg => "буде "+base_1+"ити" ;
                                                Pl => "будуть "+base_1+"ити"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"ьмо" ;
        imperative2 = table {
                        Sg => base_1+"ь" ;
                        Pl => base_1+"ьте"
                      } ;
        infinitive = base_1+"ити" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"ив" ;
                                 Pl => base_1+"или"
                               } ;
                       Fem => table {
                                Sg => base_1+"ила" ;
                                Pl => base_1+"или"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"ило" ;
                                   Pl => base_1+"или"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV194"
  } ;

mkV195 : Str -> V ;
mkV195 base =
  case base of {
    base_1+"ти" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"ти" ;
                                                Pl => base_1+"ем"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"еш" ;
                                                Pl => base_1+"ете"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"е" ;
                                                Pl => base_1+"уть"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"ім" ;
        imperative2 = table {
                        Sg => base_1+"и" ;
                        Pl => base_1+"іть"
                      } ;
        infinitive = base_1+"ти" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"ів" ;
                                 Pl => base_1+"ли"
                               } ;
                       Fem => table {
                                Sg => base_1+"ла" ;
                                Pl => base_1+"ли"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"ло" ;
                                   Pl => base_1+"ли"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV195"
  } ;

mkV196 : Str -> V ;
mkV196 base =
  case base of {
    base_1+"іти" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"іти" ;
                                                Pl => base_1+"ем"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"еш" ;
                                                Pl => base_1+"ете"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"е" ;
                                                Pl => base_1+"уть"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"ім" ;
        imperative2 = table {
                        Sg => base_1+"и" ;
                        Pl => base_1+"іть"
                      } ;
        infinitive = base_1+"іти" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"ів" ;
                                 Pl => base_1+"іли"
                               } ;
                       Fem => table {
                                Sg => base_1+"іла" ;
                                Pl => base_1+"іли"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"іло" ;
                                   Pl => base_1+"іли"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV196"
  } ;

mkV197 : Str -> V ;
mkV197 base =
  case base of {
    "повилазити" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => "повилазити" ;
                                                Pl => "or collective subject representing all"
                                              } ;
                                        P2 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              } ;
                                        P3 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => "повилазити" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = "повилазьмо" ;
        imperative2 = table {
                        Sg => nonExist ;
                        Pl => "повилазьте"
                      } ;
        infinitive = "повилазити" ;
        participle = table {
                       Masc => table {
                                 Sg => "повилазив" ;
                                 Pl => "повилазили"
                               } ;
                       Fem => table {
                                Sg => "повилазила" ;
                                Pl => "повилазили"
                              } ;
                       Neuter => table {
                                   Sg => "повилазило" ;
                                   Pl => "повилазили"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV197"
  } ;

mkV198 : Str -> V ;
mkV198 base =
  case base of {
    base_1+base_2@?+"йняти" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+base_2+"йняти" ;
                                                Pl => nonExist
                                              } ;
                                        P2 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              } ;
                                        P3 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+base_2+"йняти" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"н"+base_2+"мім" ;
        imperative2 = table {
                        Sg => base_1+"н"+base_2+"ми" ;
                        Pl => base_1+"н"+base_2+"міть"
                      } ;
        infinitive = base_1+base_2+"йняти" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+base_2+"йняв" ;
                                 Pl => base_1+base_2+"йняли"
                               } ;
                       Fem => table {
                                Sg => base_1+base_2+"йняла" ;
                                Pl => base_1+base_2+"йняли"
                              } ;
                       Neuter => table {
                                   Sg => base_1+base_2+"йняло" ;
                                   Pl => base_1+base_2+"йняли"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV198"
  } ;

mkV199 : Str -> V ;
mkV199 base =
  case base of {
    base_1+"у"+base_2@(?+?)+"ти" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"у"+base_2+"ти" ;
                                                Pl => nonExist
                                              } ;
                                        P2 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              } ;
                                        P3 => table {
                                                Sg => "буде "+base_1+"у"+base_2+"ти" ;
                                                Pl => "будуть "+base_1+"у"+base_2+"ти"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = nonExist ;
        imperative2 = table {
                        Sg => nonExist ;
                        Pl => nonExist
                      } ;
        infinitive = base_1+"у"+base_2+"ти" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"у"+base_2+"в" ;
                                 Pl => base_1+"у"+base_2+"ли"
                               } ;
                       Fem => table {
                                Sg => base_1+"у"+base_2+"ла" ;
                                Pl => base_1+"у"+base_2+"ли"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"у"+base_2+"ло" ;
                                   Pl => base_1+"у"+base_2+"ли"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => base_1+"о"+base_2+"ний"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV199"
  } ;

mkV200 : Str -> V ;
mkV200 base =
  case base of {
    base_1+"ймати"+base_2@(?+?) => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"ймати"+base_2 ;
                                                Pl => base_1+"ймаєм"+base_2
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"ймаєш"+base_2 ;
                                                Pl => base_1+"ймаєте"+base_2
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"ймаєть"+base_2 ;
                                                Pl => base_1+"ймають"+base_2
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"няти"+base_2 ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"ймаймо"+base_2 ;
        imperative2 = table {
                        Sg => base_1+"ймай"+base_2 ;
                        Pl => base_1+"ймайте"+base_2
                      } ;
        infinitive = base_1+"ймати"+base_2 ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"ймав"+base_2 ;
                                 Pl => base_1+"ймали"+base_2
                               } ;
                       Fem => table {
                                Sg => base_1+"ймала"+base_2 ;
                                Pl => base_1+"ймали"+base_2
                              } ;
                       Neuter => table {
                                   Sg => base_1+"ймало"+base_2 ;
                                   Pl => base_1+"ймали"+base_2
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV200"
  } ;

mkV201 : Str -> V ;
mkV201 base =
  case base of {
    base_1+"стати" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"стати" ;
                                                Pl => base_1+"щем"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"щеш" ;
                                                Pl => base_1+"щете"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"ще" ;
                                                Pl => base_1+"щуть"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"щім" ;
        imperative2 = table {
                        Sg => base_1+"щи" ;
                        Pl => base_1+"щіть"
                      } ;
        infinitive = base_1+"стати" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"став" ;
                                 Pl => base_1+"стали"
                               } ;
                       Fem => table {
                                Sg => base_1+"стала" ;
                                Pl => base_1+"стали"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"стало" ;
                                   Pl => base_1+"стали"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV201"
  } ;

mkV202 : Str -> V ;
mkV202 base =
  case base of {
    base_1+"ти"+base_2@(?+?) => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"ти"+base_2 ;
                                                Pl => "будемо "+base_1+"ти"+base_2
                                              } ;
                                        P2 => table {
                                                Sg => "будеш "+base_1+"ти"+base_2 ;
                                                Pl => "будете "+base_1+"ти"+base_2
                                              } ;
                                        P3 => table {
                                                Sg => "буде "+base_1+"ти"+base_2 ;
                                                Pl => "будуть "+base_1+"ти"+base_2
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"ймо"+base_2 ;
        imperative2 = table {
                        Sg => base_1+"й"+base_2 ;
                        Pl => base_1+"йте"+base_2
                      } ;
        infinitive = base_1+"ти"+base_2 ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"в"+base_2 ;
                                 Pl => base_1+"ли"+base_2
                               } ;
                       Fem => table {
                                Sg => base_1+"ла"+base_2 ;
                                Pl => base_1+"ли"+base_2
                              } ;
                       Neuter => table {
                                   Sg => base_1+"ло"+base_2 ;
                                   Pl => base_1+"ли"+base_2
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV202"
  } ;

mkV203 : Str -> V ;
mkV203 base =
  case base of {
    base_1+"їтися" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"їти" ;
                                                Pl => base_1+"їмся"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"їшся" ;
                                                Pl => base_1+"їтеся"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"їться" ;
                                                Pl => base_1+"яться"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"їмся" ;
        imperative2 = table {
                        Sg => base_1+"їся" ;
                        Pl => base_1+"їться"
                      } ;
        infinitive = base_1+"їтися" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"ївся" ;
                                 Pl => base_1+"їлися"
                               } ;
                       Fem => table {
                                Sg => base_1+"їлася" ;
                                Pl => base_1+"їлися"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"їлося" ;
                                   Pl => base_1+"їлися"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV203"
  } ;

mkV204 : Str -> V ;
mkV204 base =
  case base of {
    base_1+"іти"+base_2@(?+?) => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"іти"+base_2 ;
                                                Pl => nonExist
                                              } ;
                                        P2 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              } ;
                                        P3 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"іти"+base_2 ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"ім"+base_2 ;
        imperative2 = table {
                        Sg => base_1+"и"+base_2 ;
                        Pl => base_1+"іть"+base_2
                      } ;
        infinitive = base_1+"іти"+base_2 ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"ів"+base_2 ;
                                 Pl => base_1+"іли"+base_2
                               } ;
                       Fem => table {
                                Sg => base_1+"іла"+base_2 ;
                                Pl => base_1+"іли"+base_2
                              } ;
                       Neuter => table {
                                   Sg => base_1+"іло"+base_2 ;
                                   Pl => base_1+"іли"+base_2
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV204"
  } ;

mkV205 : Str -> V ;
mkV205 base =
  case base of {
    "впісят"+base_1+"сь" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => "впісят"+base_1+"сь" ;
                                                Pl => nonExist
                                              } ;
                                        P2 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              } ;
                                        P3 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => "заб"+base_1+"ти" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = "заб"+base_1+"ймо" ;
        imperative2 = table {
                        Sg => "заб"+base_1+"й" ;
                        Pl => "заб"+base_1+"йте"
                      } ;
        infinitive = "впісят"+base_1+"сь" ;
        participle = table {
                       Masc => table {
                                 Sg => "заб"+base_1+"в" ;
                                 Pl => "заб"+base_1+"ли"
                               } ;
                       Fem => table {
                                Sg => "заб"+base_1+"ла" ;
                                Pl => "заб"+base_1+"ли"
                              } ;
                       Neuter => table {
                                   Sg => "заб"+base_1+"ло" ;
                                   Pl => "заб"+base_1+"ли"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => "заб"+base_1+"тий"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV205"
  } ;

mkV206 : Str -> V ;
mkV206 base =
  case base of {
    base_1+"яти" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"яти" ;
                                                Pl => base_1+"им"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"иш" ;
                                                Pl => base_1+"ите"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"ить" ;
                                                Pl => base_1+"ять"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"ім" ;
        imperative2 = table {
                        Sg => base_1+"и" ;
                        Pl => base_1+"іть"
                      } ;
        infinitive = base_1+"яти" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"яв" ;
                                 Pl => base_1+"яли"
                               } ;
                       Fem => table {
                                Sg => base_1+"яла" ;
                                Pl => base_1+"яли"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"яло" ;
                                   Pl => base_1+"яли"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV206"
  } ;

mkV207 : Str -> V ;
mkV207 base =
  case base of {
    "в"+base_1+"ти" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => "в"+base_1+"ти" ;
                                                Pl => nonExist
                                              } ;
                                        P2 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              } ;
                                        P3 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              }
                                      }
                             } ;
                   Perf => { Past = "у"+base_1+"лий" ;
                             Pres = table {
                                      P1 => table {
                                              Sg => "в"+base_1+"ти" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = "в"+base_1+"ймо" ;
        imperative2 = table {
                        Sg => "в"+base_1+"й" ;
                        Pl => "в"+base_1+"йте"
                      } ;
        infinitive = "в"+base_1+"ти" ;
        participle = table {
                       Masc => table {
                                 Sg => "в"+base_1+"в" ;
                                 Pl => "в"+base_1+"ли"
                               } ;
                       Fem => table {
                                Sg => "в"+base_1+"ла" ;
                                Pl => "в"+base_1+"ли"
                              } ;
                       Neuter => table {
                                   Sg => "в"+base_1+"ло" ;
                                   Pl => "в"+base_1+"ли"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV207"
  } ;

mkV208 : Str -> V ;
mkV208 base =
  case base of {
    base_1+"хати"+base_2@(?+?) => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"хати"+base_2 ;
                                                Pl => nonExist
                                              } ;
                                        P2 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              } ;
                                        P3 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"хати"+base_2 ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"дьмо"+base_2 ;
        imperative2 = table {
                        Sg => nonExist ;
                        Pl => base_1+"дьте"+base_2
                      } ;
        infinitive = base_1+"хати"+base_2 ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"хав"+base_2 ;
                                 Pl => base_1+"хали"+base_2
                               } ;
                       Fem => table {
                                Sg => base_1+"хала"+base_2 ;
                                Pl => base_1+"хали"+base_2
                              } ;
                       Neuter => table {
                                   Sg => base_1+"хало"+base_2 ;
                                   Pl => base_1+"хали"+base_2
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV208"
  } ;

mkV209 : Str -> V ;
mkV209 base =
  case base of {
    base_1+base_2@?+"яти" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+base_2+"яти" ;
                                                Pl => nonExist
                                              } ;
                                        P2 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              } ;
                                        P3 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+base_2+"яти" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"і"+base_2+"нім" ;
        imperative2 = table {
                        Sg => base_1+"і"+base_2+"ни" ;
                        Pl => base_1+"і"+base_2+"ніть"
                      } ;
        infinitive = base_1+base_2+"яти" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+base_2+"яв" ;
                                 Pl => base_1+base_2+"яли"
                               } ;
                       Fem => table {
                                Sg => base_1+base_2+"яла" ;
                                Pl => base_1+base_2+"яли"
                              } ;
                       Neuter => table {
                                   Sg => base_1+base_2+"яло" ;
                                   Pl => base_1+base_2+"яли"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+base_2+"ятий"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV209"
  } ;

mkV210 : Str -> V ;
mkV210 base =
  case base of {
    base_1+"екти"+base_2@(?+?) => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"екти"+base_2 ;
                                                Pl => nonExist
                                              } ;
                                        P2 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              } ;
                                        P3 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"екти"+base_2 ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"ечім"+base_2 ;
        imperative2 = table {
                        Sg => base_1+"ечи"+base_2 ;
                        Pl => base_1+"ечіть"+base_2
                      } ;
        infinitive = base_1+"екти"+base_2 ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"ік"+base_2 ;
                                 Pl => base_1+"екли"+base_2
                               } ;
                       Fem => table {
                                Sg => base_1+"екла"+base_2 ;
                                Pl => base_1+"екли"+base_2
                              } ;
                       Neuter => table {
                                   Sg => base_1+"екло"+base_2 ;
                                   Pl => base_1+"екли"+base_2
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV210"
  } ;

mkV211 : Str -> V ;
mkV211 base =
  case base of {
    base_1+"ві"+base_2@?+base_3@?+"ати" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"ві"+base_2+base_3+"ати" ;
                                                Pl => nonExist
                                              } ;
                                        P2 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              } ;
                                        P3 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"ві"+base_2+base_3+"ати" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+base_2+"е"+base_3+"ім" ;
        imperative2 = table {
                        Sg => base_1+base_2+"е"+base_3+"и" ;
                        Pl => base_1+base_2+"е"+base_3+"іть"
                      } ;
        infinitive = base_1+"ві"+base_2+base_3+"ати" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"ві"+base_2+base_3+"ав" ;
                                 Pl => base_1+"ві"+base_2+base_3+"али"
                               } ;
                       Fem => table {
                                Sg => base_1+"ві"+base_2+base_3+"ала" ;
                                Pl => base_1+"ві"+base_2+base_3+"али"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"ві"+base_2+base_3+"ало" ;
                                   Pl => base_1+"ві"+base_2+base_3+"али"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"ві"+base_2+base_3+"аний"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV211"
  } ;

mkV212 : Str -> V ;
mkV212 base =
  case base of {
    base_1+"нути"+base_2@(?+?) => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"нути"+base_2 ;
                                                Pl => base_1+"нем"+base_2
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"неш"+base_2 ;
                                                Pl => base_1+"нете"+base_2
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"неть"+base_2 ;
                                                Pl => base_1+"нуть"+base_2
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"нім"+base_2 ;
        imperative2 = table {
                        Sg => base_1+"ни"+base_2 ;
                        Pl => base_1+"ніть"+base_2
                      } ;
        infinitive = base_1+"нути"+base_2 ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+base_2 ;
                                 Pl => base_1+"ли"+base_2
                               } ;
                       Fem => table {
                                Sg => base_1+"ла"+base_2 ;
                                Pl => base_1+"ли"+base_2
                              } ;
                       Neuter => table {
                                   Sg => base_1+"ло"+base_2 ;
                                   Pl => base_1+"ли"+base_2
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV212"
  } ;

mkV213 : Str -> V ;
mkV213 base =
  case base of {
    base_1+"ід"+base_2@(?+?+?+?)+"вати" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"ід"+base_2+"вати" ;
                                                Pl => base_1+"ри"+base_2+"єм"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"ри"+base_2+"єш" ;
                                                Pl => base_1+"ри"+base_2+"єте"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"ри"+base_2+"є" ;
                                                Pl => base_1+"ри"+base_2+"ють"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"ри"+base_2+"ймо" ;
        imperative2 = table {
                        Sg => base_1+"ри"+base_2+"й" ;
                        Pl => base_1+"ри"+base_2+"йте"
                      } ;
        infinitive = base_1+"ід"+base_2+"вати" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"ри"+base_2+"вав" ;
                                 Pl => base_1+"ри"+base_2+"вали"
                               } ;
                       Fem => table {
                                Sg => base_1+"ри"+base_2+"вала" ;
                                Pl => base_1+"ри"+base_2+"вали"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"ри"+base_2+"вало" ;
                                   Pl => base_1+"ри"+base_2+"вали"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV213"
  } ;

mkV214 : Str -> V ;
mkV214 base =
  case base of {
    base_1+"ти" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"ти" ;
                                                Pl => nonExist
                                              } ;
                                        P2 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              } ;
                                        P3 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"ти" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"дім" ;
        imperative2 = table {
                        Sg => base_1+"ди" ;
                        Pl => base_1+"діть"
                      } ;
        infinitive = base_1+"ти" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"в" ;
                                 Pl => base_1+"ли"
                               } ;
                       Fem => table {
                                Sg => base_1+"ла" ;
                                Pl => base_1+"ли"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"ло" ;
                                   Pl => base_1+"ли"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"тий"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV214"
  } ;

mkV215 : Str -> V ;
mkV215 base =
  case base of {
    base_1+base_2@?+"ти" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+base_2+"ти" ;
                                                Pl => nonExist
                                              } ;
                                        P2 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              } ;
                                        P3 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+base_2+"ти" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = nonExist ;
        imperative2 = table {
                        Sg => nonExist ;
                        Pl => nonExist
                      } ;
        infinitive = base_1+base_2+"ти" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+base_2+"в" ;
                                 Pl => base_1+base_2+"ли"
                               } ;
                       Fem => table {
                                Sg => base_1+base_2+"ла" ;
                                Pl => base_1+base_2+"ли"
                              } ;
                       Neuter => table {
                                   Sg => base_1+base_2+"ло" ;
                                   Pl => base_1+base_2+"ли"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"ен"+base_2+"й"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV215"
  } ;

mkV216 : Str -> V ;
mkV216 base =
  case base of {
    base_1+"ти" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"ти" ;
                                                Pl => nonExist
                                              } ;
                                        P2 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              } ;
                                        P3 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"ти" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"ім" ;
        imperative2 = table {
                        Sg => base_1+"и" ;
                        Pl => base_1+"іть"
                      } ;
        infinitive = base_1+"ти" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1 ;
                                 Pl => base_1+"ли"
                               } ;
                       Fem => table {
                                Sg => base_1+"ла" ;
                                Pl => base_1+"ли"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"ло" ;
                                   Pl => base_1+"ли"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"ений"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV216"
  } ;

mkV217 : Str -> V ;
mkV217 base =
  case base of {
    base_1+"'яти" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"'яти" ;
                                                Pl => nonExist
                                              } ;
                                        P2 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              } ;
                                        P3 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"'яти" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"нім" ;
        imperative2 = table {
                        Sg => base_1+"ни" ;
                        Pl => base_1+"ніть"
                      } ;
        infinitive = base_1+"'яти" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"'яв" ;
                                 Pl => base_1+"'яли"
                               } ;
                       Fem => table {
                                Sg => base_1+"'яла" ;
                                Pl => base_1+"'яли"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"'яло" ;
                                   Pl => base_1+"'яли"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"'ятий"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV217"
  } ;

mkV218 : Str -> V ;
mkV218 base =
  case base of {
    base_1+"вати" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"вати • pf випростувати" ;
                                                Pl => base_1+"єм"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"єш" ;
                                                Pl => base_1+"єте"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"є" ;
                                                Pl => base_1+"ють"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"вати" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"ймо" ;
        imperative2 = table {
                        Sg => base_1+"й" ;
                        Pl => base_1+"йте"
                      } ;
        infinitive = base_1+"вати" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"вав" ;
                                 Pl => base_1+"вали"
                               } ;
                       Fem => table {
                                Sg => base_1+"вала" ;
                                Pl => base_1+"вали"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"вало" ;
                                   Pl => base_1+"вали"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"ваний"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV218"
  } ;

mkV219 : Str -> V ;
mkV219 base =
  case base of {
    base_1+"ти" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"ти" ;
                                                Pl => "будемо "+base_1+"ти"
                                              } ;
                                        P2 => table {
                                                Sg => "будеш "+base_1+"ти" ;
                                                Pl => "будете "+base_1+"ти"
                                              } ;
                                        P3 => table {
                                                Sg => "буде "+base_1+"ти" ;
                                                Pl => "будуть "+base_1+"ти"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = base_1+"ймо" ;
        imperative2 = table {
                        Sg => base_1+"й" ;
                        Pl => base_1+"йте"
                      } ;
        infinitive = base_1+"ти" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"в" ;
                                 Pl => base_1+"ли"
                               } ;
                       Fem => table {
                                Sg => base_1+"ла" ;
                                Pl => base_1+"ли"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"ло" ;
                                   Pl => base_1+"ли"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => base_1+"ний"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV219"
  } ;

mkV220 : Str -> V ;
mkV220 base =
  case base of {
    "г"+base_1+"ати"+base_2@(?+?) => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => "г"+base_1+"ати"+base_2 ;
                                                Pl => "же"+base_1+"ем"+base_2
                                              } ;
                                        P2 => table {
                                                Sg => "же"+base_1+"еш"+base_2 ;
                                                Pl => "же"+base_1+"ете"+base_2
                                              } ;
                                        P3 => table {
                                                Sg => "же"+base_1+"еть"+base_2 ;
                                                Pl => "же"+base_1+"уть"+base_2
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative1 = "же"+base_1+"ім"+base_2 ;
        imperative2 = table {
                        Sg => "же"+base_1+"и"+base_2 ;
                        Pl => "же"+base_1+"іть"+base_2
                      } ;
        infinitive = "г"+base_1+"ати"+base_2 ;
        participle = table {
                       Masc => table {
                                 Sg => "г"+base_1+"ав"+base_2 ;
                                 Pl => "г"+base_1+"али"+base_2
                               } ;
                       Fem => table {
                                Sg => "г"+base_1+"ала"+base_2 ;
                                Pl => "г"+base_1+"али"+base_2
                              } ;
                       Neuter => table {
                                   Sg => "г"+base_1+"ало"+base_2 ;
                                   Pl => "г"+base_1+"али"+base_2
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV220"
  } ;

mkA001 : Str -> A ;
mkA001 base =
  case base of {
    base_1+"ий" => lin A
      { s = table {
              Nom => table {
                       GSg Masc => base_1+"ий" ;
                       GSg Fem => base_1+"а" ;
                       GSg Neuter => base_1+"е" ;
                       GPl => base_1+"і"
                     } ;
              Acc => table {
                       GSg Masc => base_1+"ого" ;
                       GSg Fem => base_1+"у" ;
                       GSg Neuter => base_1+"е" ;
                       GPl => base_1+"их"
                     } ;
              Dat => table {
                       GSg Fem => base_1+"ій" ;
                       GSg _ => base_1+"ому" ;
                       GPl => base_1+"им"
                     } ;
              Gen => table {
                       GSg Fem => base_1+"ої" ;
                       GSg _ => base_1+"ого" ;
                       GPl => base_1+"их"
                     } ;
              Loc => table {
                       GSg Fem => base_1+"ій" ;
                       GSg _ => base_1+"ому" ;
                       GPl => base_1+"их"
                     } ;
              Instr => table {
                         GSg Fem => base_1+"ою" ;
                         GSg _ => base_1+"им" ;
                         GPl => base_1+"ими"
                       }
            }
      };
    _ => error "Can't apply paradigm mkA001"
  } ;

mkA002 : Str -> A ;
mkA002 base =
  case base of {
    base_1 => lin A
      { s = table {
              Nom => table {
                       GSg Masc => base_1 ;
                       GSg Fem => nonExist ;
                       GSg Neuter => nonExist ;
                       GPl => nonExist
                     } ;
              Acc => table {
                       GSg Masc => nonExist ;
                       GSg Fem => nonExist ;
                       GSg Neuter => nonExist ;
                       GPl => nonExist
                     } ;
              Dat => table {
                       GSg Masc => nonExist ;
                       GSg Fem => nonExist ;
                       GSg Neuter => nonExist ;
                       GPl => nonExist
                     } ;
              Gen => table {
                       GSg Masc => nonExist ;
                       GSg Fem => nonExist ;
                       GSg Neuter => nonExist ;
                       GPl => nonExist
                     } ;
              Loc => table {
                       GSg Masc => nonExist ;
                       GSg Fem => nonExist ;
                       GSg Neuter => nonExist ;
                       GPl => nonExist
                     } ;
              Instr => table {
                         GSg Masc => nonExist ;
                         GSg Fem => nonExist ;
                         GSg Neuter => nonExist ;
                         GPl => nonExist
                       }
            }
      };
    _ => error "Can't apply paradigm mkA002"
  } ;

mkA003 : Str -> A ;
mkA003 base =
  case base of {
    base_1+"ій" => lin A
      { s = table {
              Nom => table {
                       GSg Masc => base_1+"ій" ;
                       GSg Fem => base_1+"я" ;
                       GSg Neuter => base_1+"є" ;
                       GPl => base_1+"і"
                     } ;
              Acc => table {
                       GSg Masc => base_1+"ього" ;
                       GSg Fem => base_1+"ю" ;
                       GSg Neuter => base_1+"є" ;
                       GPl => base_1+"іх"
                     } ;
              Dat => table {
                       GSg Fem => base_1+"ій" ;
                       GSg _ => base_1+"ьому" ;
                       GPl => base_1+"ім"
                     } ;
              Gen => table {
                       GSg Fem => base_1+"ьої" ;
                       GSg _ => base_1+"ього" ;
                       GPl => base_1+"іх"
                     } ;
              Loc => table {
                       GSg Fem => base_1+"ій" ;
                       GSg _ => base_1+"ьому" ;
                       GPl => base_1+"іх"
                     } ;
              Instr => table {
                         GSg Fem => base_1+"ьою" ;
                         GSg _ => base_1+"ім" ;
                         GPl => base_1+"іми"
                       }
            }
      };
    _ => error "Can't apply paradigm mkA003"
  } ;

mkA004 : Str -> A ;
mkA004 base =
  case base of {
    base_1+"їй" => lin A
      { s = table {
              Nom => table {
                       GSg Masc => base_1+"їй" ;
                       GSg Fem => base_1+"я" ;
                       GSg Neuter => base_1+"є" ;
                       GPl => base_1+"ї"
                     } ;
              Acc => table {
                       GSg Masc => base_1+"його" ;
                       GSg Fem => base_1+"ю" ;
                       GSg Neuter => base_1+"є" ;
                       GPl => base_1+"їх"
                     } ;
              Dat => table {
                       GSg Fem => base_1+"їй" ;
                       GSg _ => base_1+"йому" ;
                       GPl => base_1+"їм"
                     } ;
              Gen => table {
                       GSg Fem => base_1+"йої" ;
                       GSg _ => base_1+"його" ;
                       GPl => base_1+"їх"
                     } ;
              Loc => table {
                       GSg Fem => base_1+"їй" ;
                       GSg _ => base_1+"йому" ;
                       GPl => base_1+"їх"
                     } ;
              Instr => table {
                         GSg Fem => base_1+"йою" ;
                         GSg _ => base_1+"їм" ;
                         GPl => base_1+"їми"
                       }
            }
      };
    _ => error "Can't apply paradigm mkA004"
  } ;

mkA005 : Str -> A ;
mkA005 base =
  case base of {
    base_1+"ий" => lin A
      { s = table {
              Nom => table {
                       GSg Masc => base_1+"ий" ;
                       GSg Fem => base_1+"я" ;
                       GSg Neuter => base_1+"е" ;
                       GPl => base_1+"і"
                     } ;
              Acc => table {
                       GSg Masc => base_1+"ього" ;
                       GSg Fem => base_1+"ю" ;
                       GSg Neuter => base_1+"е" ;
                       GPl => base_1+"их"
                     } ;
              Dat => table {
                       GSg Fem => base_1+"ій" ;
                       GSg _ => base_1+"ьому" ;
                       GPl => base_1+"им"
                     } ;
              Gen => table {
                       GSg Fem => base_1+"ьої" ;
                       GSg _ => base_1+"ього" ;
                       GPl => base_1+"их"
                     } ;
              Loc => table {
                       GSg Fem => base_1+"ій" ;
                       GSg _ => base_1+"ьому" ;
                       GPl => base_1+"их"
                     } ;
              Instr => table {
                         GSg Fem => base_1+"ьою" ;
                         GSg _ => base_1+"им" ;
                         GPl => base_1+"ими"
                       }
            }
      };
    _ => error "Can't apply paradigm mkA005"
  } ;

mkA006 : Str -> A ;
mkA006 base =
  case base of {
    "не"+base_1+"ий" => lin A
      { s = table {
              Nom => table {
                       GSg Masc => "не"+base_1+"ий" ;
                       GSg Fem => base_1+"а" ;
                       GSg Neuter => base_1+"е" ;
                       GPl => base_1+"і"
                     } ;
              Acc => table {
                       GSg Masc => base_1+"ого" ;
                       GSg Fem => base_1+"у" ;
                       GSg Neuter => base_1+"е" ;
                       GPl => base_1+"их"
                     } ;
              Dat => table {
                       GSg Fem => base_1+"ій" ;
                       GSg _ => base_1+"ому" ;
                       GPl => base_1+"им"
                     } ;
              Gen => table {
                       GSg Fem => base_1+"ої" ;
                       GSg _ => base_1+"ого" ;
                       GPl => base_1+"их"
                     } ;
              Loc => table {
                       GSg Fem => base_1+"ій" ;
                       GSg _ => base_1+"ому" ;
                       GPl => base_1+"их"
                     } ;
              Instr => table {
                         GSg Fem => base_1+"ою" ;
                         GSg _ => base_1+"им" ;
                         GPl => base_1+"ими"
                       }
            }
      };
    _ => error "Can't apply paradigm mkA006"
  } ;

mkA008 : Str -> A ;
mkA008 base =
  case base of {
    base_1+"ий"+base_2@(?+?+?+?+?)+"ий" => lin A
      { s = table {
              Nom => table {
                       GSg Masc => base_1+"ий"+base_2+"ий" ;
                       GSg Fem => base_1+"а"+base_2+"а" ;
                       GSg Neuter => base_1+"е"+base_2+"е" ;
                       GPl => base_1+"і"+base_2+"і"
                     } ;
              Acc => table {
                       GSg Masc => base_1+"ого"+base_2+"ого" ;
                       GSg Fem => base_1+"у"+base_2+"у" ;
                       GSg Neuter => base_1+"е"+base_2+"е" ;
                       GPl => base_1+"их"+base_2+"их"
                     } ;
              Dat => table {
                       GSg Fem => base_1+"ій"+base_2+"ій" ;
                       GSg _ => base_1+"ому"+base_2+"ому" ;
                       GPl => base_1+"им"+base_2+"им"
                     } ;
              Gen => table {
                       GSg Fem => base_1+"ої"+base_2+"ої" ;
                       GSg _ => base_1+"ого"+base_2+"ого" ;
                       GPl => base_1+"их"+base_2+"их"
                     } ;
              Loc => table {
                       GSg Fem => base_1+"ій"+base_2+"ій" ;
                       GSg _ => base_1+"ому"+base_2+"ому" ;
                       GPl => base_1+"их"+base_2+"их"
                     } ;
              Instr => table {
                         GSg Fem => base_1+"ою"+base_2+"ою" ;
                         GSg Neuter => base_1+"им"+base_2+"им" ;
                         GPl => base_1+"ими"+base_2+"ими"
                       }
            }
      };
    _ => error "Can't apply paradigm mkA008"
  } ;

mkA009 : Str -> A ;
mkA009 base =
  case base of {
    base_1+"ь"+base_2@?+"ий" => lin A
      { s = table {
              Nom => table {
                       GSg Masc => base_1+"ь"+base_2+"ий" ;
                       GSg Fem => base_1+base_2+"а" ;
                       GSg Neuter => base_1+base_2+"е" ;
                       GPl => base_1+base_2+"і"
                     } ;
              Acc => table {
                       GSg Masc => base_1+base_2+"ого" ;
                       GSg Fem => base_1+base_2+"у" ;
                       GSg Neuter => base_1+base_2+"е" ;
                       GPl => base_1+base_2+"их"
                     } ;
              Dat => table {
                       GSg Fem => base_1+base_2+"ій" ;
                       GSg _ => base_1+base_2+"ому" ;
                       GPl => base_1+base_2+"им"
                     } ;
              Gen => table {
                       GSg Fem => base_1+base_2+"ої" ;
                       GSg _ => base_1+base_2+"ого" ;
                       GPl => base_1+base_2+"их"
                     } ;
              Loc => table {
                       GSg Fem => base_1+base_2+"ій" ;
                       GSg _ => base_1+base_2+"ому" ;
                       GPl => base_1+base_2+"их"
                     } ;
              Instr => table {
                         GSg Fem => base_1+base_2+"ою" ;
                         GSg _ => base_1+base_2+"им" ;
                         GPl => base_1+base_2+"ими"
                       }
            }
      };
    _ => error "Can't apply paradigm mkA009"
  } ;

mkA011 : Str -> A ;
mkA011 base =
  case base of {
    base_1+"яс"+base_2@?+"ий" => lin A
      { s = table {
              Nom => table {
                       GSg Masc => base_1+"яс"+base_2+"ий" ;
                       GSg Fem => "че"+base_1+"во"+base_2+"а" ;
                       GSg Neuter => "че"+base_1+"во"+base_2+"е" ;
                       GPl => "че"+base_1+"во"+base_2+"і"
                     } ;
              Acc => table {
                       GSg Masc => "че"+base_1+"во"+base_2+"ого" ;
                       GSg Fem => "че"+base_1+"во"+base_2+"у" ;
                       GSg Neuter => "че"+base_1+"во"+base_2+"е" ;
                       GPl => "че"+base_1+"во"+base_2+"их"
                     } ;
              Dat => table {
                       GSg Fem => "че"+base_1+"во"+base_2+"ій" ;
                       GSg _ => "че"+base_1+"во"+base_2+"ому" ;
                       GPl => "че"+base_1+"во"+base_2+"им"
                     } ;
              Gen => table {
                       GSg Fem => "че"+base_1+"во"+base_2+"ої" ;
                       GSg _ => "че"+base_1+"во"+base_2+"ого" ;
                       GPl => "че"+base_1+"во"+base_2+"их"
                     } ;
              Loc => table {
                       GSg Fem => "че"+base_1+"во"+base_2+"ій" ;
                       GSg _ => "че"+base_1+"во"+base_2+"ому" ;
                       GPl => "че"+base_1+"во"+base_2+"их"
                     } ;
              Instr => table {
                         GSg Fem => "че"+base_1+"во"+base_2+"ою" ;
                         GSg _ => "че"+base_1+"во"+base_2+"им" ;
                         GPl => "че"+base_1+"во"+base_2+"ими"
                       }
            }
      };
    _ => error "Can't apply paradigm mkA011"
  } ;
}
