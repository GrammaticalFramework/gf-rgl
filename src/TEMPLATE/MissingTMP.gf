resource MissingTMP = open GrammarTMP, Prelude in {
-- temporary definitions to enable the compilation of RGL API
oper AdAP : AdA -> AP -> AP  = notYet "AdAP" ;
oper AdAdv : AdA -> Adv -> Adv  = notYet "AdAdv" ;
oper AdNum : AdN -> Card -> Card  = notYet "AdNum" ;
oper AdVVP : AdV -> VP -> VP  = notYet "AdVVP" ;
oper AdVVPSlash : AdV -> VPSlash -> VPSlash  = notYet "AdVVPSlash" ;
oper AddAdvQVP : QVP -> IAdv -> QVP  = notYet "AddAdvQVP" ;
oper AdjCN : AP -> CN -> CN  = notYet "AdjCN" ;
oper AdjDAP : DAP -> AP -> DAP  = notYet "AdjDAP" ;
oper AdjOrd : Ord -> AP  = notYet "AdjOrd" ;
oper AdnCAdv : CAdv -> AdN  = notYet "AdnCAdv" ;
oper AdvAP : AP -> Adv -> AP  = notYet "AdvAP" ;
oper AdvCN : CN -> Adv -> CN  = notYet "AdvCN" ;
oper AdvIAdv : IAdv -> Adv -> IAdv  = notYet "AdvIAdv" ;
oper AdvIP : IP -> Adv -> IP  = notYet "AdvIP" ;
oper AdvImp : Adv -> Imp -> Imp  = notYet "AdvImp" ;
oper AdvNP : NP -> Adv -> NP  = notYet "AdvNP" ;
oper AdvQVP : VP -> IAdv -> QVP  = notYet "AdvQVP" ;
oper AdvS : Adv -> S -> S  = notYet "AdvS" ;
oper AdvSlash : ClSlash -> Adv -> ClSlash  = notYet "AdvSlash" ;
oper AdvVP : VP -> Adv -> VP  = notYet "AdvVP" ;
oper AdvVPSlash : VPSlash -> Adv -> VPSlash  = notYet "AdvVPSlash" ;
oper ApposCN : CN -> NP -> CN  = notYet "ApposCN" ;
oper BaseAP : AP -> AP -> ListAP  = notYet "BaseAP" ;
oper BaseAdV : AdV -> AdV -> ListAdV  = notYet "BaseAdV" ;
oper BaseAdv : Adv -> Adv -> ListAdv  = notYet "BaseAdv" ;
oper BaseCN : CN -> CN -> ListCN  = notYet "BaseCN" ;
oper BaseIAdv : IAdv -> IAdv -> ListIAdv  = notYet "BaseIAdv" ;
oper BaseNP : NP -> NP -> ListNP  = notYet "BaseNP" ;
oper BaseRS : RS -> RS -> ListRS  = notYet "BaseRS" ;
oper BaseS : S -> S -> ListS  = notYet "BaseS" ;
oper CAdvAP : CAdv -> AP -> NP -> AP  = notYet "CAdvAP" ;
oper CleftAdv : Adv -> S -> Cl  = notYet "CleftAdv" ;
oper CleftNP : NP -> RS -> Cl  = notYet "CleftNP" ;
oper CompAP : AP -> Comp  = notYet "CompAP" ;
oper CompAdv : Adv -> Comp  = notYet "CompAdv" ;
oper CompCN : CN -> Comp  = notYet "CompCN" ;
oper CompIAdv : IAdv -> IComp  = notYet "CompIAdv" ;
oper CompIP : IP -> IComp  = notYet "CompIP" ;
oper CompNP : NP -> Comp  = notYet "CompNP" ;
oper ComparA : A -> NP -> AP  = notYet "ComparA" ;
oper ComparAdvAdj : CAdv -> A -> NP -> Adv  = notYet "ComparAdvAdj" ;
oper ComparAdvAdjS : CAdv -> A -> S -> Adv  = notYet "ComparAdvAdjS" ;
oper ComplA2 : A2 -> NP -> AP  = notYet "ComplA2" ;
oper ComplN2 : N2 -> NP -> CN  = notYet "ComplN2" ;
oper ComplN3 : N3 -> NP -> N2  = notYet "ComplN3" ;
oper ComplSlash : VPSlash -> NP -> VP  = notYet "ComplSlash" ;
oper ComplSlashIP : VPSlash -> IP -> QVP  = notYet "ComplSlashIP" ;
oper ComplVA : VA -> AP -> VP  = notYet "ComplVA" ;
oper ComplVQ : VQ -> QS -> VP  = notYet "ComplVQ" ;
oper ComplVS : VS -> S -> VP  = notYet "ComplVS" ;
oper ComplVV : VV -> VP -> VP  = notYet "ComplVV" ;
oper ConjAP : Conj -> ListAP -> AP  = notYet "ConjAP" ;
oper ConjAdV : Conj -> ListAdV -> AdV  = notYet "ConjAdV" ;
oper ConjAdv : Conj -> ListAdv -> Adv  = notYet "ConjAdv" ;
oper ConjCN : Conj -> ListCN -> CN  = notYet "ConjCN" ;
oper ConjDet : Conj -> ListDAP -> Det  = notYet "ConjDet" ;
oper ConjIAdv : Conj -> ListIAdv -> IAdv  = notYet "ConjIAdv" ;
oper ConjNP : Conj -> ListNP -> NP  = notYet "ConjNP" ;
oper ConjRS : Conj -> ListRS -> RS  = notYet "ConjRS" ;
oper ConjS : Conj -> ListS -> S  = notYet "ConjS" ;
oper ConsAP : AP -> ListAP -> ListAP  = notYet "ConsAP" ;
oper ConsAdV : AdV -> ListAdV -> ListAdV  = notYet "ConsAdV" ;
oper ConsAdv : Adv -> ListAdv -> ListAdv  = notYet "ConsAdv" ;
oper ConsCN : CN -> ListCN -> ListCN  = notYet "ConsCN" ;
oper ConsIAdv : IAdv -> ListIAdv -> ListIAdv  = notYet "ConsIAdv" ;
oper ConsNP : NP -> ListNP -> ListNP  = notYet "ConsNP" ;
oper ConsRS : RS -> ListRS -> ListRS  = notYet "ConsRS" ;
oper ConsS : S -> ListS -> ListS  = notYet "ConsS" ;
oper CountNP : Det -> NP -> NP  = notYet "CountNP" ;
oper DetCN : Det -> CN -> NP  = notYet "DetCN" ;
oper DetDAP : Det -> DAP  = notYet "DetDAP" ;
oper DetNP : Det -> NP  = notYet "DetNP" ;
oper DetQuantOrd : Quant -> Num -> Ord -> Det  = notYet "DetQuantOrd" ;
oper EmbedQS : QS -> SC  = notYet "EmbedQS" ;
oper EmbedS : S -> SC  = notYet "EmbedS" ;
oper EmbedVP : VP -> SC  = notYet "EmbedVP" ;
oper ExistIP : IP -> QCl  = notYet "ExistIP" ;
oper ExistIPAdv : IP -> Adv -> QCl  = notYet "ExistIPAdv" ;
oper ExistNP : NP -> Cl  = notYet "ExistNP" ;
oper ExistNPAdv : NP -> Adv -> Cl  = notYet "ExistNPAdv" ;
oper ExtAdvS : Adv -> S -> S  = notYet "ExtAdvS" ;
oper ExtAdvVP : VP -> Adv -> VP  = notYet "ExtAdvVP" ;
oper FunRP : Prep -> NP -> RP -> RP  = notYet "FunRP" ;
oper GenericCl : VP -> Cl  = notYet "GenericCl" ;
oper IdRP : RP  = notYet "IdRP" ;
oper IdetCN : IDet -> CN -> IP  = notYet "IdetCN" ;
oper IdetIP : IDet -> IP  = notYet "IdetIP" ;
oper IdetQuant : IQuant -> Num -> IDet  = notYet "IdetQuant" ;
oper ImpP3 : NP -> VP -> Utt  = notYet "ImpP3" ;
oper ImpPl1 : VP -> Utt  = notYet "ImpPl1" ;
oper ImpVP : VP -> Imp  = notYet "ImpVP" ;
oper ImpersCl : VP -> Cl  = notYet "ImpersCl" ;
oper MassNP : CN -> NP  = notYet "MassNP" ;
oper NumCard : Card -> Num  = notYet "NumCard" ;
oper NumDigits : Digits -> Card  = notYet "NumDigits" ;
oper NumNumeral : Numeral -> Card  = notYet "NumNumeral" ;
oper OrdDigits : Digits -> Ord  = notYet "OrdDigits" ;
oper OrdNumeral : Numeral -> Ord  = notYet "OrdNumeral" ;
oper OrdNumeralSuperl : Numeral -> A -> Ord  = notYet "OrdNumeralSuperl" ;
oper OrdSuperl : A -> Ord  = notYet "OrdSuperl" ;
oper PConjConj : Conj -> PConj  = notYet "PConjConj" ;
oper PPartNP : NP -> V2 -> NP  = notYet "PPartNP" ;
oper PartNP : CN -> NP -> CN  = notYet "PartNP" ;
oper PassV2 : V2 -> VP  = notYet "PassV2" ;
oper PhrUtt : PConj -> Utt -> Voc -> Phr  = notYet "PhrUtt" ;
oper PositA : A -> AP  = notYet "PositA" ;
oper PositAdAAdj : A -> AdA  = notYet "PositAdAAdj" ;
oper PositAdvAdj : A -> Adv  = notYet "PositAdvAdj" ;
oper PossNP : CN -> NP -> CN  = notYet "PossNP" ;
oper PossPron : Pron -> Quant  = notYet "PossPron" ;
oper PredSCVP : SC -> VP -> Cl  = notYet "PredSCVP" ;
oper PredVP : NP -> VP -> Cl  = notYet "PredVP" ;
oper PredetNP : Predet -> NP -> NP  = notYet "PredetNP" ;
oper PrepIP : Prep -> IP -> IAdv  = notYet "PrepIP" ;
oper PrepNP : Prep -> NP -> Adv  = notYet "PrepNP" ;
oper ProgrVP : VP -> VP  = notYet "ProgrVP" ;
oper QuestCl : Cl -> QCl  = notYet "QuestCl" ;
oper QuestIAdv : IAdv -> Cl -> QCl  = notYet "QuestIAdv" ;
oper QuestIComp : IComp -> NP -> QCl  = notYet "QuestIComp" ;
oper QuestQVP : IP -> QVP -> QCl  = notYet "QuestQVP" ;
oper QuestSlash : IP -> ClSlash -> QCl  = notYet "QuestSlash" ;
oper QuestVP : IP -> VP -> QCl  = notYet "QuestVP" ;
oper ReflA2 : A2 -> AP  = notYet "ReflA2" ;
oper ReflVP : VPSlash -> VP  = notYet "ReflVP" ;
oper RelCN : CN -> RS -> CN  = notYet "RelCN" ;
oper RelCl : Cl -> RCl  = notYet "RelCl" ;
oper RelNP : NP -> RS -> NP  = notYet "RelNP" ;
oper RelS : S -> RS -> S  = notYet "RelS" ;
oper RelSlash : RP -> ClSlash -> RCl  = notYet "RelSlash" ;
oper RelVP : RP -> VP -> RCl  = notYet "RelVP" ;
oper SSubjS : S -> Subj -> S -> S  = notYet "SSubjS" ;
oper SelfAdVVP : VP -> VP  = notYet "SelfAdVVP" ;
oper SelfAdvVP : VP -> VP  = notYet "SelfAdvVP" ;
oper SelfNP : NP -> NP  = notYet "SelfNP" ;
oper SentAP : AP -> SC -> AP  = notYet "SentAP" ;
oper SentCN : CN -> SC -> CN  = notYet "SentCN" ;
oper Slash2V3 : V3 -> NP -> VPSlash  = notYet "Slash2V3" ;
oper Slash3V3 : V3 -> NP -> VPSlash  = notYet "Slash3V3" ;
oper SlashPrep : Cl -> Prep -> ClSlash  = notYet "SlashPrep" ;
oper SlashV2A : V2A -> AP -> VPSlash  = notYet "SlashV2A" ;
oper SlashV2Q : V2Q -> QS -> VPSlash  = notYet "SlashV2Q" ;
oper SlashV2S : V2S -> S -> VPSlash  = notYet "SlashV2S" ;
oper SlashV2V : V2V -> VP -> VPSlash  = notYet "SlashV2V" ;
oper SlashV2VNP : V2V -> NP -> VPSlash -> VPSlash  = notYet "SlashV2VNP" ;
oper SlashV2a : V2 -> VPSlash  = notYet "SlashV2a" ;
oper SlashVP : NP -> VPSlash -> ClSlash  = notYet "SlashVP" ;
oper SlashVS : NP -> VS -> SSlash -> ClSlash  = notYet "SlashVS" ;
oper SlashVV : VV -> VPSlash -> VPSlash  = notYet "SlashVV" ;
oper SubjS : Subj -> S -> Adv  = notYet "SubjS" ;
oper TFullStop : Phr -> Text -> Text  = notYet "TFullStop" ;
oper Use2N3 : N3 -> N2  = notYet "Use2N3" ;
oper Use3N3 : N3 -> N2  = notYet "Use3N3" ;
oper UseA2 : A2 -> AP  = notYet "UseA2" ;
oper UseCl : Temp -> Pol -> Cl -> S  = notYet "UseCl" ;
oper UseComp : Comp -> VP  = notYet "UseComp" ;
oper UseComparA : A -> AP  = notYet "UseComparA" ;
oper UseCopula : VP  = notYet "UseCopula" ;
oper UseN : N -> CN  = notYet "UseN" ;
oper UseN2 : N2 -> CN  = notYet "UseN2" ;
oper UsePN : PN -> NP  = notYet "UsePN" ;
oper UsePron : Pron -> NP  = notYet "UsePron" ;
oper UseQCl : Temp -> Pol -> QCl -> QS  = notYet "UseQCl" ;
oper UseRCl : Temp -> Pol -> RCl -> RS  = notYet "UseRCl" ;
oper UseSlash : Temp -> Pol -> ClSlash -> SSlash  = notYet "UseSlash" ;
oper UseV : V -> VP  = notYet "UseV" ;
oper UttAP : AP -> Utt  = notYet "UttAP" ;
oper UttAdv : Adv -> Utt  = notYet "UttAdv" ;
oper UttCN : CN -> Utt  = notYet "UttCN" ;
oper UttCard : Card -> Utt  = notYet "UttCard" ;
oper UttIAdv : IAdv -> Utt  = notYet "UttIAdv" ;
oper UttIP : IP -> Utt  = notYet "UttIP" ;
oper UttImpPl : Pol -> Imp -> Utt  = notYet "UttImpPl" ;
oper UttImpPol : Pol -> Imp -> Utt  = notYet "UttImpPol" ;
oper UttImpSg : Pol -> Imp -> Utt  = notYet "UttImpSg" ;
oper UttInterj : Interj -> Utt  = notYet "UttInterj" ;
oper UttNP : NP -> Utt  = notYet "UttNP" ;
oper UttQS : QS -> Utt  = notYet "UttQS" ;
oper UttS : S -> Utt  = notYet "UttS" ;
oper UttVP : VP -> Utt  = notYet "UttVP" ;
oper VPSlashPrep : VP -> Prep -> VPSlash  = notYet "VPSlashPrep" ;
oper VocNP : NP -> Voc  = notYet "VocNP" ;
oper above_Prep : Prep  = notYet "above_Prep" ;
oper active2passive : Cl -> Cl  = notYet "active2passive" ;
oper after_Prep : Prep  = notYet "after_Prep" ;
oper alas_Interj : Interj  = notYet "alas_Interj" ;
oper all_Predet : Predet  = notYet "all_Predet" ;
oper almost_AdA : AdA  = notYet "almost_AdA" ;
oper almost_AdN : AdN  = notYet "almost_AdN" ;
oper already_Adv : Adv  = notYet "already_Adv" ;
oper although_Subj : Subj  = notYet "although_Subj" ;
oper always_AdV : AdV  = notYet "always_AdV" ;
oper as_CAdv : CAdv  = notYet "as_CAdv" ;
oper at_least_AdN : AdN  = notYet "at_least_AdN" ;
oper at_most_AdN : AdN  = notYet "at_most_AdN" ;
oper because_Subj : Subj  = notYet "because_Subj" ;
oper before_Prep : Prep  = notYet "before_Prep" ;
oper behind_Prep : Prep  = notYet "behind_Prep" ;
oper between_Prep : Prep  = notYet "between_Prep" ;
oper both7and_DConj : Conj  = notYet "both7and_DConj" ;
oper but_PConj : PConj  = notYet "but_PConj" ;
oper by8agent_Prep : Prep  = notYet "by8agent_Prep" ;
oper by8means_Prep : Prep  = notYet "by8means_Prep" ;
oper dconcat : Digits -> Digits -> Digits  = notYet "dconcat" ;
oper digits2num : Digits -> Numeral  = notYet "digits2num" ;
oper digits2numeral : Card -> Card  = notYet "digits2numeral" ;
oper dn : Dig -> Digit  = notYet "dn" ;
oper dn10 : Dig -> Sub10  = notYet "dn10" ;
oper dn100 : Dig -> Dig -> Sub100  = notYet "dn100" ;
oper dn1000 : Dig -> Dig -> Dig -> Sub1000  = notYet "dn1000" ;
oper dn1000000a : Dig -> Dig -> Dig -> Dig -> Sub1000000  = notYet "dn1000000a" ;
oper dn1000000b : Dig -> Dig -> Dig -> Dig -> Dig -> Sub1000000  = notYet "dn1000000b" ;
oper dn1000000c : Dig -> Dig -> Dig -> Dig -> Dig -> Dig -> Sub1000000  = notYet "dn1000000c" ;
oper during_Prep : Prep  = notYet "during_Prep" ;
oper either7or_DConj : Conj  = notYet "either7or_DConj" ;
oper every_Det : Det  = notYet "every_Det" ;
oper everybody_NP : NP  = notYet "everybody_NP" ;
oper everything_NP : NP  = notYet "everything_NP" ;
oper everywhere_Adv : Adv  = notYet "everywhere_Adv" ;
oper except_Prep : Prep  = notYet "except_Prep" ;
oper few_Det : Det  = notYet "few_Det" ;
oper for_Prep : Prep  = notYet "for_Prep" ;
oper from_Prep : Prep  = notYet "from_Prep" ;
oper he_Pron : Pron  = notYet "he_Pron" ;
oper here7from_Adv : Adv  = notYet "here7from_Adv" ;
oper here7to_Adv : Adv  = notYet "here7to_Adv" ;
oper here_Adv : Adv  = notYet "here_Adv" ;
oper how8many_IDet : IDet  = notYet "how8many_IDet" ;
oper how8much_IAdv : IAdv  = notYet "how8much_IAdv" ;
oper how_IAdv : IAdv  = notYet "how_IAdv" ;
oper i_Pron : Pron  = notYet "i_Pron" ;
oper if_Subj : Subj  = notYet "if_Subj" ;
oper if_then_Conj : Conj  = notYet "if_then_Conj" ;
oper in8front_Prep : Prep  = notYet "in8front_Prep" ;
oper in_Prep : Prep  = notYet "in_Prep" ;
oper it_Pron : Pron  = notYet "it_Pron" ;
oper john_PN : PN  = notYet "john_PN" ;
oper language_title_Utt : Utt  = notYet "language_title_Utt" ;
oper left_Ord : Ord  = notYet "left_Ord" ;
oper less_CAdv : CAdv  = notYet "less_CAdv" ;
oper many_Det : Det  = notYet "many_Det" ;
oper more_CAdv : CAdv  = notYet "more_CAdv" ;
oper most_Predet : Predet  = notYet "most_Predet" ;
oper much_Det : Det  = notYet "much_Det" ;
oper nd : Digit -> Dig  = notYet "nd" ;
oper nd10 : Sub10 -> Digits  = notYet "nd10" ;
oper nd100 : Sub100 -> Digits  = notYet "nd100" ;
oper nd1000 : Sub1000 -> Digits  = notYet "nd1000" ;
oper nd1000000 : Sub1000000 -> Digits  = notYet "nd1000000" ;
oper no_Quant : Quant  = notYet "no_Quant" ;
oper no_Utt : Utt  = notYet "no_Utt" ;
oper nobody_NP : NP  = notYet "nobody_NP" ;
oper not_Predet : Predet  = notYet "not_Predet" ;
oper nothing_NP : NP  = notYet "nothing_NP" ;
oper num : Sub1000000 -> Numeral  = notYet "num" ;
oper num2digits : Numeral -> Digits  = notYet "num2digits" ;
oper on_Prep : Prep  = notYet "on_Prep" ;
oper only_Predet : Predet  = notYet "only_Predet" ;
oper or_Conj : Conj  = notYet "or_Conj" ;
oper otherwise_PConj : PConj  = notYet "otherwise_PConj" ;
oper part_Prep : Prep  = notYet "part_Prep" ;
oper please_Voc : Voc  = notYet "please_Voc" ;
oper possess_Prep : Prep  = notYet "possess_Prep" ;
oper pot01 : Sub10  = notYet "pot01" ;
oper pot1 : Digit -> Sub100  = notYet "pot1" ;
oper pot110 : Sub100  = notYet "pot110" ;
oper pot111 : Sub100  = notYet "pot111" ;
oper pot1plus : Digit -> Sub10 -> Sub100  = notYet "pot1plus" ;
oper pot1to19 : Digit -> Sub100  = notYet "pot1to19" ;
oper pot2 : Sub10 -> Sub1000  = notYet "pot2" ;
oper pot2plus : Sub10 -> Sub100 -> Sub1000  = notYet "pot2plus" ;
oper pot3 : Sub1000 -> Sub1000000  = notYet "pot3" ;
oper pot3plus : Sub1000 -> Sub1000 -> Sub1000000  = notYet "pot3plus" ;
oper quite_Adv : AdA  = notYet "quite_Adv" ;
oper right_Ord : Ord  = notYet "right_Ord" ;
oper she_Pron : Pron  = notYet "she_Pron" ;
oper so_AdA : AdA  = notYet "so_AdA" ;
oper somePl_Det : Det  = notYet "somePl_Det" ;
oper someSg_Det : Det  = notYet "someSg_Det" ;
oper somebody_NP : NP  = notYet "somebody_NP" ;
oper something_NP : NP  = notYet "something_NP" ;
oper somewhere_Adv : Adv  = notYet "somewhere_Adv" ;
oper that_Quant : Quant  = notYet "that_Quant" ;
oper that_Subj : Subj  = notYet "that_Subj" ;
oper there7from_Adv : Adv  = notYet "there7from_Adv" ;
oper there7to_Adv : Adv  = notYet "there7to_Adv" ;
oper there_Adv : Adv  = notYet "there_Adv" ;
oper therefore_PConj : PConj  = notYet "therefore_PConj" ;
oper they_Pron : Pron  = notYet "they_Pron" ;
oper this_Quant : Quant  = notYet "this_Quant" ;
oper through_Prep : Prep  = notYet "through_Prep" ;
oper to_Prep : Prep  = notYet "to_Prep" ;
oper too_AdA : AdA  = notYet "too_AdA" ;
oper under_Prep : Prep  = notYet "under_Prep" ;
oper very_AdA : AdA  = notYet "very_AdA" ;
oper we_Pron : Pron  = notYet "we_Pron" ;
oper whatPl_IP : IP  = notYet "whatPl_IP" ;
oper whatSg_IP : IP  = notYet "whatSg_IP" ;
oper when_IAdv : IAdv  = notYet "when_IAdv" ;
oper when_Subj : Subj  = notYet "when_Subj" ;
oper where_IAdv : IAdv  = notYet "where_IAdv" ;
oper which_IQuant : IQuant  = notYet "which_IQuant" ;
oper whoPl_IP : IP  = notYet "whoPl_IP" ;
oper whoSg_IP : IP  = notYet "whoSg_IP" ;
oper why_IAdv : IAdv  = notYet "why_IAdv" ;
oper with_Prep : Prep  = notYet "with_Prep" ;
oper without_Prep : Prep  = notYet "without_Prep" ;
oper yes_Utt : Utt  = notYet "yes_Utt" ;
oper youPl_Pron : Pron  = notYet "youPl_Pron" ;
oper youPol_Pron : Pron  = notYet "youPol_Pron" ;
oper youSg_Pron : Pron  = notYet "youSg_Pron" ;
}