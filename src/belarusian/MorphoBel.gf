resource MorphoBel = open CatBel, ResBel, Predef in {

oper

mkN001 : Str -> N ;
mkN001 base =
  case base of {
    base_1+"от" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"от" ;
                       Pl => base_1+"аты"
                     } ;
              Acc => table {
                       Sg => base_1+"ата" ;
                       Pl => base_1+"атоў"
                     } ;
              Dat => table {
                       Sg => base_1+"ату" ;
                       Pl => base_1+"атам"
                     } ;
              Gen => table {
                       Sg => base_1+"ата" ;
                       Pl => base_1+"атоў"
                     } ;
              Loc => table {
                       Sg => base_1+"аце" ;
                       Pl => base_1+"атах"
                     } ;
              Instr => table {
                         Sg => base_1+"атом" ;
                         Pl => base_1+"атамі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN001"
  } ;

mkN002 : Str -> N ;
mkN002 base =
  case base of {
    base_1+"е"+base_2@? => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"е"+base_2 ;
                       Pl => base_1+"ь"+base_2+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"е"+base_2 ;
                       Pl => base_1+"ь"+base_2+"ы"
                     } ;
              Dat => table {
                       Sg => base_1+"ь"+base_2+"у" ;
                       Pl => base_1+"ь"+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"ь"+base_2+"а" ;
                       Pl => base_1+"ь"+base_2+"аў"
                     } ;
              Loc => table {
                       Sg => base_1+"ь"+base_2+"ы" ;
                       Pl => base_1+"ь"+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ь"+base_2+"ам" ;
                         Pl => base_1+"ь"+base_2+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN002"
  } ;

mkN003 : Str -> N ;
mkN003 base =
  case base of {
    base_1+"ка" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ка" ;
                       Pl => base_1+"кі"
                     } ;
              Acc => table {
                       Sg => base_1+"ку" ;
                       Pl => base_1+"ак"
                     } ;
              Dat => table {
                       Sg => base_1+"цы" ;
                       Pl => base_1+"кам"
                     } ;
              Gen => table {
                       Sg => base_1+"кі" ;
                       Pl => base_1+"ак"
                     } ;
              Loc => table {
                       Sg => base_1+"цы" ;
                       Pl => base_1+"ках"
                     } ;
              Instr => table {
                         Sg => base_1+"кай" ;
                         Pl => base_1+"камі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN003"
  } ;

mkN004 : Str -> N ;
mkN004 base =
  case base of {
    base_1+"ка" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ка" ;
                       Pl => base_1+"кі"
                     } ;
              Acc => table {
                       Sg => base_1+"ку" ;
                       Pl => base_1+"кі"
                     } ;
              Dat => table {
                       Sg => base_1+"цы" ;
                       Pl => base_1+"кам"
                     } ;
              Gen => table {
                       Sg => base_1+"кі" ;
                       Pl => base_1+"ак"
                     } ;
              Loc => table {
                       Sg => base_1+"цы" ;
                       Pl => base_1+"ках"
                     } ;
              Instr => table {
                         Sg => base_1+"кай" ;
                         Pl => base_1+"камі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN004"
  } ;

mkN005 : Str -> N ;
mkN005 base =
  case base of {
    base_1 => lin N
      { s = table {
              Nom => table {
                       Sg => base_1 ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => base_1 ;
                       Pl => base_1+"і"
                     } ;
              Dat => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"оў"
                     } ;
              Loc => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ом" ;
                         Pl => base_1+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN005"
  } ;

mkN006 : Str -> N ;
mkN006 base =
  case base of {
    base_1 => lin N
      { s = table {
              Nom => table {
                       Sg => base_1 ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"оў"
                     } ;
              Dat => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"оў"
                     } ;
              Loc => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ом" ;
                         Pl => base_1+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN006"
  } ;

mkN007 : Str -> N ;
mkN007 base =
  case base of {
    base_1 => lin N
      { s = table {
              Nom => table {
                       Sg => base_1 ;
                       Pl => base_1+"ы"
                     } ;
              Acc => table {
                       Sg => base_1 ;
                       Pl => base_1+"ы"
                     } ;
              Dat => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"оў"
                     } ;
              Loc => table {
                       Sg => base_1+"ы" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ам" ;
                         Pl => base_1+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN007"
  } ;

mkN008 : Str -> N ;
mkN008 base =
  case base of {
    base_1 => lin N
      { s = table {
              Nom => table {
                       Sg => base_1 ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => base_1 ;
                       Pl => base_1+"і"
                     } ;
              Dat => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"аў"
                     } ;
              Loc => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ам" ;
                         Pl => base_1+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN008"
  } ;

mkN009 : Str -> N ;
mkN009 base =
  case base of {
    base_1@("зв"|?)+"о"+base_2 => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"о"+base_2 ;
                       Pl => base_1+"а"+base_2+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"о"+base_2 ;
                       Pl => base_1+"а"+base_2+"ы"
                     } ;
              Dat => table {
                       Sg => base_1+"о"+base_2+"у" ;
                       Pl => base_1+"а"+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"о"+base_2+"а" ;
                       Pl => base_1+"а"+base_2+"оў"
                     } ;
              Loc => table {
                       Sg => base_1+"о"+base_2+"е" ;
                       Pl => base_1+"а"+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"о"+base_2+"ам" ;
                         Pl => base_1+"а"+base_2+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN009"
  } ;

mkN010 : Str -> N ;
mkN010 base =
  case base of {
    base_1+"й" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"й" ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"й" ;
                       Pl => base_1+"і"
                     } ;
              Dat => table {
                       Sg => base_1+"ю" ;
                       Pl => base_1+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"ю" ;
                       Pl => base_1+"ёў"
                     } ;
              Loc => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"ем" ;
                         Pl => base_1+"ямі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN010"
  } ;

mkN011 : Str -> N ;
mkN011 base =
  case base of {
    base_1 => lin N
      { s = table {
              Nom => table {
                       Sg => base_1 ;
                       Pl => base_1+"ы"
                     } ;
              Acc => table {
                       Sg => base_1 ;
                       Pl => base_1+"ы"
                     } ;
              Dat => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"оў"
                     } ;
              Loc => table {
                       Sg => base_1+"е" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ам" ;
                         Pl => base_1+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN011"
  } ;

mkN012 : Str -> N ;
mkN012 base =
  case base of {
    base_1+"а" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"у" ;
                       Pl => base_1
                     } ;
              Dat => table {
                       Sg => base_1+"е" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"ы" ;
                       Pl => base_1
                     } ;
              Loc => table {
                       Sg => base_1+"е" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ай" ;
                         Pl => base_1+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN012"
  } ;

mkN013 : Str -> N ;
mkN013 base =
  case base of {
    base_1 => lin N
      { s = table {
              Nom => table {
                       Sg => base_1 ;
                       Pl => base_1+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"аў"
                     } ;
              Dat => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"аў"
                     } ;
              Loc => table {
                       Sg => base_1+"е" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ам" ;
                         Pl => base_1+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN013"
  } ;

mkN014 : Str -> N ;
mkN014 base =
  case base of {
    base_1+"е"+base_2@? => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"е"+base_2 ;
                       Pl => base_1+"я"+base_2+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"е"+base_2 ;
                       Pl => base_1+"я"+base_2+"ы"
                     } ;
              Dat => table {
                       Sg => base_1+"е"+base_2+"у" ;
                       Pl => base_1+"я"+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"е"+base_2+"у" ;
                       Pl => base_1+"я"+base_2+"оў"
                     } ;
              Loc => table {
                       Sg => base_1+"е"+base_2+"е" ;
                       Pl => base_1+"я"+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"е"+base_2+"ам" ;
                         Pl => base_1+"я"+base_2+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN014"
  } ;

mkN015 : Str -> N ;
mkN015 base =
  case base of {
    base_1+"о"+base_2@? => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"о"+base_2 ;
                       Pl => base_1+base_2+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"о"+base_2 ;
                       Pl => base_1+base_2+"і"
                     } ;
              Dat => table {
                       Sg => base_1+base_2+"у" ;
                       Pl => base_1+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+base_2+"а" ;
                       Pl => base_1+base_2+"оў"
                     } ;
              Loc => table {
                       Sg => base_1+base_2+"у" ;
                       Pl => base_1+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+base_2+"ом" ;
                         Pl => base_1+base_2+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN015"
  } ;

mkN016 : Str -> N ;
mkN016 base =
  case base of {
    base_1+"а" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"ы"
                     } ;
              Dat => table {
                       Sg => base_1+"е" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"ы" ;
                       Pl => base_1
                     } ;
              Loc => table {
                       Sg => base_1+"е" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ай" ;
                         Pl => base_1+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN016"
  } ;

mkN017 : Str -> N ;
mkN017 base =
  case base of {
    base_1+"й" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"й" ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"й" ;
                       Pl => base_1+"і"
                     } ;
              Dat => table {
                       Sg => base_1+"ю" ;
                       Pl => base_1+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"я" ;
                       Pl => base_1+"яў"
                     } ;
              Loc => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"ем" ;
                         Pl => base_1+"ямі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN017"
  } ;

mkN018 : Str -> N ;
mkN018 base =
  case base of {
    base_1+"ё"+base_2@? => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ё"+base_2 ;
                       Pl => base_1+base_2+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+base_2+"а" ;
                       Pl => base_1+base_2+"оў"
                     } ;
              Dat => table {
                       Sg => base_1+base_2+"у" ;
                       Pl => base_1+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+base_2+"а" ;
                       Pl => base_1+base_2+"оў"
                     } ;
              Loc => table {
                       Sg => base_1+base_2+"е" ;
                       Pl => base_1+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+base_2+"ом" ;
                         Pl => base_1+base_2+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN018"
  } ;

mkN019 : Str -> N ;
mkN019 base =
  case base of {
    base_1 => lin N
      { s = table {
              Nom => table {
                       Sg => base_1 ;
                       Pl => base_1+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"оў"
                     } ;
              Dat => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"оў"
                     } ;
              Loc => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ом" ;
                         Pl => base_1+"амі"
                       }
            } ;
        Voc = table {
                Sg => base_1+"у" ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN019"
  } ;

mkN020 : Str -> N ;
mkN020 base =
  case base of {
    base_1+"га" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"га" ;
                       Pl => base_1+"гі"
                     } ;
              Acc => table {
                       Sg => base_1+"гу" ;
                       Pl => base_1+"гі"
                     } ;
              Dat => table {
                       Sg => base_1+"зе" ;
                       Pl => base_1+"гам"
                     } ;
              Gen => table {
                       Sg => base_1+"гі" ;
                       Pl => base_1+"г"
                     } ;
              Loc => table {
                       Sg => base_1+"зе" ;
                       Pl => base_1+"гах"
                     } ;
              Instr => table {
                         Sg => base_1+"гой" ;
                         Pl => base_1+"гамі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN020"
  } ;

mkN021 : Str -> N ;
mkN021 base =
  case base of {
    base_1+"га" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"га" ;
                       Pl => base_1+"гі"
                     } ;
              Acc => table {
                       Sg => base_1+"гу" ;
                       Pl => base_1+"гі"
                     } ;
              Dat => table {
                       Sg => base_1+"зе" ;
                       Pl => base_1+"гам"
                     } ;
              Gen => table {
                       Sg => base_1+"гі" ;
                       Pl => base_1+"г"
                     } ;
              Loc => table {
                       Sg => base_1+"зе" ;
                       Pl => base_1+"гах"
                     } ;
              Instr => table {
                         Sg => base_1+"гай" ;
                         Pl => base_1+"гамі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN021"
  } ;

mkN022 : Str -> N ;
mkN022 base =
  case base of {
    base_1+"й" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"й" ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"я" ;
                       Pl => base_1+"яў"
                     } ;
              Dat => table {
                       Sg => base_1+"ю" ;
                       Pl => base_1+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"я" ;
                       Pl => base_1+"яў"
                     } ;
              Loc => table {
                       Sg => base_1+"ю" ;
                       Pl => base_1+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"ем" ;
                         Pl => base_1+"ямі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN022"
  } ;

mkN023 : Str -> N ;
mkN023 base =
  case base of {
    base_1+"та" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"та" ;
                       Pl => base_1+"ты"
                     } ;
              Acc => table {
                       Sg => base_1+"ту" ;
                       Pl => base_1+"ты"
                     } ;
              Dat => table {
                       Sg => base_1+"це" ;
                       Pl => base_1+"там"
                     } ;
              Gen => table {
                       Sg => base_1+"ты" ;
                       Pl => base_1+"т"
                     } ;
              Loc => table {
                       Sg => base_1+"це" ;
                       Pl => base_1+"тах"
                     } ;
              Instr => table {
                         Sg => base_1+"тай" ;
                         Pl => base_1+"тамі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN023"
  } ;

mkN024 : Str -> N ;
mkN024 base =
  case base of {
    base_1+"а" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"ы"
                     } ;
              Dat => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"аў"
                     } ;
              Loc => table {
                       Sg => base_1+"е" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ам" ;
                         Pl => base_1+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN024"
  } ;

mkN025 : Str -> N ;
mkN025 base =
  case base of {
    base_1+"т" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"т" ;
                       Pl => base_1+"ты"
                     } ;
              Acc => table {
                       Sg => base_1+"та" ;
                       Pl => base_1+"тоў"
                     } ;
              Dat => table {
                       Sg => base_1+"ту" ;
                       Pl => base_1+"там"
                     } ;
              Gen => table {
                       Sg => base_1+"та" ;
                       Pl => base_1+"тоў"
                     } ;
              Loc => table {
                       Sg => base_1+"це" ;
                       Pl => base_1+"тах"
                     } ;
              Instr => table {
                         Sg => base_1+"там" ;
                         Pl => base_1+"тамі"
                       }
            } ;
        Voc = table {
                Sg => base_1+"це" ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN025"
  } ;

mkN026 : Str -> N ;
mkN026 base =
  case base of {
    base_1+"ка" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ка" ;
                       Pl => base_1+"кі"
                     } ;
              Acc => table {
                       Sg => base_1+"ку" ;
                       Pl => base_1+"кі"
                     } ;
              Dat => table {
                       Sg => base_1+"цы" ;
                       Pl => base_1+"кам"
                     } ;
              Gen => table {
                       Sg => base_1+"кі" ;
                       Pl => base_1+"к"
                     } ;
              Loc => table {
                       Sg => base_1+"цы" ;
                       Pl => base_1+"ках"
                     } ;
              Instr => table {
                         Sg => base_1+"кай" ;
                         Pl => base_1+"камі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN026"
  } ;

mkN027 : Str -> N ;
mkN027 base =
  case base of {
    base_1 => lin N
      { s = table {
              Nom => table {
                       Sg => base_1 ;
                       Pl => base_1+"ы"
                     } ;
              Acc => table {
                       Sg => base_1 ;
                       Pl => base_1+"ы"
                     } ;
              Dat => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"аў"
                     } ;
              Loc => table {
                       Sg => base_1+"зе" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ам" ;
                         Pl => base_1+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN027"
  } ;

mkN028 : Str -> N ;
mkN028 base =
  case base of {
    base_1+"е"+base_2@? => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"е"+base_2 ;
                       Pl => base_1+"я"+base_2+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"е"+base_2+"а" ;
                       Pl => base_1+"я"+base_2+"оў"
                     } ;
              Dat => table {
                       Sg => base_1+"е"+base_2+"у" ;
                       Pl => base_1+"я"+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"е"+base_2+"а" ;
                       Pl => base_1+"я"+base_2+"оў"
                     } ;
              Loc => table {
                       Sg => base_1+"е"+base_2+"ы" ;
                       Pl => base_1+"я"+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"е"+base_2+"ам" ;
                         Pl => base_1+"я"+base_2+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN028"
  } ;

mkN029 : Str -> N ;
mkN029 base =
  case base of {
    base_1+"о"+base_2@? => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"о"+base_2 ;
                       Pl => base_1+"а"+base_2+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"а"+base_2+"а" ;
                       Pl => base_1+"а"+base_2+"оў"
                     } ;
              Dat => table {
                       Sg => base_1+"а"+base_2+"у" ;
                       Pl => base_1+"а"+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"а"+base_2+"а" ;
                       Pl => base_1+"а"+base_2+"оў"
                     } ;
              Loc => table {
                       Sg => base_1+"а"+base_2+"е" ;
                       Pl => base_1+"а"+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"а"+base_2+"ом" ;
                         Pl => base_1+"а"+base_2+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN029"
  } ;

mkN030 : Str -> N ;
mkN030 base =
  case base of {
    base_1@?+"о"+base_2 => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"о"+base_2 ;
                       Pl => base_1+"а"+base_2+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"о"+base_2 ;
                       Pl => base_1+"а"+base_2+"і"
                     } ;
              Dat => table {
                       Sg => base_1+"о"+base_2+"у" ;
                       Pl => base_1+"а"+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"о"+base_2+"а" ;
                       Pl => base_1+"а"+base_2+"оў"
                     } ;
              Loc => table {
                       Sg => base_1+"о"+base_2+"у" ;
                       Pl => base_1+"а"+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"о"+base_2+"ам" ;
                         Pl => base_1+"а"+base_2+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN030"
  } ;

mkN031 : Str -> N ;
mkN031 base =
  case base of {
    base_1 => lin N
      { s = table {
              Nom => table {
                       Sg => base_1 ;
                       Pl => base_1+"ы"
                     } ;
              Acc => table {
                       Sg => base_1 ;
                       Pl => base_1+"ы"
                     } ;
              Dat => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"аў"
                     } ;
              Loc => table {
                       Sg => base_1+"е" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ам" ;
                         Pl => base_1+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN031"
  } ;

mkN032 : Str -> N ;
mkN032 base =
  case base of {
    base_1+"т" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"т" ;
                       Pl => base_1+"ты"
                     } ;
              Acc => table {
                       Sg => base_1+"т" ;
                       Pl => base_1+"ты"
                     } ;
              Dat => table {
                       Sg => base_1+"ту" ;
                       Pl => base_1+"там"
                     } ;
              Gen => table {
                       Sg => base_1+"та" ;
                       Pl => base_1+"таў"
                     } ;
              Loc => table {
                       Sg => base_1+"це" ;
                       Pl => base_1+"тах"
                     } ;
              Instr => table {
                         Sg => base_1+"там" ;
                         Pl => base_1+"тамі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN032"
  } ;

mkN033 : Str -> N ;
mkN033 base =
  case base of {
    base_1+"ог" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ог" ;
                       Pl => base_1+"агі"
                     } ;
              Acc => table {
                       Sg => base_1+"ога" ;
                       Pl => base_1+"агоў"
                     } ;
              Dat => table {
                       Sg => base_1+"огу" ;
                       Pl => base_1+"агам"
                     } ;
              Gen => table {
                       Sg => base_1+"ога" ;
                       Pl => base_1+"агоў"
                     } ;
              Loc => table {
                       Sg => base_1+"озе" ;
                       Pl => base_1+"агах"
                     } ;
              Instr => table {
                         Sg => base_1+"огам" ;
                         Pl => base_1+"агамі"
                       }
            } ;
        Voc = table {
                Sg => base_1+"ожа" ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN033"
  } ;

mkN034 : Str -> N ;
mkN034 base =
  case base of {
    base_1 => lin N
      { s = table {
              Nom => table {
                       Sg => base_1 ;
                       Pl => base_1+"ы"
                     } ;
              Acc => table {
                       Sg => base_1 ;
                       Pl => base_1+"ы"
                     } ;
              Dat => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"оў"
                     } ;
              Loc => table {
                       Sg => base_1+"ы" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ом" ;
                         Pl => base_1+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN034"
  } ;

mkN035 : Str -> N ;
mkN035 base =
  case base of {
    base_1+"о"+base_2@("ўб"|"рб"|?) => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"о"+base_2 ;
                       Pl => base_1+"а"+base_2+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"о"+base_2 ;
                       Pl => base_1+"а"+base_2+"ы"
                     } ;
              Dat => table {
                       Sg => base_1+"а"+base_2+"у" ;
                       Pl => base_1+"а"+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"а"+base_2+"а" ;
                       Pl => base_1+"а"+base_2+"оў"
                     } ;
              Loc => table {
                       Sg => base_1+"а"+base_2+"е" ;
                       Pl => base_1+"а"+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"а"+base_2+"ом" ;
                         Pl => base_1+"а"+base_2+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN035"
  } ;

mkN036 : Str -> N ;
mkN036 base =
  case base of {
    base_1+"а" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"ы"
                     } ;
              Dat => table {
                       Sg => base_1+"ы" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"ы" ;
                       Pl => base_1
                     } ;
              Loc => table {
                       Sg => base_1+"ы" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ай" ;
                         Pl => base_1+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN036"
  } ;

mkN037 : Str -> N ;
mkN037 base =
  case base of {
    base_1 => lin N
      { s = table {
              Nom => table {
                       Sg => base_1 ;
                       Pl => base_1+"ы"
                     } ;
              Acc => table {
                       Sg => base_1 ;
                       Pl => base_1+"ы"
                     } ;
              Dat => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"аў"
                     } ;
              Loc => table {
                       Sg => base_1+"зе" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ам" ;
                         Pl => base_1+"амі"
                       }
            } ;
        Voc = table {
                Sg => base_1+"зе" ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN037"
  } ;

mkN038 : Str -> N ;
mkN038 base =
  case base of {
    base_1 => lin N
      { s = table {
              Nom => table {
                       Sg => base_1 ;
                       Pl => base_1+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"оў"
                     } ;
              Dat => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"оў"
                     } ;
              Loc => table {
                       Sg => base_1+"е" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ам" ;
                         Pl => base_1+"амі"
                       }
            } ;
        Voc = table {
                Sg => base_1+"е" ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN038"
  } ;

mkN039 : Str -> N ;
mkN039 base =
  case base of {
    base_1+"а" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"ы"
                     } ;
              Dat => table {
                       Sg => base_1+"е" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"ы" ;
                       Pl => base_1+"аў"
                     } ;
              Loc => table {
                       Sg => base_1+"е" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ай" ;
                         Pl => base_1+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN039"
  } ;

mkN040 : Str -> N ;
mkN040 base =
  case base of {
    base_1+"й"+base_2@?+"о" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"й"+base_2+"о" ;
                       Pl => base_1+"й"+base_2+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"й"+base_2+"о" ;
                       Pl => base_1+"й"+base_2+"ы"
                     } ;
              Dat => table {
                       Sg => base_1+"й"+base_2+"у" ;
                       Pl => base_1+"й"+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"й"+base_2+"а" ;
                       Pl => base_1+"е"+base_2
                     } ;
              Loc => table {
                       Sg => base_1+"й"+base_2+"ы" ;
                       Pl => base_1+"й"+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"й"+base_2+"ом" ;
                         Pl => base_1+"й"+base_2+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN040"
  } ;

mkN041 : Str -> N ;
mkN041 base =
  case base of {
    base_1+"е"+base_2@? => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"е"+base_2 ;
                       Pl => base_1+"я"+base_2+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"е"+base_2 ;
                       Pl => base_1+"я"+base_2+"і"
                     } ;
              Dat => table {
                       Sg => base_1+"е"+base_2+"у" ;
                       Pl => base_1+"я"+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"е"+base_2+"у" ;
                       Pl => base_1+"я"+base_2+"оў"
                     } ;
              Loc => table {
                       Sg => base_1+"е"+base_2+"у" ;
                       Pl => base_1+"я"+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"е"+base_2+"ам" ;
                         Pl => base_1+"я"+base_2+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN041"
  } ;

mkN042 : Str -> N ;
mkN042 base =
  case base of {
    base_1 => lin N
      { s = table {
              Nom => table {
                       Sg => base_1 ;
                       Pl => base_1+"ы"
                     } ;
              Acc => table {
                       Sg => base_1 ;
                       Pl => base_1+"ы"
                     } ;
              Dat => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"аў"
                     } ;
              Loc => table {
                       Sg => base_1+"ы" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ам" ;
                         Pl => base_1+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN042"
  } ;

mkN043 : Str -> N ;
mkN043 base =
  case base of {
    base_1 => lin N
      { s = table {
              Nom => table {
                       Sg => base_1 ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => base_1 ;
                       Pl => base_1+"і"
                     } ;
              Dat => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"аў"
                     } ;
              Loc => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ам" ;
                         Pl => base_1+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN043"
  } ;

mkN044 : Str -> N ;
mkN044 base =
  case base of {
    base_1@?+"о"+base_2 => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"о"+base_2 ;
                       Pl => base_1+"а"+base_2+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"о"+base_2 ;
                       Pl => base_1+"а"+base_2+"і"
                     } ;
              Dat => table {
                       Sg => base_1+"о"+base_2+"у" ;
                       Pl => base_1+"а"+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"о"+base_2+"у" ;
                       Pl => base_1+"а"+base_2+"оў"
                     } ;
              Loc => table {
                       Sg => base_1+"о"+base_2+"у" ;
                       Pl => base_1+"а"+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"о"+base_2+"ам" ;
                         Pl => base_1+"а"+base_2+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN044"
  } ;

mkN045 : Str -> N ;
mkN045 base =
  case base of {
    base_1 => lin N
      { s = table {
              Nom => table {
                       Sg => base_1 ;
                       Pl => base_1+"ы"
                     } ;
              Acc => table {
                       Sg => base_1 ;
                       Pl => base_1+"ы"
                     } ;
              Dat => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"аў"
                     } ;
              Loc => table {
                       Sg => base_1+"е" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ам" ;
                         Pl => base_1+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN045"
  } ;

mkN046 : Str -> N ;
mkN046 base =
  case base of {
    base_1 => lin N
      { s = table {
              Nom => table {
                       Sg => base_1 ;
                       Pl => base_1+"ы"
                     } ;
              Acc => table {
                       Sg => base_1 ;
                       Pl => base_1+"ы"
                     } ;
              Dat => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"аў"
                     } ;
              Loc => table {
                       Sg => base_1+"ы" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ам" ;
                         Pl => base_1+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN046"
  } ;

mkN047 : Str -> N ;
mkN047 base =
  case base of {
    base_1+"о"+base_2@?+"т" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"о"+base_2+"т" ;
                       Pl => base_1+"а"+base_2+"ты"
                     } ;
              Acc => table {
                       Sg => base_1+"о"+base_2+"т" ;
                       Pl => base_1+"а"+base_2+"ты"
                     } ;
              Dat => table {
                       Sg => base_1+"о"+base_2+"ту" ;
                       Pl => base_1+"а"+base_2+"там"
                     } ;
              Gen => table {
                       Sg => base_1+"о"+base_2+"та" ;
                       Pl => base_1+"а"+base_2+"тоў"
                     } ;
              Loc => table {
                       Sg => base_1+"о"+base_2+"це" ;
                       Pl => base_1+"а"+base_2+"тах"
                     } ;
              Instr => table {
                         Sg => base_1+"о"+base_2+"там" ;
                         Pl => base_1+"а"+base_2+"тамі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN047"
  } ;

mkN048 : Str -> N ;
mkN048 base =
  case base of {
    base_1@("пл"|?)+"о"+base_2 => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"о"+base_2 ;
                       Pl => base_1+"а"+base_2+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"о"+base_2 ;
                       Pl => base_1+"а"+base_2+"ы"
                     } ;
              Dat => table {
                       Sg => base_1+"о"+base_2+"у" ;
                       Pl => base_1+"а"+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"о"+base_2+"а" ;
                       Pl => base_1+"а"+base_2+"оў"
                     } ;
              Loc => table {
                       Sg => base_1+"о"+base_2+"зе" ;
                       Pl => base_1+"а"+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"о"+base_2+"ам" ;
                         Pl => base_1+"а"+base_2+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN048"
  } ;

mkN049 : Str -> N ;
mkN049 base =
  case base of {
    base_1+"г" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"г" ;
                       Pl => base_1+"зья"
                     } ;
              Acc => table {
                       Sg => base_1+"га" ;
                       Pl => base_1+"зей"
                     } ;
              Dat => table {
                       Sg => base_1+"гу" ;
                       Pl => base_1+"зьям"
                     } ;
              Gen => table {
                       Sg => base_1+"га" ;
                       Pl => base_1+"зей"
                     } ;
              Loc => table {
                       Sg => base_1+"гу" ;
                       Pl => base_1+"зьях"
                     } ;
              Instr => table {
                         Sg => base_1+"гам" ;
                         Pl => base_1+"зьямі"
                       }
            } ;
        Voc = table {
                Sg => base_1+"жа" ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN049"
  } ;

mkN050 : Str -> N ;
mkN050 base =
  case base of {
    base_1 => lin N
      { s = table {
              Nom => table {
                       Sg => base_1 ;
                       Pl => base_1+"ы"
                     } ;
              Acc => table {
                       Sg => base_1 ;
                       Pl => base_1+"ы"
                     } ;
              Dat => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"оў"
                     } ;
              Loc => table {
                       Sg => base_1+"е" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ам" ;
                         Pl => base_1+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN050"
  } ;

mkN051 : Str -> N ;
mkN051 base =
  case base of {
    base_1+"ва" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ва" ;
                       Pl => base_1+"вы"
                     } ;
              Acc => table {
                       Sg => base_1+"ву" ;
                       Pl => base_1+"вы"
                     } ;
              Dat => table {
                       Sg => base_1+"ве" ;
                       Pl => base_1+"вам"
                     } ;
              Gen => table {
                       Sg => base_1+"вы" ;
                       Pl => base_1+"ў"
                     } ;
              Loc => table {
                       Sg => base_1+"ве" ;
                       Pl => base_1+"вах"
                     } ;
              Instr => table {
                         Sg => base_1+"вой" ;
                         Pl => base_1+"вамі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN051"
  } ;

mkN052 : Str -> N ;
mkN052 base =
  case base of {
    base_1+"е"+base_2@?+"ь" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"е"+base_2+"ь" ;
                       Pl => base_1+"я"+base_2+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"е"+base_2+"ь" ;
                       Pl => base_1+"я"+base_2+"і"
                     } ;
              Dat => table {
                       Sg => base_1+"е"+base_2+"ю" ;
                       Pl => base_1+"я"+base_2+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"е"+base_2+"я" ;
                       Pl => base_1+"я"+base_2+"ёў"
                     } ;
              Loc => table {
                       Sg => base_1+"е"+base_2+"і" ;
                       Pl => base_1+"я"+base_2+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"е"+base_2+"ем" ;
                         Pl => base_1+"я"+base_2+"ямі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN052"
  } ;

mkN053 : Str -> N ;
mkN053 base =
  case base of {
    base_1+"е"+base_2@? => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"е"+base_2 ;
                       Pl => base_1+"я"+base_2+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"е"+base_2 ;
                       Pl => base_1+"я"+base_2+"ы"
                     } ;
              Dat => table {
                       Sg => base_1+"е"+base_2+"у" ;
                       Pl => base_1+"я"+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"е"+base_2+"а" ;
                       Pl => base_1+"я"+base_2+"оў"
                     } ;
              Loc => table {
                       Sg => base_1+"е"+base_2+"е" ;
                       Pl => base_1+"я"+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"е"+base_2+"ам" ;
                         Pl => base_1+"я"+base_2+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN053"
  } ;

mkN054 : Str -> N ;
mkN054 base =
  case base of {
    base_1+"о"+base_2@?+"т" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"о"+base_2+"т" ;
                       Pl => base_1+"а"+base_2+"ты"
                     } ;
              Acc => table {
                       Sg => base_1+"о"+base_2+"т" ;
                       Pl => base_1+"а"+base_2+"ты"
                     } ;
              Dat => table {
                       Sg => base_1+"а"+base_2+"ту" ;
                       Pl => base_1+"а"+base_2+"там"
                     } ;
              Gen => table {
                       Sg => base_1+"а"+base_2+"та" ;
                       Pl => base_1+"а"+base_2+"тоў"
                     } ;
              Loc => table {
                       Sg => base_1+"а"+base_2+"це" ;
                       Pl => base_1+"а"+base_2+"тах"
                     } ;
              Instr => table {
                         Sg => base_1+"а"+base_2+"том" ;
                         Pl => base_1+"а"+base_2+"тамі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN054"
  } ;

mkN055 : Str -> N ;
mkN055 base =
  case base of {
    base_1+"о" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"о" ;
                       Pl => base_1+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"о" ;
                       Pl => base_1+"ы"
                     } ;
              Dat => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"аў"
                     } ;
              Loc => table {
                       Sg => base_1+"е" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ом" ;
                         Pl => base_1+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN055"
  } ;

mkN056 : Str -> N ;
mkN056 base =
  case base of {
    base_1+"т" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"т" ;
                       Pl => base_1+"ты"
                     } ;
              Acc => table {
                       Sg => base_1+"т" ;
                       Pl => base_1+"ты"
                     } ;
              Dat => table {
                       Sg => base_1+"ту" ;
                       Pl => base_1+"там"
                     } ;
              Gen => table {
                       Sg => base_1+"ту" ;
                       Pl => base_1+"таў"
                     } ;
              Loc => table {
                       Sg => base_1+"це" ;
                       Pl => base_1+"тах"
                     } ;
              Instr => table {
                         Sg => base_1+"там" ;
                         Pl => base_1+"тамі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN056"
  } ;

mkN057 : Str -> N ;
mkN057 base =
  case base of {
    base_1+"о"+base_2@("лас"|?) => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"о"+base_2 ;
                       Pl => base_1+"а"+base_2+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"о"+base_2 ;
                       Pl => base_1+"а"+base_2+"ы"
                     } ;
              Dat => table {
                       Sg => base_1+"о"+base_2+"у" ;
                       Pl => base_1+"а"+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"о"+base_2+"у" ;
                       Pl => base_1+"а"+base_2+"оў"
                     } ;
              Loc => table {
                       Sg => base_1+"о"+base_2+"е" ;
                       Pl => base_1+"а"+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"о"+base_2+"ам" ;
                         Pl => base_1+"а"+base_2+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN057"
  } ;

mkN058 : Str -> N ;
mkN058 base =
  case base of {
    base_1+"ё"+base_2@? => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ё"+base_2 ;
                       Pl => "і"+base_1+"ь"+base_2+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"ё"+base_2 ;
                       Pl => "і"+base_1+"ь"+base_2+"ы"
                     } ;
              Dat => table {
                       Sg => base_1+"ё"+base_2+"у" ;
                       Pl => "і"+base_1+"ь"+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"ё"+base_2+"у" ;
                       Pl => "і"+base_1+"ь"+base_2+"оў"
                     } ;
              Loc => table {
                       Sg => base_1+"ё"+base_2+"зе" ;
                       Pl => "і"+base_1+"ь"+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ё"+base_2+"ам" ;
                         Pl => "і"+base_1+"ь"+base_2+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN058"
  } ;

mkN059 : Str -> N ;
mkN059 base =
  case base of {
    base_1+"о"+base_2@("ўш"|?) => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"о"+base_2 ;
                       Pl => base_1+"а"+base_2+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"о"+base_2 ;
                       Pl => base_1+"а"+base_2+"ы"
                     } ;
              Dat => table {
                       Sg => base_1+"а"+base_2+"у" ;
                       Pl => base_1+"а"+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"а"+base_2+"а" ;
                       Pl => base_1+"а"+base_2+"оў"
                     } ;
              Loc => table {
                       Sg => base_1+"а"+base_2+"ы" ;
                       Pl => base_1+"а"+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"а"+base_2+"ом" ;
                         Pl => base_1+"а"+base_2+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN059"
  } ;

mkN060 : Str -> N ;
mkN060 base =
  case base of {
    base_1+"о"+base_2@(?+?+?) => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"о"+base_2 ;
                       Pl => base_1+"а"+base_2+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"о"+base_2+"а" ;
                       Pl => base_1+"а"+base_2+"оў"
                     } ;
              Dat => table {
                       Sg => base_1+"о"+base_2+"у" ;
                       Pl => base_1+"а"+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"о"+base_2+"а" ;
                       Pl => base_1+"а"+base_2+"оў"
                     } ;
              Loc => table {
                       Sg => base_1+"о"+base_2+"е" ;
                       Pl => base_1+"а"+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"о"+base_2+"ам" ;
                         Pl => base_1+"а"+base_2+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN060"
  } ;

mkN061 : Str -> N ;
mkN061 base =
  case base of {
    base_1 => lin N
      { s = table {
              Nom => table {
                       Sg => base_1 ;
                       Pl => base_1+"і" --guessed
                     } ;
              Acc => table {
                       Sg => base_1 ; --guessed
                       Pl => base_1+"і" --guessed
                     } ;
              Dat => table {
                       Sg => base_1+"у" ; --guessed
                       Pl => base_1+"ам" --guessed
                     } ;
              Gen => table {
                       Sg => base_1+"а" ; --guessed
                       Pl => base_1+"оў" --guessed
                     } ;
              Loc => table {
                       Sg => base_1+"у" ; --guessed
                       Pl => base_1+"ах" --guessed
                     } ;
              Instr => table {
                         Sg => base_1+"ом" ; --guessed
                         Pl => base_1+"амі" --guessed
                       }
            } ;
        Voc = table {
                Sg => base_1+"у" ; --guessed
                Pl => nonExist
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN061"
  } ;

mkN062 : Str -> N ;
mkN062 base =
  case base of {
    base_1 => lin N
      { s = table {
              Nom => table {
                       Sg => base_1 ;
                       Pl => base_1+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"аў"
                     } ;
              Dat => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"аў"
                     } ;
              Loc => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ам" ;
                         Pl => base_1+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN062"
  } ;

mkN063 : Str -> N ;
mkN063 base =
  case base of {
    base_1 => lin N
      { s = table {
              Nom => table {
                       Sg => base_1 ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"аў"
                     } ;
              Dat => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"аў"
                     } ;
              Loc => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ам" ;
                         Pl => base_1+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN063"
  } ;

mkN064 : Str -> N ;
mkN064 base =
  case base of {
    base_1+"а" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"ы"
                     } ;
              Dat => table {
                       Sg => base_1+"ы" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"ы" ;
                       Pl => base_1
                     } ;
              Loc => table {
                       Sg => base_1+"ы" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ой" ;
                         Pl => base_1+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN064"
  } ;

mkN065 : Str -> N ;
mkN065 base =
  case base of {
    base_1+"о" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"о" ;
                       Pl => base_1+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"о" ;
                       Pl => base_1+"ы"
                     } ;
              Dat => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"оў"
                     } ;
              Loc => table {
                       Sg => base_1+"е" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ом" ;
                         Pl => base_1+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN065"
  } ;

mkN066 : Str -> N ;
mkN066 base =
  case base of {
    base_1+"о"+base_2@("лад"|?) => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"о"+base_2 ;
                       Pl => base_1+"а"+base_2+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"о"+base_2 ;
                       Pl => base_1+"а"+base_2+"ы"
                     } ;
              Dat => table {
                       Sg => base_1+"о"+base_2+"у" ;
                       Pl => base_1+"а"+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"о"+base_2+"у" ;
                       Pl => base_1+"а"+base_2+"оў"
                     } ;
              Loc => table {
                       Sg => base_1+"о"+base_2+"зе" ;
                       Pl => base_1+"а"+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"о"+base_2+"ам" ;
                         Pl => base_1+"а"+base_2+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN066"
  } ;

mkN067 : Str -> N ;
mkN067 base =
  case base of {
    base_1+"й" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"й" ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"й" ;
                       Pl => base_1+"і"
                     } ;
              Dat => table {
                       Sg => base_1+"ю" ;
                       Pl => base_1+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"я" ;
                       Pl => base_1+"ёў"
                     } ;
              Loc => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"ем" ;
                         Pl => base_1+"ямі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN067"
  } ;

mkN068 : Str -> N ;
mkN068 base =
  case base of {
    base_1+"й" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"й" ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"я" ;
                       Pl => base_1+"ёў"
                     } ;
              Dat => table {
                       Sg => base_1+"ю" ;
                       Pl => base_1+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"я" ;
                       Pl => base_1+"ёў"
                     } ;
              Loc => table {
                       Sg => base_1+"ю" ;
                       Pl => base_1+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"ем" ;
                         Pl => base_1+"ямі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN068"
  } ;

mkN069 : Str -> N ;
mkN069 base =
  case base of {
    base_1+"е"+base_2@? => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"е"+base_2 ;
                       Pl => base_1+"я"+base_2+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"е"+base_2 ;
                       Pl => base_1+"я"+base_2+"ы"
                     } ;
              Dat => table {
                       Sg => base_1+"я"+base_2+"у" ;
                       Pl => base_1+"я"+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"я"+base_2+"а" ;
                       Pl => base_1+"я"+base_2+"оў"
                     } ;
              Loc => table {
                       Sg => base_1+"я"+base_2+"ы" ;
                       Pl => base_1+"я"+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"я"+base_2+"ом" ;
                         Pl => base_1+"я"+base_2+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN069"
  } ;

mkN070 : Str -> N ;
mkN070 base =
  case base of {
    base_1+"а"+base_2@?+"а" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"а"+base_2+"а" ;
                       Pl => base_1+"о"+base_2+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"а"+base_2+"у" ;
                       Pl => base_1+"о"+base_2+"ы"
                     } ;
              Dat => table {
                       Sg => base_1+"а"+base_2+"е" ;
                       Pl => base_1+"о"+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"а"+base_2+"ы" ;
                       Pl => base_1+"о"+base_2
                     } ;
              Loc => table {
                       Sg => base_1+"а"+base_2+"е" ;
                       Pl => base_1+"о"+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"а"+base_2+"ой" ;
                         Pl => base_1+"о"+base_2+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN070"
  } ;

mkN071 : Str -> N ;
mkN071 base =
  case base of {
    base_1 => lin N
      { s = table {
              Nom => table {
                       Sg => base_1 ;
                       Pl => nonExist
                     } ;
              Acc => table {
                       Sg => base_1 ;
                       Pl => nonExist
                     } ;
              Dat => table {
                       Sg => base_1+"у" ;
                       Pl => nonExist
                     } ;
              Gen => table {
                       Sg => base_1+"у" ;
                       Pl => nonExist
                     } ;
              Loc => table {
                       Sg => base_1+"ы" ;
                       Pl => nonExist
                     } ;
              Instr => table {
                         Sg => base_1+"ом" ;
                         Pl => nonExist
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN071"
  } ;

mkN072 : Str -> N ;
mkN072 base =
  case base of {
    base_1+base_2@?+"я" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+base_2+"я" ;
                       Pl => base_1+base_2+"і"
                     } ;
              Acc => table {
                       Sg => base_1+base_2+"ю" ;
                       Pl => base_1+base_2+"і"
                     } ;
              Dat => table {
                       Sg => base_1+base_2+"і" ;
                       Pl => base_1+base_2+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+base_2+"і" ;
                       Pl => base_1+"е"+base_2+"ь"
                     } ;
              Loc => table {
                       Sg => base_1+base_2+"і" ;
                       Pl => base_1+base_2+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+base_2+"яй" ;
                         Pl => base_1+base_2+"ямі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN072"
  } ;

mkN073 : Str -> N ;
mkN073 base =
  case base of {
    base_1+"та" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"та" ;
                       Pl => base_1+"ты"
                     } ;
              Acc => table {
                       Sg => base_1+"та" ;
                       Pl => base_1+"ты"
                     } ;
              Dat => table {
                       Sg => base_1+"ту" ;
                       Pl => base_1+"там"
                     } ;
              Gen => table {
                       Sg => base_1+"та" ;
                       Pl => base_1+"таў"
                     } ;
              Loc => table {
                       Sg => base_1+"це" ;
                       Pl => base_1+"тах"
                     } ;
              Instr => table {
                         Sg => base_1+"там" ;
                         Pl => base_1+"тамі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN073"
  } ;

mkN074 : Str -> N ;
mkN074 base =
  case base of {
    base_1+"ая" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ая" ;
                       Pl => base_1+"ыя"
                     } ;
              Acc => table {
                       Sg => base_1+"ую" ;
                       Pl => base_1+"ыя"
                     } ;
              Dat => table {
                       Sg => base_1+"ай" ;
                       Pl => base_1+"ым"
                     } ;
              Gen => table {
                       Sg => base_1+"ай" ;
                       Pl => base_1+"ых"
                     } ;
              Loc => table {
                       Sg => base_1+"ай" ;
                       Pl => base_1+"ых"
                     } ;
              Instr => table {
                         Sg => base_1+"ай" ;
                         Pl => base_1+"ымі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN074"
  } ;

mkN075 : Str -> N ;
mkN075 base =
  case base of {
    base_1+base_2@?+"ня" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+base_2+"ня" ;
                       Pl => base_1+base_2+"ні"
                     } ;
              Acc => table {
                       Sg => base_1+base_2+"ню" ;
                       Pl => base_1+base_2+"ні"
                     } ;
              Dat => table {
                       Sg => base_1+base_2+"ні" ;
                       Pl => base_1+base_2+"ням"
                     } ;
              Gen => table {
                       Sg => base_1+base_2+"ні" ;
                       Pl => base_1+"ен"+base_2
                     } ;
              Loc => table {
                       Sg => base_1+base_2+"ні" ;
                       Pl => base_1+base_2+"нях"
                     } ;
              Instr => table {
                         Sg => base_1+base_2+"няй" ;
                         Pl => base_1+base_2+"нямі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN075"
  } ;

mkN076 : Str -> N ;
mkN076 base =
  case base of {
    base_1+base_2@?+"я" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+base_2+"я" ;
                       Pl => base_1+base_2+"і"
                     } ;
              Acc => table {
                       Sg => base_1+base_2+"ю" ;
                       Pl => base_1+base_2+"і"
                     } ;
              Dat => table {
                       Sg => base_1+base_2+"і" ;
                       Pl => base_1+base_2+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+base_2+"і" ;
                       Pl => base_1+"а"+base_2+"ь"
                     } ;
              Loc => table {
                       Sg => base_1+base_2+"і" ;
                       Pl => base_1+base_2+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+base_2+"яй" ;
                         Pl => base_1+base_2+"ямі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN076"
  } ;

mkN077 : Str -> N ;
mkN077 base =
  case base of {
    base_1+"ег" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ег" ;
                       Pl => base_1+"ягі"
                     } ;
              Acc => table {
                       Sg => base_1+"ег" ;
                       Pl => base_1+"ягі"
                     } ;
              Dat => table {
                       Sg => base_1+"егу" ;
                       Pl => base_1+"ягам"
                     } ;
              Gen => table {
                       Sg => base_1+"егу" ;
                       Pl => base_1+"ягоў"
                     } ;
              Loc => table {
                       Sg => base_1+"езе" ;
                       Pl => base_1+"ягах"
                     } ;
              Instr => table {
                         Sg => base_1+"егам" ;
                         Pl => base_1+"ягамі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN077"
  } ;

mkN078 : Str -> N ;
mkN078 base =
  case base of {
    base_1+"а" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"аў"
                     } ;
              Dat => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"ы" ;
                       Pl => base_1+"аў"
                     } ;
              Loc => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ам" ;
                         Pl => base_1+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN078"
  } ;

mkN079 : Str -> N ;
mkN079 base =
  case base of {
    base_1+"а"+base_2@?+"а" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"а"+base_2+"а" ;
                       Pl => base_1+"о"+base_2+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"а"+base_2+"у" ;
                       Pl => base_1+"о"+base_2+"ы"
                     } ;
              Dat => table {
                       Sg => base_1+"а"+base_2+"ы" ;
                       Pl => base_1+"о"+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"а"+base_2+"ы" ;
                       Pl => base_1+"о"+base_2
                     } ;
              Loc => table {
                       Sg => base_1+"а"+base_2+"ы" ;
                       Pl => base_1+"о"+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"а"+base_2+"ой" ;
                         Pl => base_1+"о"+base_2+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN079"
  } ;

mkN080 : Str -> N ;
mkN080 base =
  case base of {
    base_1+"а" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"ы"
                     } ;
              Dat => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"аў"
                     } ;
              Loc => table {
                       Sg => base_1+"ы" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ам" ;
                         Pl => base_1+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN080"
  } ;

mkN081 : Str -> N ;
mkN081 base =
  case base of {
    base_1 => lin N
      { s = table {
              Nom => table {
                       Sg => base_1 ;
                       Pl => base_1+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"аў"
                     } ;
              Dat => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"аў"
                     } ;
              Loc => table {
                       Sg => base_1+"зе" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ам" ;
                         Pl => base_1+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN081"
  } ;

mkN082 : Str -> N ;
mkN082 base =
  case base of {
    base_1 => lin N
      { s = table {
              Nom => table {
                       Sg => base_1 ;
                       Pl => base_1+"ы"
                     } ;
              Acc => table {
                       Sg => base_1 ;
                       Pl => base_1+"ы"
                     } ;
              Dat => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"оў"
                     } ;
              Loc => table {
                       Sg => base_1+"зе" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ам" ;
                         Pl => base_1+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN082"
  } ;

mkN083 : Str -> N ;
mkN083 base =
  case base of {
    base_1+"а" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"аў"
                     } ;
              Dat => table {
                       Sg => base_1+"е" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"ы" ;
                       Pl => base_1+"аў"
                     } ;
              Loc => table {
                       Sg => base_1+"е" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ай" ;
                         Pl => base_1+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN083"
  } ;

mkN084 : Str -> N ;
mkN084 base =
  case base of {
    base_1 => lin N
      { s = table {
              Nom => table {
                       Sg => base_1 ;
                       Pl => base_1+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"оў"
                     } ;
              Dat => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"оў"
                     } ;
              Loc => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ам" ;
                         Pl => base_1+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN084"
  } ;

mkN085 : Str -> N ;
mkN085 base =
  case base of {
    base_1 => lin N
      { s = table {
              Nom => table {
                       Sg => base_1 ;
                       Pl => base_1+"ы"
                     } ;
              Acc => table {
                       Sg => base_1 ;
                       Pl => base_1+"ы"
                     } ;
              Dat => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"оў"
                     } ;
              Loc => table {
                       Sg => base_1+"зе" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ом" ;
                         Pl => base_1+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN085"
  } ;

mkN086 : Str -> N ;
mkN086 base =
  case base of {
    base_1+"от" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"от" ;
                       Pl => base_1+"аты"
                     } ;
              Acc => table {
                       Sg => base_1+"от" ;
                       Pl => base_1+"аты"
                     } ;
              Dat => table {
                       Sg => base_1+"оту" ;
                       Pl => base_1+"атам"
                     } ;
              Gen => table {
                       Sg => base_1+"ота" ;
                       Pl => base_1+"атоў"
                     } ;
              Loc => table {
                       Sg => base_1+"оце" ;
                       Pl => base_1+"атах"
                     } ;
              Instr => table {
                         Sg => base_1+"отам" ;
                         Pl => base_1+"атамі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN086"
  } ;

mkN087 : Str -> N ;
mkN087 base =
  case base of {
    base_1+"а" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"ы"
                     } ;
              Dat => table {
                       Sg => base_1+"зе" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"ы" ;
                       Pl => base_1
                     } ;
              Loc => table {
                       Sg => base_1+"зе" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ай" ;
                         Pl => base_1+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN087"
  } ;

mkN088 : Str -> N ;
mkN088 base =
  case base of {
    base_1 => lin N
      { s = table {
              Nom => table {
                       Sg => base_1 ;
                       Pl => base_1+"і" --guessed
                     } ;
              Acc => table {
                       Sg => base_1 ; --guessed
                       Pl => base_1+"і" --guessed
                     } ;
              Dat => table {
                       Sg => base_1+"у" ; --guessed
                       Pl => base_1+"ам" --guessed
                     } ;
              Gen => table {
                       Sg => base_1+"а" ; --guessed
                       Pl => base_1+"оў" --guessed
                     } ;
              Loc => table {
                       Sg => base_1+"у" ; --guessed
                       Pl => base_1+"ах" --guessed
                     } ;
              Instr => table {
                         Sg => base_1+"ом" ; --guessed
                         Pl => base_1+"амі" --guessed
                       }
            } ;
        Voc = table {
                Sg => base_1+"у" ; --guessed
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN088"
  } ;

mkN089 : Str -> N ;
mkN089 base =
  case base of {
    base_1+"о"+base_2@?+"ь" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"о"+base_2+"ь" ;
                       Pl => base_1+"а"+base_2+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"а"+base_2+"я" ;
                       Pl => base_1+"а"+base_2+"ёў"
                     } ;
              Dat => table {
                       Sg => base_1+"а"+base_2+"ю" ;
                       Pl => base_1+"а"+base_2+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"а"+base_2+"я" ;
                       Pl => base_1+"а"+base_2+"ёў"
                     } ;
              Loc => table {
                       Sg => base_1+"а"+base_2+"і" ;
                       Pl => base_1+"а"+base_2+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"а"+base_2+"ём" ;
                         Pl => base_1+"а"+base_2+"ямі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN089"
  } ;

mkN090 : Str -> N ;
mkN090 base =
  case base of {
    base_1 => lin N
      { s = table {
              Nom => table {
                       Sg => base_1 ;
                       Pl => base_1+"ы"
                     } ;
              Acc => table {
                       Sg => base_1 ;
                       Pl => base_1+"ы"
                     } ;
              Dat => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"оў"
                     } ;
              Loc => table {
                       Sg => base_1+"ы" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ам" ;
                         Pl => base_1+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN090"
  } ;

mkN091 : Str -> N ;
mkN091 base =
  case base of {
    base_1+"а" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"ы"
                     } ;
              Dat => table {
                       Sg => base_1+"е" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"ы" ;
                       Pl => base_1
                     } ;
              Loc => table {
                       Sg => base_1+"е" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ой" ;
                         Pl => base_1+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN091"
  } ;

mkN092 : Str -> N ;
mkN092 base =
  case base of {
    base_1+"я" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"я" ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"я" ;
                       Pl => base_1+"і"
                     } ;
              Dat => table {
                       Sg => base_1+"ю" ;
                       Pl => base_1+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"я" ;
                       Pl => base_1+"яў"
                     } ;
              Loc => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"ем" ;
                         Pl => base_1+"ямі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN092"
  } ;

mkN093 : Str -> N ;
mkN093 base =
  case base of {
    base_1+"е"+base_2@?+"я" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"е"+base_2+"я" ;
                       Pl => base_1+"я"+base_2+"ёны"
                     } ;
              Acc => table {
                       Sg => base_1+"е"+base_2+"я" ;
                       Pl => base_1+"я"+base_2+"ёны"
                     } ;
              Dat => table {
                       Sg => base_1+"е"+base_2+"ю" ;
                       Pl => base_1+"я"+base_2+"ёнам"
                     } ;
              Gen => table {
                       Sg => base_1+"е"+base_2+"я" ;
                       Pl => base_1+"я"+base_2+"ён"
                     } ;
              Loc => table {
                       Sg => base_1+"е"+base_2+"і" ;
                       Pl => base_1+"я"+base_2+"ёнах"
                     } ;
              Instr => table {
                         Sg => base_1+"е"+base_2+"ем" ;
                         Pl => base_1+"я"+base_2+"ёнамі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN093"
  } ;

mkN094 : Str -> N ;
mkN094 base =
  case base of {
    base_1+"ое"+base_2@(?+?) => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ое"+base_2 ;
                       Pl => base_1+"ая"+base_2+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"ое"+base_2 ;
                       Pl => base_1+"ая"+base_2+"ы"
                     } ;
              Dat => table {
                       Sg => base_1+"ое"+base_2+"у" ;
                       Pl => base_1+"ая"+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"ое"+base_2+"а" ;
                       Pl => base_1+"ая"+base_2+"оў"
                     } ;
              Loc => table {
                       Sg => base_1+"ое"+base_2+"зе" ;
                       Pl => base_1+"ая"+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ое"+base_2+"ам" ;
                         Pl => base_1+"ая"+base_2+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN094"
  } ;

mkN095 : Str -> N ;
mkN095 base =
  case base of {
    base_1 => lin N
      { s = table {
              Nom => table {
                       Sg => base_1 ;
                       Pl => base_1
                     } ;
              Acc => table {
                       Sg => base_1 ; --guessed
                       Pl => base_1 --guessed
                     } ;
              Dat => table {
                       Sg => base_1 ; --guessed
                       Pl => base_1 --guessed
                     } ;
              Gen => table {
                       Sg => base_1 ;
                       Pl => base_1
                     } ;
              Loc => table {
                       Sg => base_1 ; --guessed
                       Pl => base_1 --guessed
                     } ;
              Instr => table {
                         Sg => base_1 ; --guessed
                         Pl => base_1 --guessed
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN095"
  } ;

mkN096 : Str -> N ;
mkN096 base =
  case base of {
    base_1+"о"+base_2@?+"е" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"о"+base_2+"е" ;
                       Pl => base_1+"а"+base_2+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"о"+base_2+"е" ;
                       Pl => base_1+"а"+base_2+"і"
                     } ;
              Dat => table {
                       Sg => base_1+"о"+base_2+"ю" ;
                       Pl => base_1+"а"+base_2+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"о"+base_2+"я" ;
                       Pl => base_1+"а"+base_2+"ёў"
                     } ;
              Loc => table {
                       Sg => base_1+"о"+base_2+"і" ;
                       Pl => base_1+"а"+base_2+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"о"+base_2+"ем" ;
                         Pl => base_1+"а"+base_2+"ямі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN096"
  } ;

mkN097 : Str -> N ;
mkN097 base =
  case base of {
    base_1+"ка" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ка" ;
                       Pl => base_1+"кі"
                     } ;
              Acc => table {
                       Sg => base_1+"ку" ;
                       Pl => base_1+"кі"
                     } ;
              Dat => table {
                       Sg => base_1+"цэ" ;
                       Pl => base_1+"кам"
                     } ;
              Gen => table {
                       Sg => base_1+"кі" ;
                       Pl => base_1+"к"
                     } ;
              Loc => table {
                       Sg => base_1+"цэ" ;
                       Pl => base_1+"ках"
                     } ;
              Instr => table {
                         Sg => base_1+"кой" ;
                         Pl => base_1+"камі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN097"
  } ;

mkN098 : Str -> N ;
mkN098 base =
  case base of {
    base_1+"ь" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ь" ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"ь" ;
                       Pl => base_1+"і"
                     } ;
              Dat => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ей"
                     } ;
              Loc => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"лю" ;
                         Pl => base_1+"ямі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN098"
  } ;

mkN099 : Str -> N ;
mkN099 base =
  case base of {
    base_1 => lin N
      { s = table {
              Nom => table {
                       Sg => base_1 ;
                       Pl => base_1+"і" --guessed
                     } ;
              Acc => table {
                       Sg => base_1 ;
                       Pl => base_1+"і" --guessed
                     } ;
              Dat => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"ам" --guessed
                     } ;
              Gen => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"оў" --guessed
                     } ;
              Loc => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"ах" --guessed
                     } ;
              Instr => table {
                         Sg => base_1+"ом" ;
                         Pl => base_1+"амі" --guessed
                       }
            } ;
        Voc = table {
                Sg => base_1+"у" ; --guessed
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN099"
  } ;

mkN100 : Str -> N ;
mkN100 base =
  case base of {
    base_1+"ь" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ь" ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"ь" ;
                       Pl => base_1+"і"
                     } ;
              Dat => table {
                       Sg => base_1+"ю" ;
                       Pl => base_1+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"я" ;
                       Pl => base_1+"яў"
                     } ;
              Loc => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"ем" ;
                         Pl => base_1+"ямі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN100"
  } ;

mkN101 : Str -> N ;
mkN101 base =
  case base of {
    base_1+"ё"+base_2@? => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ё"+base_2 ;
                       Pl => base_1+"я"+base_2+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"ё"+base_2 ;
                       Pl => base_1+"я"+base_2+"ы"
                     } ;
              Dat => table {
                       Sg => base_1+"ё"+base_2+"у" ;
                       Pl => base_1+"я"+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"ё"+base_2+"у" ;
                       Pl => base_1+"я"+base_2+"оў"
                     } ;
              Loc => table {
                       Sg => base_1+"ё"+base_2+"зе" ;
                       Pl => base_1+"я"+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ё"+base_2+"ам" ;
                         Pl => base_1+"я"+base_2+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN101"
  } ;

mkN102 : Str -> N ;
mkN102 base =
  case base of {
    base_1+"а" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"ы"
                     } ;
              Dat => table {
                       Sg => base_1+"ы" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"ы" ;
                       Pl => base_1+"аў"
                     } ;
              Loc => table {
                       Sg => base_1+"ы" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ай" ;
                         Pl => base_1+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN102"
  } ;

mkN103 : Str -> N ;
mkN103 base =
  case base of {
    base_1+"о"+base_2@?+"т" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"о"+base_2+"т" ;
                       Pl => base_1+"э"+base_2+"ці"
                     } ;
              Acc => table {
                       Sg => base_1+"о"+base_2+"та" ;
                       Pl => base_1+"а"+base_2+"цей"
                     } ;
              Dat => table {
                       Sg => base_1+"о"+base_2+"ту" ;
                       Pl => base_1+"а"+base_2+"цям"
                     } ;
              Gen => table {
                       Sg => base_1+"о"+base_2+"та" ;
                       Pl => base_1+"а"+base_2+"цей"
                     } ;
              Loc => table {
                       Sg => base_1+"о"+base_2+"це" ;
                       Pl => base_1+"а"+base_2+"цях"
                     } ;
              Instr => table {
                         Sg => base_1+"о"+base_2+"там" ;
                         Pl => base_1+"а"+base_2+"цямі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN103"
  } ;

mkN104 : Str -> N ;
mkN104 base =
  case base of {
    base_1+"г" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"г" ;
                       Pl => base_1+"гі"
                     } ;
              Acc => table {
                       Sg => base_1+"г" ;
                       Pl => base_1+"гі"
                     } ;
              Dat => table {
                       Sg => base_1+"гу" ;
                       Pl => base_1+"гам"
                     } ;
              Gen => table {
                       Sg => base_1+"га" ;
                       Pl => base_1+"г"
                     } ;
              Loc => table {
                       Sg => base_1+"зе" ;
                       Pl => base_1+"гах"
                     } ;
              Instr => table {
                         Sg => base_1+"гам" ;
                         Pl => base_1+"гамі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN104"
  } ;

mkN105 : Str -> N ;
mkN105 base =
  case base of {
    base_1+"о"+base_2@? => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"о"+base_2 ;
                       Pl => base_1+"а"+base_2+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"о"+base_2 ;
                       Pl => base_1+"а"+base_2+"і"
                     } ;
              Dat => table {
                       Sg => base_1+"а"+base_2+"у" ;
                       Pl => base_1+"а"+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"а"+base_2+"а" ;
                       Pl => base_1+"а"+base_2+"оў"
                     } ;
              Loc => table {
                       Sg => base_1+"а"+base_2+"у" ;
                       Pl => base_1+"а"+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"а"+base_2+"ом" ;
                         Pl => base_1+"а"+base_2+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN105"
  } ;

mkN106 : Str -> N ;
mkN106 base =
  case base of {
    base_1+"е"+base_2@(?+?) => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"е"+base_2 ;
                       Pl => base_1+"я"+base_2+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"е"+base_2 ;
                       Pl => base_1+"я"+base_2+"ы"
                     } ;
              Dat => table {
                       Sg => base_1+"я"+base_2+"у" ;
                       Pl => base_1+"я"+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"я"+base_2+"а" ;
                       Pl => base_1+"я"+base_2+"оў"
                     } ;
              Loc => table {
                       Sg => base_1+"я"+base_2+"е" ;
                       Pl => base_1+"я"+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"я"+base_2+"ом" ;
                         Pl => base_1+"я"+base_2+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN106"
  } ;

mkN107 : Str -> N ;
mkN107 base =
  case base of {
    base_1+"ы" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ы" ;
                       Pl => base_1+"ы"
                     } ;
              Acc => table {
                       Sg => nonExist ;
                       Pl => base_1+"ы"
                     } ;
              Dat => table {
                       Sg => nonExist ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1 ;
                       Pl => base_1
                     } ;
              Loc => table {
                       Sg => nonExist ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => nonExist ;
                         Pl => base_1+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN107"
  } ;

mkN108 : Str -> N ;
mkN108 base =
  case base of {
    base_1+"я"+base_2@? => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"я"+base_2 ;
                       Pl => base_1+"й"+base_2+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"й"+base_2+"а" ;
                       Pl => base_1+"й"+base_2+"оў"
                     } ;
              Dat => table {
                       Sg => base_1+"й"+base_2+"у" ;
                       Pl => base_1+"й"+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"й"+base_2+"а" ;
                       Pl => base_1+"й"+base_2+"оў"
                     } ;
              Loc => table {
                       Sg => base_1+"й"+base_2+"ы" ;
                       Pl => base_1+"й"+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"й"+base_2+"ам" ;
                         Pl => base_1+"й"+base_2+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN108"
  } ;

mkN109 : Str -> N ;
mkN109 base =
  case base of {
    base_1+"о"+base_2@? => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"о"+base_2 ;
                       Pl => "і"+base_1+base_2+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"о"+base_2 ;
                       Pl => "і"+base_1+base_2+"ы"
                     } ;
              Dat => table {
                       Sg => "і"+base_1+base_2+"у" ;
                       Pl => "і"+base_1+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => "і"+base_1+base_2+"а" ;
                       Pl => "і"+base_1+base_2+"оў"
                     } ;
              Loc => table {
                       Sg => "і"+base_1+base_2+"е" ;
                       Pl => "і"+base_1+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => "і"+base_1+base_2+"ом" ;
                         Pl => "і"+base_1+base_2+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN109"
  } ;

mkN110 : Str -> N ;
mkN110 base =
  case base of {
    base_1+"е"+base_2@(?+?)+"ь" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"е"+base_2+"ь" ;
                       Pl => base_1+"я"+base_2+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"я"+base_2+"я" ;
                       Pl => base_1+"я"+base_2+"ёў"
                     } ;
              Dat => table {
                       Sg => base_1+"я"+base_2+"ю" ;
                       Pl => base_1+"я"+base_2+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"я"+base_2+"я" ;
                       Pl => base_1+"я"+base_2+"ёў"
                     } ;
              Loc => table {
                       Sg => base_1+"я"+base_2+"ю" ;
                       Pl => base_1+"я"+base_2+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"я"+base_2+"ём" ;
                         Pl => base_1+"я"+base_2+"ямі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN110"
  } ;

mkN111 : Str -> N ;
mkN111 base =
  case base of {
    base_1+"о"+base_2@? => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"о"+base_2 ;
                       Pl => base_1+base_2+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"о"+base_2 ;
                       Pl => base_1+base_2+"ы"
                     } ;
              Dat => table {
                       Sg => base_1+base_2+"у" ;
                       Pl => base_1+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+base_2+"у" ;
                       Pl => base_1+base_2+"оў"
                     } ;
              Loc => table {
                       Sg => base_1+base_2+"е" ;
                       Pl => base_1+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+base_2+"ом" ;
                         Pl => base_1+base_2+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN111"
  } ;

mkN112 : Str -> N ;
mkN112 base =
  case base of {
    base_1+"о"+base_2@?+"ь" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"о"+base_2+"ь" ;
                       Pl => base_1+"о"+base_2+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"а"+base_2+"я" ;
                       Pl => base_1+"о"+base_2+"ей"
                     } ;
              Dat => table {
                       Sg => base_1+"а"+base_2+"ю" ;
                       Pl => base_1+"о"+base_2+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"а"+base_2+"я" ;
                       Pl => base_1+"о"+base_2+"ей"
                     } ;
              Loc => table {
                       Sg => base_1+"а"+base_2+"і" ;
                       Pl => base_1+"о"+base_2+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"а"+base_2+"ём" ;
                         Pl => base_1+"о"+base_2+"ьмі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN112"
  } ;

mkN113 : Str -> N ;
mkN113 base =
  case base of {
    base_1 => lin N
      { s = table {
              Nom => table {
                       Sg => base_1 ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => base_1 ;
                       Pl => base_1+"і"
                     } ;
              Dat => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"оў"
                     } ;
              Loc => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ам" ;
                         Pl => base_1+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN113"
  } ;

mkN114 : Str -> N ;
mkN114 base =
  case base of {
    base_1+"ха" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ха" ;
                       Pl => base_1+"хі"
                     } ;
              Acc => table {
                       Sg => base_1+"ху" ;
                       Pl => base_1+"х"
                     } ;
              Dat => table {
                       Sg => base_1+"се" ;
                       Pl => base_1+"хам"
                     } ;
              Gen => table {
                       Sg => base_1+"хі" ;
                       Pl => base_1+"х"
                     } ;
              Loc => table {
                       Sg => base_1+"се" ;
                       Pl => base_1+"хах"
                     } ;
              Instr => table {
                         Sg => base_1+"хай" ;
                         Pl => base_1+"хамі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN114"
  } ;

mkN115 : Str -> N ;
mkN115 base =
  case base of {
    base_1+"г" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"г" ;
                       Pl => base_1+"гі"
                     } ;
              Acc => table {
                       Sg => base_1+"г" ;
                       Pl => base_1+"гі"
                     } ;
              Dat => table {
                       Sg => base_1+"гу" ;
                       Pl => base_1+"гам"
                     } ;
              Gen => table {
                       Sg => base_1+"га" ;
                       Pl => base_1+"гоў"
                     } ;
              Loc => table {
                       Sg => base_1+"зе" ;
                       Pl => base_1+"гах"
                     } ;
              Instr => table {
                         Sg => base_1+"гам" ;
                         Pl => base_1+"гамі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN115"
  } ;

mkN116 : Str -> N ;
mkN116 base =
  case base of {
    base_1+"ь" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ь" ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"ь" ;
                       Pl => base_1+"ей"
                     } ;
              Dat => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ей"
                     } ;
              Loc => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"сю" ;
                         Pl => base_1+"ямі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN116"
  } ;

mkN117 : Str -> N ;
mkN117 base =
  case base of {
    base_1+"й" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"й" ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"я" ;
                       Pl => base_1+"яў"
                     } ;
              Dat => table {
                       Sg => base_1+"ю" ;
                       Pl => base_1+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"я" ;
                       Pl => base_1+"яў"
                     } ;
              Loc => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"ем" ;
                         Pl => base_1+"ямі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN117"
  } ;

mkN118 : Str -> N ;
mkN118 base =
  case base of {
    base_1+"е"+base_2@?+"ь" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"е"+base_2+"ь" ;
                       Pl => base_1+base_2+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"е"+base_2+"ь" ;
                       Pl => base_1+base_2+"і"
                     } ;
              Dat => table {
                       Sg => base_1+base_2+"ю" ;
                       Pl => base_1+base_2+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+base_2+"я" ;
                       Pl => base_1+base_2+"ёў"
                     } ;
              Loc => table {
                       Sg => base_1+base_2+"і" ;
                       Pl => base_1+base_2+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+base_2+"ём" ;
                         Pl => base_1+base_2+"ямі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN118"
  } ;

mkN119 : Str -> N ;
mkN119 base =
  case base of {
    base_1+"от" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"от" ;
                       Pl => base_1+"аты"
                     } ;
              Acc => table {
                       Sg => base_1+"от" ;
                       Pl => base_1+"аты"
                     } ;
              Dat => table {
                       Sg => base_1+"оту" ;
                       Pl => base_1+"атам"
                     } ;
              Gen => table {
                       Sg => base_1+"оту" ;
                       Pl => base_1+"атоў"
                     } ;
              Loc => table {
                       Sg => base_1+"оце" ;
                       Pl => base_1+"атах"
                     } ;
              Instr => table {
                         Sg => base_1+"отам" ;
                         Pl => base_1+"атамі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN119"
  } ;

mkN120 : Str -> N ;
mkN120 base =
  case base of {
    base_1 => lin N
      { s = table {
              Nom => table {
                       Sg => base_1 ;
                       Pl => base_1+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"а" ; --guessed
                       Pl => base_1+"аў" --guessed
                     } ;
              Dat => table {
                       Sg => base_1+"у" ; --guessed
                       Pl => base_1+"ам" --guessed
                     } ;
              Gen => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"аў"
                     } ;
              Loc => table {
                       Sg => base_1+"е" ; --guessed
                       Pl => base_1+"ах" --guessed
                     } ;
              Instr => table {
                         Sg => base_1+"ам" ; --guessed
                         Pl => base_1+"амі" --guessed
                       }
            } ;
        Voc = table {
                Sg => base_1+"зе" ; --guessed
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN120"
  } ;

mkN121 : Str -> N ;
mkN121 base =
  case base of {
    base_1+"ь" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ь" ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"ь" ;
                       Pl => base_1+"і"
                     } ;
              Dat => table {
                       Sg => base_1+"ю" ;
                       Pl => base_1+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"ю" ;
                       Pl => base_1+"яў"
                     } ;
              Loc => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"ем" ;
                         Pl => base_1+"ямі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN121"
  } ;

mkN122 : Str -> N ;
mkN122 base =
  case base of {
    base_1+"ё"+base_2@? => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ё"+base_2 ;
                       Pl => base_1+"ь"+base_2+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"ь"+base_2+"а" ;
                       Pl => base_1+"ь"+base_2+"оў"
                     } ;
              Dat => table {
                       Sg => base_1+"ь"+base_2+"у" ;
                       Pl => base_1+"ь"+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"ь"+base_2+"а" ;
                       Pl => base_1+"ь"+base_2+"оў"
                     } ;
              Loc => table {
                       Sg => base_1+"ь"+base_2+"у" ;
                       Pl => base_1+"ь"+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ь"+base_2+"ом" ;
                         Pl => base_1+"ь"+base_2+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN122"
  } ;

mkN123 : Str -> N ;
mkN123 base =
  case base of {
    base_1+"а" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"аў"
                     } ;
              Dat => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"ы" ;
                       Pl => base_1+"аў"
                     } ;
              Loc => table {
                       Sg => base_1+"е" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ам" ;
                         Pl => base_1+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN123"
  } ;

mkN124 : Str -> N ;
mkN124 base =
  case base of {
    base_1+"йка" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"йка" ;
                       Pl => base_1+"йкі"
                     } ;
              Acc => table {
                       Sg => base_1+"йку" ;
                       Pl => base_1+"йкі"
                     } ;
              Dat => table {
                       Sg => base_1+"йцы" ;
                       Pl => base_1+"йкам"
                     } ;
              Gen => table {
                       Sg => base_1+"йкі" ;
                       Pl => base_1+"ек"
                     } ;
              Loc => table {
                       Sg => base_1+"йцы" ;
                       Pl => base_1+"йках"
                     } ;
              Instr => table {
                         Sg => base_1+"йкай" ;
                         Pl => base_1+"йкамі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN124"
  } ;

mkN125 : Str -> N ;
mkN125 base =
  case base of {
    base_1+"т" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"т" ;
                       Pl => base_1+"ты"
                     } ;
              Acc => table {
                       Sg => base_1+"т" ;
                       Pl => base_1+"ты"
                     } ;
              Dat => table {
                       Sg => base_1+"ту" ;
                       Pl => base_1+"там"
                     } ;
              Gen => table {
                       Sg => base_1+"та" ;
                       Pl => base_1+"тоў"
                     } ;
              Loc => table {
                       Sg => base_1+"це" ;
                       Pl => base_1+"тах"
                     } ;
              Instr => table {
                         Sg => base_1+"том" ;
                         Pl => base_1+"тамі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN125"
  } ;

mkN126 : Str -> N ;
mkN126 base =
  case base of {
    base_1+"ака" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ака" ;
                       Pl => base_1+"экі"
                     } ;
              Acc => table {
                       Sg => base_1+"аку" ;
                       Pl => base_1+"экі"
                     } ;
              Dat => table {
                       Sg => base_1+"ацэ" ;
                       Pl => base_1+"экам"
                     } ;
              Gen => table {
                       Sg => base_1+"акі" ;
                       Pl => base_1+"эк"
                     } ;
              Loc => table {
                       Sg => base_1+"ацэ" ;
                       Pl => base_1+"эках"
                     } ;
              Instr => table {
                         Sg => base_1+"акой" ;
                         Pl => base_1+"экамі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN126"
  } ;

mkN127 : Str -> N ;
mkN127 base =
  case base of {
    base_1+"е"+base_2@? => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"е"+base_2 ;
                       Pl => base_1+base_2+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+base_2+"а" ;
                       Pl => base_1+base_2+"аў"
                     } ;
              Dat => table {
                       Sg => base_1+base_2+"у" ;
                       Pl => base_1+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+base_2+"а" ;
                       Pl => base_1+base_2+"аў"
                     } ;
              Loc => table {
                       Sg => base_1+base_2+"у" ;
                       Pl => base_1+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+base_2+"ам" ;
                         Pl => base_1+base_2+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN127"
  } ;

mkN128 : Str -> N ;
mkN128 base =
  case base of {
    base_1+"ка" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ка" ;
                       Pl => base_1+"кі"
                     } ;
              Acc => table {
                       Sg => base_1+"ку" ;
                       Pl => base_1+"ак"
                     } ;
              Dat => table {
                       Sg => base_1+"цы" ;
                       Pl => base_1+"кам"
                     } ;
              Gen => table {
                       Sg => base_1+"кі" ;
                       Pl => base_1+"ак"
                     } ;
              Loc => table {
                       Sg => base_1+"цы" ;
                       Pl => base_1+"ках"
                     } ;
              Instr => table {
                         Sg => base_1+"кай" ;
                         Pl => base_1+"камі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN128"
  } ;

mkN129 : Str -> N ;
mkN129 base =
  case base of {
    base_1+"а" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"аў"
                     } ;
              Dat => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"аў"
                     } ;
              Loc => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ам" ;
                         Pl => base_1+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN129"
  } ;

mkN130 : Str -> N ;
mkN130 base =
  case base of {
    base_1+"а" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"і"
                     } ;
              Dat => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"аў"
                     } ;
              Loc => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ам" ;
                         Pl => base_1+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN130"
  } ;

mkN131 : Str -> N ;
mkN131 base =
  case base of {
    base_1+"т" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"т" ;
                       Pl => base_1+"ты"
                     } ;
              Acc => table {
                       Sg => base_1+"та" ;
                       Pl => base_1+"таў"
                     } ;
              Dat => table {
                       Sg => base_1+"ту" ;
                       Pl => base_1+"там"
                     } ;
              Gen => table {
                       Sg => base_1+"та" ;
                       Pl => base_1+"таў"
                     } ;
              Loc => table {
                       Sg => base_1+"це" ;
                       Pl => base_1+"тах"
                     } ;
              Instr => table {
                         Sg => base_1+"там" ;
                         Pl => base_1+"тамі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN131"
  } ;

mkN132 : Str -> N ;
mkN132 base =
  case base of {
    base_1+"ь" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ь" ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"я" ;
                       Pl => base_1+"ёў"
                     } ;
              Dat => table {
                       Sg => base_1+"ю" ;
                       Pl => base_1+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"я" ;
                       Pl => base_1+"ёў"
                     } ;
              Loc => table {
                       Sg => base_1+"ю" ;
                       Pl => base_1+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"ем" ;
                         Pl => base_1+"ямі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN132"
  } ;

mkN133 : Str -> N ;
mkN133 base =
  case base of {
    base_1+"я" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"я" ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"ю" ;
                       Pl => base_1+"і"
                     } ;
              Dat => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ей"
                     } ;
              Loc => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"яй" ;
                         Pl => base_1+"ямі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN133"
  } ;

mkN134 : Str -> N ;
mkN134 base =
  case base of {
    base_1+"оў" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"оў" ;
                       Pl => nonExist
                     } ;
              Acc => table {
                       Sg => base_1+"оў" ;
                       Pl => nonExist
                     } ;
              Dat => table {
                       Sg => base_1+"ыві" ;
                       Pl => nonExist
                     } ;
              Gen => table {
                       Sg => base_1+"ыві" ;
                       Pl => nonExist
                     } ;
              Loc => table {
                       Sg => base_1+"ыві" ;
                       Pl => nonExist
                     } ;
              Instr => table {
                         Sg => base_1+"оўю" ;
                         Pl => nonExist
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN134"
  } ;

mkN135 : Str -> N ;
mkN135 base =
  case base of {
    base_1+"я"+base_2@?+"т"+base_3@?+"а" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"я"+base_2+"т"+base_3+"а" ;
                       Pl => base_1+"ё"+base_2+"т"+base_3+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"я"+base_2+"т"+base_3+"у" ;
                       Pl => base_1+"я"+base_2+"цё"+base_3
                     } ;
              Dat => table {
                       Sg => base_1+"я"+base_2+"т"+base_3+"ы" ;
                       Pl => base_1+"ё"+base_2+"т"+base_3+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"я"+base_2+"т"+base_3+"ы" ;
                       Pl => base_1+"я"+base_2+"цё"+base_3
                     } ;
              Loc => table {
                       Sg => base_1+"я"+base_2+"т"+base_3+"ы" ;
                       Pl => base_1+"ё"+base_2+"т"+base_3+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"я"+base_2+"т"+base_3+"ой" ;
                         Pl => base_1+"ё"+base_2+"т"+base_3+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN135"
  } ;

mkN136 : Str -> N ;
mkN136 base =
  case base of {
    base_1+"а"+base_2@?+"а" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"а"+base_2+"а" ;
                       Pl => base_1+"о"+base_2+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"а"+base_2+"у" ;
                       Pl => base_1+"о"+base_2+"ы"
                     } ;
              Dat => table {
                       Sg => base_1+"а"+base_2+"зе" ;
                       Pl => base_1+"о"+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"а"+base_2+"ы" ;
                       Pl => base_1+"о"+base_2
                     } ;
              Loc => table {
                       Sg => base_1+"а"+base_2+"зе" ;
                       Pl => base_1+"о"+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"а"+base_2+"ой" ;
                         Pl => base_1+"о"+base_2+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN136"
  } ;

mkN137 : Str -> N ;
mkN137 base =
  case base of {
    base_1+"а" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"у" ;
                       Pl => base_1
                     } ;
              Dat => table {
                       Sg => base_1+"ы" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"ы" ;
                       Pl => base_1
                     } ;
              Loc => table {
                       Sg => base_1+"ы" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ай" ;
                         Pl => base_1+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN137"
  } ;

mkN138 : Str -> N ;
mkN138 base =
  case base of {
    base_1+"ва" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ва" ;
                       Pl => base_1+"вы"
                     } ;
              Acc => table {
                       Sg => base_1+"ву" ;
                       Pl => base_1+"ў"
                     } ;
              Dat => table {
                       Sg => base_1+"ве" ;
                       Pl => base_1+"вам"
                     } ;
              Gen => table {
                       Sg => base_1+"вы" ;
                       Pl => base_1+"ў"
                     } ;
              Loc => table {
                       Sg => base_1+"ве" ;
                       Pl => base_1+"вах"
                     } ;
              Instr => table {
                         Sg => base_1+"вай" ;
                         Pl => base_1+"вамі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN138"
  } ;

mkN139 : Str -> N ;
mkN139 base =
  case base of {
    base_1+"а"+base_2@?+"а" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"а"+base_2+"а" ;
                       Pl => base_1+"о"+base_2+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"а"+base_2+"у" ;
                       Pl => base_1+"о"+base_2
                     } ;
              Dat => table {
                       Sg => base_1+"а"+base_2+"е" ;
                       Pl => base_1+"о"+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"а"+base_2+"ы" ;
                       Pl => base_1+"о"+base_2
                     } ;
              Loc => table {
                       Sg => base_1+"а"+base_2+"е" ;
                       Pl => base_1+"о"+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"а"+base_2+"ой" ;
                         Pl => base_1+"о"+base_2+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN139"
  } ;

mkN140 : Str -> N ;
mkN140 base =
  case base of {
    base_1+"а" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"у" ;
                       Pl => base_1
                     } ;
              Dat => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"і" ;
                       Pl => base_1
                     } ;
              Loc => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ам" ;
                         Pl => base_1+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN140"
  } ;

mkN141 : Str -> N ;
mkN141 base =
  case base of {
    base_1+"а" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"аў"
                     } ;
              Dat => table {
                       Sg => base_1+"ы" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"ы" ;
                       Pl => base_1+"аў"
                     } ;
              Loc => table {
                       Sg => base_1+"ы" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ай" ;
                         Pl => base_1+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN141"
  } ;

mkN142 : Str -> N ;
mkN142 base =
  case base of {
    base_1 => lin N
      { s = table {
              Nom => table {
                       Sg => base_1 ;
                       Pl => base_1+"зі"
                     } ;
              Acc => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"зяў"
                     } ;
              Dat => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"зям"
                     } ;
              Gen => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"зяў"
                     } ;
              Loc => table {
                       Sg => base_1+"зе" ;
                       Pl => base_1+"зях"
                     } ;
              Instr => table {
                         Sg => base_1+"ам" ;
                         Pl => base_1+"зямі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN142"
  } ;

mkN143 : Str -> N ;
mkN143 base =
  case base of {
    base_1+"ока" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ока" ;
                       Pl => base_1+"очы"
                     } ;
              Acc => table {
                       Sg => base_1+"ока" ;
                       Pl => base_1+"очы"
                     } ;
              Dat => table {
                       Sg => base_1+"оку" ;
                       Pl => base_1+"ачам"
                     } ;
              Gen => table {
                       Sg => base_1+"ока" ;
                       Pl => base_1+"ачэй"
                     } ;
              Loc => table {
                       Sg => base_1+"оку" ;
                       Pl => base_1+"ачах"
                     } ;
              Instr => table {
                         Sg => base_1+"окам" ;
                         Pl => base_1+"ачамі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN143"
  } ;

mkN144 : Str -> N ;
mkN144 base =
  case base of {
    base_1+"o" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"o" ;
                       Pl => nonExist
                     } ;
              Acc => table {
                       Sg => nonExist ;
                       Pl => nonExist
                     } ;
              Dat => table {
                       Sg => nonExist ;
                       Pl => nonExist
                     } ;
              Gen => table {
                       Sg => base_1+"a" ;
                       Pl => nonExist
                     } ;
              Loc => table {
                       Sg => nonExist ;
                       Pl => nonExist
                     } ;
              Instr => table {
                         Sg => nonExist ;
                         Pl => nonExist
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN144"
  } ;

mkN145 : Str -> N ;
mkN145 base =
  case base of {
    base_1+"ы" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ы" ;
                       Pl => base_1+"ы"
                     } ;
              Acc => table {
                       Sg => nonExist ;
                       Pl => base_1+"ы"
                     } ;
              Dat => table {
                       Sg => nonExist ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"аў" ;
                       Pl => base_1+"аў"
                     } ;
              Loc => table {
                       Sg => nonExist ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => nonExist ;
                         Pl => base_1+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN145"
  } ;

mkN146 : Str -> N ;
mkN146 base =
  case base of {
    base_1+"ава" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ава" ;
                       Pl => base_1+"овы"
                     } ;
              Acc => table {
                       Sg => base_1+"аву" ;
                       Pl => base_1+"овы"
                     } ;
              Dat => table {
                       Sg => base_1+"аве" ;
                       Pl => base_1+"овам"
                     } ;
              Gen => table {
                       Sg => base_1+"авы" ;
                       Pl => base_1+"оў"
                     } ;
              Loc => table {
                       Sg => base_1+"аве" ;
                       Pl => base_1+"овах"
                     } ;
              Instr => table {
                         Sg => base_1+"авой" ;
                         Pl => base_1+"овамі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN146"
  } ;

mkN147 : Str -> N ;
mkN147 base =
  case base of {
    base_1+"е"+base_2@?+"а" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"е"+base_2+"а" ;
                       Pl => base_1+"я"+base_2+"ёсы"
                     } ;
              Acc => table {
                       Sg => base_1+"е"+base_2+"а" ;
                       Pl => base_1+"я"+base_2+"ёсы"
                     } ;
              Dat => table {
                       Sg => base_1+"е"+base_2+"у" ;
                       Pl => base_1+"я"+base_2+"ёсам"
                     } ;
              Gen => table {
                       Sg => base_1+"е"+base_2+"а" ;
                       Pl => base_1+"я"+base_2+"ёс"
                     } ;
              Loc => table {
                       Sg => base_1+"е"+base_2+"е" ;
                       Pl => base_1+"я"+base_2+"ёсах"
                     } ;
              Instr => table {
                         Sg => base_1+"е"+base_2+"ам" ;
                         Pl => base_1+"я"+base_2+"ёсамі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN147"
  } ;

mkN148 : Str -> N ;
mkN148 base =
  case base of {
    base_1+"о" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"о" ;
                       Pl => nonExist
                     } ;
              Acc => table {
                       Sg => base_1+"о" ;
                       Pl => nonExist
                     } ;
              Dat => table {
                       Sg => base_1+"у" ;
                       Pl => nonExist
                     } ;
              Gen => table {
                       Sg => base_1+"а" ;
                       Pl => nonExist
                     } ;
              Loc => table {
                       Sg => base_1+"у" ;
                       Pl => nonExist
                     } ;
              Instr => table {
                         Sg => base_1+"ом" ;
                         Pl => nonExist
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN148"
  } ;

mkN149 : Str -> N ;
mkN149 base =
  case base of {
    base_1+"а"+base_2@(?+?)+"як" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"а"+base_2+"як" ;
                       Pl => base_1+"э"+base_2+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"а"+base_2+"яка" ;
                       Pl => base_1+"а"+base_2+"ей"
                     } ;
              Dat => table {
                       Sg => base_1+"а"+base_2+"яку" ;
                       Pl => base_1+"а"+base_2+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"а"+base_2+"яка" ;
                       Pl => base_1+"а"+base_2+"ей"
                     } ;
              Loc => table {
                       Sg => base_1+"а"+base_2+"яку" ;
                       Pl => base_1+"а"+base_2+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"а"+base_2+"яком" ;
                         Pl => base_1+"а"+base_2+"ямі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN149"
  } ;

mkN150 : Str -> N ;
mkN150 base =
  case base of {
    base_1+"ва" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ва" ;
                       Pl => base_1+"вы"
                     } ;
              Acc => table {
                       Sg => base_1+"ву" ;
                       Pl => base_1+"вы"
                     } ;
              Dat => table {
                       Sg => base_1+"ве" ;
                       Pl => base_1+"вам"
                     } ;
              Gen => table {
                       Sg => base_1+"вы" ;
                       Pl => base_1+"ў"
                     } ;
              Loc => table {
                       Sg => base_1+"ве" ;
                       Pl => base_1+"вах"
                     } ;
              Instr => table {
                         Sg => base_1+"вай" ;
                         Pl => base_1+"вамі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN150"
  } ;

mkN151 : Str -> N ;
mkN151 base =
  case base of {
    base_1+"й"+base_2@?+"а" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"й"+base_2+"а" ;
                       Pl => base_1+"й"+base_2+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"й"+base_2+"а" ;
                       Pl => base_1+"й"+base_2+"і"
                     } ;
              Dat => table {
                       Sg => base_1+"й"+base_2+"у" ;
                       Pl => base_1+"й"+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"й"+base_2+"а" ;
                       Pl => base_1+"е"+base_2
                     } ;
              Loc => table {
                       Sg => base_1+"й"+base_2+"у" ;
                       Pl => base_1+"й"+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"й"+base_2+"ам" ;
                         Pl => base_1+"й"+base_2+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN151"
  } ;

mkN152 : Str -> N ;
mkN152 base =
  case base of {
    base_1+"ь" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ь" ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"я" ;
                       Pl => base_1+"яў"
                     } ;
              Dat => table {
                       Sg => base_1+"ю" ;
                       Pl => base_1+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"я" ;
                       Pl => base_1+"яў"
                     } ;
              Loc => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"ем" ;
                         Pl => base_1+"ямі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN152"
  } ;

mkN153 : Str -> N ;
mkN153 base =
  case base of {
    base_1+"я" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"я" ;
                       Pl => base_1+"яты"
                     } ;
              Acc => table {
                       Sg => base_1+"я" ;
                       Pl => base_1+"ят"
                     } ;
              Dat => table {
                       Sg => base_1+"яці" ;
                       Pl => base_1+"ятам"
                     } ;
              Gen => table {
                       Sg => base_1+"яці" ;
                       Pl => base_1+"ят"
                     } ;
              Loc => table {
                       Sg => base_1+"яці" ;
                       Pl => base_1+"ятах"
                     } ;
              Instr => table {
                         Sg => base_1+"ём" ;
                         Pl => base_1+"ятамі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN153"
  } ;

mkN154 : Str -> N ;
mkN154 base =
  case base of {
    base_1+"я" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"я" ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"ю" ;
                       Pl => base_1+"яў"
                     } ;
              Dat => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"яў"
                     } ;
              Loc => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"яй" ;
                         Pl => base_1+"ямі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN154"
  } ;

mkN155 : Str -> N ;
mkN155 base =
  case base of {
    base_1+"о"+base_2@("р"|(?+?)) => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"о"+base_2 ;
                       Pl => base_1+"а"+base_2+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"а"+base_2+"а" ;
                       Pl => base_1+"а"+base_2+"оў"
                     } ;
              Dat => table {
                       Sg => base_1+"а"+base_2+"у" ;
                       Pl => base_1+"а"+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"а"+base_2+"а" ;
                       Pl => base_1+"а"+base_2+"оў"
                     } ;
              Loc => table {
                       Sg => base_1+"а"+base_2+"ы" ;
                       Pl => base_1+"а"+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"а"+base_2+"ом" ;
                         Pl => base_1+"а"+base_2+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN155"
  } ;

mkN156 : Str -> N ;
mkN156 base =
  case base of {
    base_1+"ава" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ава" ;
                       Pl => base_1+"овы"
                     } ;
              Acc => table {
                       Sg => base_1+"аву" ;
                       Pl => base_1+"оў"
                     } ;
              Dat => table {
                       Sg => base_1+"аве" ;
                       Pl => base_1+"овам"
                     } ;
              Gen => table {
                       Sg => base_1+"авы" ;
                       Pl => base_1+"оў"
                     } ;
              Loc => table {
                       Sg => base_1+"аве" ;
                       Pl => base_1+"овах"
                     } ;
              Instr => table {
                         Sg => base_1+"авой" ;
                         Pl => base_1+"овамі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN156"
  } ;

mkN157 : Str -> N ;
mkN157 base =
  case base of {
    base_1+"о"+base_2@? => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"о"+base_2 ;
                       Pl => base_1+base_2+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+base_2+"а" ;
                       Pl => base_1+base_2+"оў"
                     } ;
              Dat => table {
                       Sg => base_1+base_2+"у" ;
                       Pl => base_1+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+base_2+"а" ;
                       Pl => base_1+base_2+"оў"
                     } ;
              Loc => table {
                       Sg => base_1+base_2+"ы" ;
                       Pl => base_1+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+base_2+"ом" ;
                         Pl => base_1+base_2+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN157"
  } ;

mkN158 : Str -> N ;
mkN158 base =
  case base of {
    base_1+"о"+base_2@? => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"о"+base_2 ;
                       Pl => base_1+base_2+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"о"+base_2 ;
                       Pl => base_1+base_2+"ы"
                     } ;
              Dat => table {
                       Sg => base_1+base_2+"у" ;
                       Pl => base_1+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+base_2+"а" ;
                       Pl => base_1+base_2+"оў"
                     } ;
              Loc => table {
                       Sg => base_1+base_2+"ы" ;
                       Pl => base_1+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+base_2+"ом" ;
                         Pl => base_1+base_2+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN158"
  } ;

mkN159 : Str -> N ;
mkN159 base =
  case base of {
    base_1+"о"+base_2@? => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"о"+base_2 ;
                       Pl => base_1+base_2+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+base_2+"а" ;
                       Pl => base_1+base_2+"оў"
                     } ;
              Dat => table {
                       Sg => base_1+base_2+"у" ;
                       Pl => base_1+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+base_2+"а" ;
                       Pl => base_1+base_2+"оў"
                     } ;
              Loc => table {
                       Sg => base_1+base_2+"е" ;
                       Pl => base_1+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+base_2+"ом" ;
                         Pl => base_1+base_2+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN159"
  } ;

mkN160 : Str -> N ;
mkN160 base =
  case base of {
    base_1+"йка" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"йка" ;
                       Pl => base_1+"йкі"
                     } ;
              Acc => table {
                       Sg => base_1+"йку" ;
                       Pl => base_1+"ек"
                     } ;
              Dat => table {
                       Sg => base_1+"йцы" ;
                       Pl => base_1+"йкам"
                     } ;
              Gen => table {
                       Sg => base_1+"йкі" ;
                       Pl => base_1+"ек"
                     } ;
              Loc => table {
                       Sg => base_1+"йцы" ;
                       Pl => base_1+"йках"
                     } ;
              Instr => table {
                         Sg => base_1+"йкай" ;
                         Pl => base_1+"йкамі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN160"
  } ;

mkN161 : Str -> N ;
mkN161 base =
  case base of {
    base_1+"ўка" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ўка" ;
                       Pl => base_1+"ўкі"
                     } ;
              Acc => table {
                       Sg => base_1+"ўку" ;
                       Pl => base_1+"вак"
                     } ;
              Dat => table {
                       Sg => base_1+"ўцы" ;
                       Pl => base_1+"ўкам"
                     } ;
              Gen => table {
                       Sg => base_1+"ўкі" ;
                       Pl => base_1+"вак"
                     } ;
              Loc => table {
                       Sg => base_1+"ўцы" ;
                       Pl => base_1+"ўках"
                     } ;
              Instr => table {
                         Sg => base_1+"ўкай" ;
                         Pl => base_1+"ўкамі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN161"
  } ;

mkN162 : Str -> N ;
mkN162 base =
  case base of {
    base_1+"я" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"я" ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"ю" ;
                       Pl => base_1+"і"
                     } ;
              Dat => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ей"
                     } ;
              Loc => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"ёй" ;
                         Pl => base_1+"ямі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN162"
  } ;

mkN163 : Str -> N ;
mkN163 base =
  case base of {
    base_1+"о"+base_2@("расц"|(?+?))+"ь" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"о"+base_2+"ь" ;
                       Pl => base_1+"о"+base_2+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"о"+base_2+"ь" ;
                       Pl => base_1+"о"+base_2+"і"
                     } ;
              Dat => table {
                       Sg => base_1+"о"+base_2+"і" ;
                       Pl => base_1+"а"+base_2+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"о"+base_2+"і" ;
                       Pl => base_1+"а"+base_2+"ей"
                     } ;
              Loc => table {
                       Sg => base_1+"о"+base_2+"і" ;
                       Pl => base_1+"а"+base_2+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"о"+base_2+"ю" ;
                         Pl => base_1+"а"+base_2+"ямі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN163"
  } ;

mkN164 : Str -> N ;
mkN164 base =
  case base of {
    base_1+"ь" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ь" ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"ь" ;
                       Pl => base_1+"і"
                     } ;
              Dat => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ей"
                     } ;
              Loc => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"ню" ;
                         Pl => base_1+"ямі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN164"
  } ;

mkN165 : Str -> N ;
mkN165 base =
  case base of {
    base_1+"я"+base_2@?+"а" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"я"+base_2+"а" ;
                       Pl => base_1+"е"+base_2+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"я"+base_2+"у" ;
                       Pl => base_1+"е"+base_2+"ы"
                     } ;
              Dat => table {
                       Sg => base_1+"я"+base_2+"ы" ;
                       Pl => base_1+"е"+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"я"+base_2+"ы" ;
                       Pl => base_1+"е"+base_2
                     } ;
              Loc => table {
                       Sg => base_1+"я"+base_2+"ы" ;
                       Pl => base_1+"е"+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"я"+base_2+"ой" ;
                         Pl => base_1+"е"+base_2+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN165"
  } ;

mkN166 : Str -> N ;
mkN166 base =
  case base of {
    base_1+"ва" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ва" ;
                       Pl => base_1+"вы"
                     } ;
              Acc => table {
                       Sg => base_1+"ва" ;
                       Pl => base_1+"вы"
                     } ;
              Dat => table {
                       Sg => base_1+"ву" ;
                       Pl => base_1+"вам"
                     } ;
              Gen => table {
                       Sg => base_1+"ва" ;
                       Pl => base_1+"ў"
                     } ;
              Loc => table {
                       Sg => base_1+"ве" ;
                       Pl => base_1+"вах"
                     } ;
              Instr => table {
                         Sg => base_1+"вам" ;
                         Pl => base_1+"вамі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN166"
  } ;

mkN167 : Str -> N ;
mkN167 base =
  case base of {
    base_1+"я" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"я" ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"ю" ;
                       Pl => base_1+"і"
                     } ;
              Dat => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ь"
                     } ;
              Loc => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"ёй" ;
                         Pl => base_1+"ямі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN167"
  } ;

mkN168 : Str -> N ;
mkN168 base =
  case base of {
    base_1 => lin N
      { s = table {
              Nom => table {
                       Sg => base_1 ;
                       Pl => base_1+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"оў"
                     } ;
              Dat => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"оў"
                     } ;
              Loc => table {
                       Sg => base_1+"ы" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ам" ;
                         Pl => base_1+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN168"
  } ;

mkN169 : Str -> N ;
mkN169 base =
  case base of {
    base_1+"ё"+base_2@(?+?+?) => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ё"+base_2 ;
                       Pl => base_1+"я"+base_2+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"я"+base_2+"а" ;
                       Pl => base_1+"я"+base_2+"оў"
                     } ;
              Dat => table {
                       Sg => base_1+"я"+base_2+"у" ;
                       Pl => base_1+"я"+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"я"+base_2+"а" ;
                       Pl => base_1+"я"+base_2+"оў"
                     } ;
              Loc => table {
                       Sg => base_1+"я"+base_2+"е" ;
                       Pl => base_1+"я"+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"я"+base_2+"ом" ;
                         Pl => base_1+"я"+base_2+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN169"
  } ;

mkN170 : Str -> N ;
mkN170 base =
  case base of {
    base_1+"я"+base_2@(?+?)+"я" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"я"+base_2+"я" ;
                       Pl => base_1+"е"+base_2+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"я"+base_2+"ю" ;
                       Pl => base_1+"е"+base_2+"і"
                     } ;
              Dat => table {
                       Sg => base_1+"я"+base_2+"і" ;
                       Pl => base_1+"е"+base_2+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"я"+base_2+"і" ;
                       Pl => base_1+"е"+base_2+"яў"
                     } ;
              Loc => table {
                       Sg => base_1+"я"+base_2+"і" ;
                       Pl => base_1+"е"+base_2+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"я"+base_2+"ёй" ;
                         Pl => base_1+"е"+base_2+"ямі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN170"
  } ;

mkN171 : Str -> N ;
mkN171 base =
  case base of {
    "ча"+base_1+"авек" => lin N
      { s = table {
              Nom => table {
                       Sg => "ча"+base_1+"авек" ;
                       Pl => base_1+"юдзі"
                     } ;
              Acc => table {
                       Sg => "ча"+base_1+"авека" ;
                       Pl => base_1+"юдзей"
                     } ;
              Dat => table {
                       Sg => "ча"+base_1+"авеку" ;
                       Pl => base_1+"юдзям"
                     } ;
              Gen => table {
                       Sg => "ча"+base_1+"авека" ;
                       Pl => base_1+"юдзей"
                     } ;
              Loc => table {
                       Sg => "ча"+base_1+"авеку" ;
                       Pl => base_1+"юдзях"
                     } ;
              Instr => table {
                         Sg => "ча"+base_1+"авекам" ;
                         Pl => base_1+"юдзьмі"
                       }
            } ;
        Voc = table {
                Sg => "ча"+base_1+"авеча" ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN171"
  } ;

mkN172 : Str -> N ;
mkN172 base =
  case base of {
    base_1+"о"+base_2@(?+?) => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"о"+base_2 ;
                       Pl => base_1+"а"+base_2+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"о"+base_2+"а" ;
                       Pl => base_1+"а"+base_2+"оў"
                     } ;
              Dat => table {
                       Sg => base_1+"о"+base_2+"у" ;
                       Pl => base_1+"а"+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"о"+base_2+"а" ;
                       Pl => base_1+"а"+base_2+"оў"
                     } ;
              Loc => table {
                       Sg => base_1+"о"+base_2+"у" ;
                       Pl => base_1+"а"+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"о"+base_2+"ам" ;
                         Pl => base_1+"а"+base_2+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN172"
  } ;

mkN173 : Str -> N ;
mkN173 base =
  case base of {
    base_1+"зе"+base_2@?+"ь" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"зе"+base_2+"ь" ;
                       Pl => base_1+base_2+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"зе"+base_2+"ь" ;
                       Pl => base_1+base_2+"і"
                     } ;
              Dat => table {
                       Sg => base_1+base_2+"ю" ;
                       Pl => base_1+base_2+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+base_2+"я" ;
                       Pl => base_1+base_2+"яў"
                     } ;
              Loc => table {
                       Sg => base_1+base_2+"і" ;
                       Pl => base_1+base_2+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+base_2+"ем" ;
                         Pl => base_1+base_2+"ямі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN173"
  } ;

mkN174 : Str -> N ;
mkN174 base =
  case base of {
    base_1+"е"+base_2@? => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"е"+base_2 ;
                       Pl => base_1+"я"+base_2+"гі"
                     } ;
              Acc => table {
                       Sg => base_1+"е"+base_2 ;
                       Pl => base_1+"я"+base_2+"гі"
                     } ;
              Dat => table {
                       Sg => base_1+"я"+base_2+"гу" ;
                       Pl => base_1+"я"+base_2+"гам"
                     } ;
              Gen => table {
                       Sg => base_1+"я"+base_2+"га" ;
                       Pl => base_1+"я"+base_2+"гоў"
                     } ;
              Loc => table {
                       Sg => base_1+"я"+base_2+"гу" ;
                       Pl => base_1+"я"+base_2+"гах"
                     } ;
              Instr => table {
                         Sg => base_1+"я"+base_2+"гом" ;
                         Pl => base_1+"я"+base_2+"гамі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN174"
  } ;

mkN175 : Str -> N ;
mkN175 base =
  case base of {
    base_1+"ве"+base_2@?+"ь" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ве"+base_2+"ь" ;
                       Pl => base_1+"ў"+base_2+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"ве"+base_2+"ь" ;
                       Pl => base_1+"ў"+base_2+"і"
                     } ;
              Dat => table {
                       Sg => base_1+"ў"+base_2+"ю" ;
                       Pl => base_1+"ў"+base_2+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"ў"+base_2+"я" ;
                       Pl => base_1+"ў"+base_2+"яў"
                     } ;
              Loc => table {
                       Sg => base_1+"ў"+base_2+"і" ;
                       Pl => base_1+"ў"+base_2+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"ў"+base_2+"ем" ;
                         Pl => base_1+"ў"+base_2+"ямі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN175"
  } ;

mkN176 : Str -> N ;
mkN176 base =
  case base of {
    base_1+"а" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"ы"
                     } ;
              Dat => table {
                       Sg => base_1+"зе" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"ы" ;
                       Pl => base_1
                     } ;
              Loc => table {
                       Sg => base_1+"зе" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ой" ;
                         Pl => base_1+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN176"
  } ;

mkN177 : Str -> N ;
mkN177 base =
  case base of {
    base_1+"а"+base_2@?+"ь" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"а"+base_2+"ь" ;
                       Pl => base_1+base_2+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"а"+base_2+"ь" ;
                       Pl => base_1+base_2+"і"
                     } ;
              Dat => table {
                       Sg => base_1+base_2+"ю" ;
                       Pl => base_1+base_2+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+base_2+"я" ;
                       Pl => base_1+base_2+"яў"
                     } ;
              Loc => table {
                       Sg => base_1+base_2+"і" ;
                       Pl => base_1+base_2+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+base_2+"ем" ;
                         Pl => base_1+base_2+"ямі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN177"
  } ;

mkN178 : Str -> N ;
mkN178 base =
  case base of {
    base_1+"а"+base_2@? => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"а"+base_2 ;
                       Pl => base_1+base_2+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"а"+base_2 ;
                       Pl => base_1+base_2+"і"
                     } ;
              Dat => table {
                       Sg => base_1+base_2+"у" ;
                       Pl => base_1+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+base_2+"а" ;
                       Pl => base_1+base_2+"аў"
                     } ;
              Loc => table {
                       Sg => base_1+base_2+"у" ;
                       Pl => base_1+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+base_2+"ам" ;
                         Pl => base_1+base_2+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN178"
  } ;

mkN179 : Str -> N ;
mkN179 base =
  case base of {
    base_1+"е"+base_2@?+"ь" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"е"+base_2+"ь" ;
                       Pl => base_1+base_2+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"е"+base_2+"ь" ;
                       Pl => base_1+base_2+"і"
                     } ;
              Dat => table {
                       Sg => base_1+base_2+"ю" ;
                       Pl => base_1+base_2+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+base_2+"я" ;
                       Pl => base_1+base_2+"яў"
                     } ;
              Loc => table {
                       Sg => base_1+base_2+"і" ;
                       Pl => base_1+base_2+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+base_2+"ем" ;
                         Pl => base_1+base_2+"ямі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN179"
  } ;

mkN180 : Str -> N ;
mkN180 base =
  case base of {
    base_1+"я" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"я" ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"ю" ;
                       Pl => base_1+"і"
                     } ;
              Dat => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ь"
                     } ;
              Loc => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"яй" ;
                         Pl => base_1+"ямі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN180"
  } ;

mkN181 : Str -> N ;
mkN181 base =
  case base of {
    base_1+"ы" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ы" ;
                       Pl => base_1+"ыя"
                     } ;
              Acc => table {
                       Sg => base_1+"ы" ;
                       Pl => base_1+"ыя"
                     } ;
              Dat => table {
                       Sg => base_1+"аму" ;
                       Pl => base_1+"ым"
                     } ;
              Gen => table {
                       Sg => base_1+"ага" ;
                       Pl => base_1+"ых"
                     } ;
              Loc => table {
                       Sg => base_1+"ым" ;
                       Pl => base_1+"ых"
                     } ;
              Instr => table {
                         Sg => base_1+"ым" ;
                         Pl => base_1+"ымі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN181"
  } ;

mkN182 : Str -> N ;
mkN182 base =
  case base of {
    base_1+"а"+base_2@?+"а" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"а"+base_2+"а" ;
                       Pl => base_1+"э"+base_2+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"а"+base_2+"у" ;
                       Pl => base_1+"э"+base_2+"ы"
                     } ;
              Dat => table {
                       Sg => base_1+"а"+base_2+"е" ;
                       Pl => base_1+"э"+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"а"+base_2+"ы" ;
                       Pl => base_1+"э"+base_2
                     } ;
              Loc => table {
                       Sg => base_1+"а"+base_2+"е" ;
                       Pl => base_1+"э"+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"а"+base_2+"ой" ;
                         Pl => base_1+"э"+base_2+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN182"
  } ;

mkN183 : Str -> N ;
mkN183 base =
  case base of {
    base_1+"зе"+base_2@?+"ь" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"зе"+base_2+"ь" ;
                       Pl => base_1+base_2+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"зе"+base_2+"ь" ;
                       Pl => base_1+base_2+"і"
                     } ;
              Dat => table {
                       Sg => base_1+base_2+"ю" ;
                       Pl => base_1+base_2+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+base_2+"я" ;
                       Pl => base_1+"зё"+base_2
                     } ;
              Loc => table {
                       Sg => base_1+base_2+"і" ;
                       Pl => base_1+base_2+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+base_2+"ём" ;
                         Pl => base_1+base_2+"ямі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN183"
  } ;

mkN184 : Str -> N ;
mkN184 base =
  case base of {
    base_1 => lin N
      { s = table {
              Nom => table {
                       Sg => base_1 ;
                       Pl => base_1+"ы"
                     } ;
              Acc => table {
                       Sg => base_1 ;
                       Pl => base_1+"ы"
                     } ;
              Dat => table {
                       Sg => base_1+"ы" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"ы" ;
                       Pl => base_1+"аў"
                     } ;
              Loc => table {
                       Sg => base_1+"ы" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"чу" ;
                         Pl => base_1+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN184"
  } ;

mkN185 : Str -> N ;
mkN185 base =
  case base of {
    base_1+"я"+base_2@(?+?)+"а" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"я"+base_2+"а" ;
                       Pl => base_1+"ё"+base_2+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"я"+base_2+"у" ;
                       Pl => base_1+"ё"+base_2+"ы"
                     } ;
              Dat => table {
                       Sg => base_1+"я"+base_2+"зе" ;
                       Pl => base_1+"ё"+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"я"+base_2+"ы" ;
                       Pl => base_1+"ё"+base_2
                     } ;
              Loc => table {
                       Sg => base_1+"я"+base_2+"зе" ;
                       Pl => base_1+"ё"+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"я"+base_2+"ой" ;
                         Pl => base_1+"ё"+base_2+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN185"
  } ;

mkN186 : Str -> N ;
mkN186 base =
  case base of {
    base_1+"еце"+base_2@? => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"еце"+base_2 ;
                       Pl => base_1+"ят"+base_2+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"еце"+base_2 ;
                       Pl => base_1+"ят"+base_2+"ы"
                     } ;
              Dat => table {
                       Sg => base_1+"ет"+base_2+"у" ;
                       Pl => base_1+"ят"+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"ет"+base_2+"у" ;
                       Pl => base_1+"ят"+base_2+"оў"
                     } ;
              Loc => table {
                       Sg => base_1+"ет"+base_2+"ы" ;
                       Pl => base_1+"ят"+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ет"+base_2+"ам" ;
                         Pl => base_1+"ят"+base_2+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN186"
  } ;

mkN187 : Str -> N ;
mkN187 base =
  case base of {
    base_1+"я"+base_2@?+"а" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"я"+base_2+"а" ;
                       Pl => base_1+"ё"+base_2+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"я"+base_2+"у" ;
                       Pl => base_1+"ё"+base_2+"ы"
                     } ;
              Dat => table {
                       Sg => base_1+"я"+base_2+"е" ;
                       Pl => base_1+"я"+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"я"+base_2+"ы" ;
                       Pl => base_1+"ё"+base_2
                     } ;
              Loc => table {
                       Sg => base_1+"я"+base_2+"е" ;
                       Pl => base_1+"я"+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"я"+base_2+"ой" ;
                         Pl => base_1+"я"+base_2+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN187"
  } ;

mkN188 : Str -> N ;
mkN188 base =
  case base of {
    base_1+"а" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"ы"
                     } ;
              Dat => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"а" ;
                       Pl => base_1
                     } ;
              Loc => table {
                       Sg => base_1+"е" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ам" ;
                         Pl => base_1+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN188"
  } ;

mkN189 : Str -> N ;
mkN189 base =
  case base of {
    base_1+"а" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"і"
                     } ;
              Dat => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"а" ;
                       Pl => base_1
                     } ;
              Loc => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ам" ;
                         Pl => base_1+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN189"
  } ;

mkN190 : Str -> N ;
mkN190 base =
  case base of {
    base_1+"е"+base_2@? => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"е"+base_2 ;
                       Pl => base_1+"я"+base_2+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"е"+base_2 ;
                       Pl => base_1+"я"+base_2+"і"
                     } ;
              Dat => table {
                       Sg => base_1+"е"+base_2+"у" ;
                       Pl => base_1+"я"+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"е"+base_2+"а" ;
                       Pl => base_1+"я"+base_2+"оў"
                     } ;
              Loc => table {
                       Sg => base_1+"е"+base_2+"у" ;
                       Pl => base_1+"я"+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"е"+base_2+"ам" ;
                         Pl => base_1+"я"+base_2+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN190"
  } ;

mkN191 : Str -> N ;
mkN191 base =
  case base of {
    base_1+"к" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"к" ;
                       Pl => base_1+"кі"
                     } ;
              Acc => table {
                       Sg => base_1+"ка" ;
                       Pl => base_1+"коў"
                     } ;
              Dat => table {
                       Sg => base_1+"ку" ;
                       Pl => base_1+"кам"
                     } ;
              Gen => table {
                       Sg => base_1+"ка" ;
                       Pl => base_1+"коў"
                     } ;
              Loc => table {
                       Sg => base_1+"ку" ;
                       Pl => base_1+"ках"
                     } ;
              Instr => table {
                         Sg => base_1+"ком" ;
                         Pl => base_1+"камі"
                       }
            } ;
        Voc = table {
                Sg => base_1+"ча" ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN191"
  } ;

mkN192 : Str -> N ;
mkN192 base =
  case base of {
    base_1+"е"+base_2@? => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"е"+base_2 ;
                       Pl => base_1+"я"+base_2+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"е"+base_2 ;
                       Pl => base_1+"я"+base_2+"ы"
                     } ;
              Dat => table {
                       Sg => base_1+"е"+base_2+"у" ;
                       Pl => base_1+"я"+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"е"+base_2+"у" ;
                       Pl => base_1+"я"+base_2+"оў"
                     } ;
              Loc => table {
                       Sg => base_1+"е"+base_2+"зе" ;
                       Pl => base_1+"я"+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"е"+base_2+"ам" ;
                         Pl => base_1+"я"+base_2+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN192"
  } ;

mkN193 : Str -> N ;
mkN193 base =
  case base of {
    base_1 => lin N
      { s = table {
              Nom => table {
                       Sg => base_1 ;
                       Pl => base_1+"ы"
                     } ;
              Acc => table {
                       Sg => base_1 ;
                       Pl => base_1+"ы"
                     } ;
              Dat => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"оў"
                     } ;
              Loc => table {
                       Sg => base_1+"зе" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ам" ;
                         Pl => base_1+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN193"
  } ;

mkN194 : Str -> N ;
mkN194 base =
  case base of {
    base_1+"ог" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ог" ;
                       Pl => base_1+"агі"
                     } ;
              Acc => table {
                       Sg => base_1+"ог" ;
                       Pl => base_1+"агі"
                     } ;
              Dat => table {
                       Sg => base_1+"огу" ;
                       Pl => base_1+"агам"
                     } ;
              Gen => table {
                       Sg => base_1+"ога" ;
                       Pl => base_1+"агоў"
                     } ;
              Loc => table {
                       Sg => base_1+"озе" ;
                       Pl => base_1+"агах"
                     } ;
              Instr => table {
                         Sg => base_1+"огам" ;
                         Pl => base_1+"агамі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN194"
  } ;

mkN195 : Str -> N ;
mkN195 base =
  case base of {
    base_1 => lin N
      { s = table {
              Nom => table {
                       Sg => base_1 ;
                       Pl => base_1+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"оў"
                     } ;
              Dat => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"оў"
                     } ;
              Loc => table {
                       Sg => base_1+"е" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ом" ;
                         Pl => base_1+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN195"
  } ;

mkN196 : Str -> N ;
mkN196 base =
  case base of {
    base_1+"ька" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ька" ;
                       Pl => base_1+"ькі"
                     } ;
              Acc => table {
                       Sg => base_1+"ьку" ;
                       Pl => base_1+"ек"
                     } ;
              Dat => table {
                       Sg => base_1+"ьцы" ;
                       Pl => base_1+"ькам"
                     } ;
              Gen => table {
                       Sg => base_1+"ькі" ;
                       Pl => base_1+"ек"
                     } ;
              Loc => table {
                       Sg => base_1+"ьцы" ;
                       Pl => base_1+"ьках"
                     } ;
              Instr => table {
                         Sg => base_1+"ькай" ;
                         Pl => base_1+"ькамі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN196"
  } ;

mkN197 : Str -> N ;
mkN197 base =
  case base of {
    base_1+"ька" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ька" ;
                       Pl => base_1+"ькі"
                     } ;
              Acc => table {
                       Sg => base_1+"ьку" ;
                       Pl => base_1+"ькі"
                     } ;
              Dat => table {
                       Sg => base_1+"ьцы" ;
                       Pl => base_1+"ькам"
                     } ;
              Gen => table {
                       Sg => base_1+"ькі" ;
                       Pl => base_1+"ек"
                     } ;
              Loc => table {
                       Sg => base_1+"ьцы" ;
                       Pl => base_1+"ьках"
                     } ;
              Instr => table {
                         Sg => base_1+"ькай" ;
                         Pl => base_1+"ькамі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN197"
  } ;

mkN198 : Str -> N ;
mkN198 base =
  case base of {
    base_1+"т" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"т" ;
                       Pl => base_1+"ты"
                     } ;
              Acc => table {
                       Sg => base_1+"та" ;
                       Pl => base_1+"тоў"
                     } ;
              Dat => table {
                       Sg => base_1+"ту" ;
                       Pl => base_1+"там"
                     } ;
              Gen => table {
                       Sg => base_1+"та" ;
                       Pl => base_1+"тоў"
                     } ;
              Loc => table {
                       Sg => base_1+"це" ;
                       Pl => base_1+"тах"
                     } ;
              Instr => table {
                         Sg => base_1+"том" ;
                         Pl => base_1+"тамі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN198"
  } ;

mkN199 : Str -> N ;
mkN199 base =
  case base of {
    base_1+"ы" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ы" ;
                       Pl => base_1+"ы"
                     } ;
              Acc => table {
                       Sg => nonExist ;
                       Pl => base_1+"ы"
                     } ;
              Dat => table {
                       Sg => nonExist ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"оў" ;
                       Pl => base_1+"оў"
                     } ;
              Loc => table {
                       Sg => nonExist ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => nonExist ;
                         Pl => base_1+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN199"
  } ;

mkN200 : Str -> N ;
mkN200 base =
  case base of {
    base_1+"г" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"г" ;
                       Pl => nonExist
                     } ;
              Acc => table {
                       Sg => base_1+"г" ;
                       Pl => nonExist
                     } ;
              Dat => table {
                       Sg => base_1+"гу" ;
                       Pl => nonExist
                     } ;
              Gen => table {
                       Sg => base_1+"гу" ;
                       Pl => nonExist
                     } ;
              Loc => table {
                       Sg => base_1+"зе" ;
                       Pl => nonExist
                     } ;
              Instr => table {
                         Sg => base_1+"гам" ;
                         Pl => nonExist
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN200"
  } ;

mkN201 : Str -> N ;
mkN201 base =
  case base of {
    base_1+"е" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"е" ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"е" ;
                       Pl => base_1+"і"
                     } ;
              Dat => table {
                       Sg => base_1+"ю" ;
                       Pl => base_1+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"я" ;
                       Pl => base_1+"яў"
                     } ;
              Loc => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"ем" ;
                         Pl => base_1+"ямі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN201"
  } ;

mkN202 : Str -> N ;
mkN202 base =
  case base of {
    base_1+"е"+base_2@?+"та" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"е"+base_2+"та" ;
                       Pl => base_1+"я"+base_2+"ты"
                     } ;
              Acc => table {
                       Sg => base_1+"е"+base_2+"та" ;
                       Pl => base_1+"я"+base_2+"ты"
                     } ;
              Dat => table {
                       Sg => base_1+"е"+base_2+"ту" ;
                       Pl => base_1+"я"+base_2+"там"
                     } ;
              Gen => table {
                       Sg => base_1+"е"+base_2+"та" ;
                       Pl => base_1+"е"+base_2+"т"
                     } ;
              Loc => table {
                       Sg => base_1+"е"+base_2+"це" ;
                       Pl => base_1+"я"+base_2+"тах"
                     } ;
              Instr => table {
                         Sg => base_1+"е"+base_2+"там" ;
                         Pl => base_1+"я"+base_2+"тамі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN202"
  } ;

mkN203 : Str -> N ;
mkN203 base =
  case base of {
    base_1+"ь" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ь" ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"я" ;
                       Pl => base_1+"ёў"
                     } ;
              Dat => table {
                       Sg => base_1+"ю" ;
                       Pl => base_1+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"я" ;
                       Pl => base_1+"ёў"
                     } ;
              Loc => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"ём" ;
                         Pl => base_1+"ямі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN203"
  } ;

mkN204 : Str -> N ;
mkN204 base =
  case base of {
    base_1+"о"+base_2@(?+?+?) => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"о"+base_2 ;
                       Pl => base_1+"а"+base_2+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"о"+base_2 ;
                       Pl => base_1+"а"+base_2+"ы"
                     } ;
              Dat => table {
                       Sg => base_1+"а"+base_2+"у" ;
                       Pl => base_1+"а"+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"а"+base_2+"у" ;
                       Pl => base_1+"а"+base_2+"оў"
                     } ;
              Loc => table {
                       Sg => base_1+"а"+base_2+"ы" ;
                       Pl => base_1+"а"+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"а"+base_2+"ом" ;
                         Pl => base_1+"а"+base_2+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN204"
  } ;

mkN205 : Str -> N ;
mkN205 base =
  case base of {
    base_1+"т" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"т" ;
                       Pl => base_1+"ты"
                     } ;
              Acc => table {
                       Sg => base_1+"т" ;
                       Pl => base_1+"ты"
                     } ;
              Dat => table {
                       Sg => base_1+"ту" ;
                       Pl => base_1+"там"
                     } ;
              Gen => table {
                       Sg => base_1+"ту" ;
                       Pl => base_1+"тоў"
                     } ;
              Loc => table {
                       Sg => base_1+"це" ;
                       Pl => base_1+"тах"
                     } ;
              Instr => table {
                         Sg => base_1+"там" ;
                         Pl => base_1+"тамі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN205"
  } ;

mkN206 : Str -> N ;
mkN206 base =
  case base of {
    base_1+"я" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"я" ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"ю" ;
                       Pl => base_1+"і"
                     } ;
              Dat => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"й"
                     } ;
              Loc => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"яй" ;
                         Pl => base_1+"ямі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN206"
  } ;

mkN207 : Str -> N ;
mkN207 base =
  case base of {
    base_1+"о"+base_2@?+"ь" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"о"+base_2+"ь" ;
                       Pl => base_1+base_2+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"о"+base_2+"ь" ;
                       Pl => base_1+base_2+"і"
                     } ;
              Dat => table {
                       Sg => base_1+base_2+"ю" ;
                       Pl => base_1+base_2+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+base_2+"ю" ;
                       Pl => base_1+base_2+"ёў"
                     } ;
              Loc => table {
                       Sg => base_1+base_2+"і" ;
                       Pl => base_1+base_2+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+base_2+"ём" ;
                         Pl => base_1+base_2+"ямі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN207"
  } ;

mkN208 : Str -> N ;
mkN208 base =
  case base of {
    base_1+"о" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"о" ;
                       Pl => base_1+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"о" ;
                       Pl => base_1+"ы"
                     } ;
              Dat => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"а" ;
                       Pl => base_1
                     } ;
              Loc => table {
                       Sg => base_1+"е" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ом" ;
                         Pl => base_1+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN208"
  } ;

mkN209 : Str -> N ;
mkN209 base =
  case base of {
    base_1+"а" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"ы"
                     } ;
              Dat => table {
                       Sg => base_1+"зе" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"ы" ;
                       Pl => base_1+"аў"
                     } ;
              Loc => table {
                       Sg => base_1+"зе" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ой" ;
                         Pl => base_1+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN209"
  } ;

mkN210 : Str -> N ;
mkN210 base =
  case base of {
    base_1+"і" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ія"
                     } ;
              Acc => table {
                       Sg => base_1+"ага" ;
                       Pl => base_1+"іх"
                     } ;
              Dat => table {
                       Sg => base_1+"аму" ;
                       Pl => base_1+"ім"
                     } ;
              Gen => table {
                       Sg => base_1+"ага" ;
                       Pl => base_1+"іх"
                     } ;
              Loc => table {
                       Sg => base_1+"ім" ;
                       Pl => base_1+"іх"
                     } ;
              Instr => table {
                         Sg => base_1+"ім" ;
                         Pl => base_1+"імі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN210"
  } ;

mkN211 : Str -> N ;
mkN211 base =
  case base of {
    base_1+"ага" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ага" ;
                       Pl => base_1+"огі"
                     } ;
              Acc => table {
                       Sg => base_1+"агу" ;
                       Pl => base_1+"огі"
                     } ;
              Dat => table {
                       Sg => base_1+"азе" ;
                       Pl => base_1+"агам"
                     } ;
              Gen => table {
                       Sg => base_1+"агі" ;
                       Pl => base_1+"ог"
                     } ;
              Loc => table {
                       Sg => base_1+"азе" ;
                       Pl => base_1+"агах"
                     } ;
              Instr => table {
                         Sg => base_1+"агой" ;
                         Pl => base_1+"агамі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN211"
  } ;

mkN212 : Str -> N ;
mkN212 base =
  case base of {
    base_1+"ь" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ь" ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"ь" ;
                       Pl => base_1+"і"
                     } ;
              Dat => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ей"
                     } ;
              Loc => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"лю" ;
                         Pl => base_1+"ямі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN212"
  } ;

mkN213 : Str -> N ;
mkN213 base =
  case base of {
    base_1+"я"+base_2@?+base_3@?+"а" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"я"+base_2+base_3+"а" ;
                       Pl => base_1+"ё"+base_2+base_3+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"я"+base_2+base_3+"у" ;
                       Pl => base_1+"ё"+base_2+base_3+"ы"
                     } ;
              Dat => table {
                       Sg => base_1+"я"+base_2+base_3+"е" ;
                       Pl => base_1+"ё"+base_2+base_3+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"я"+base_2+base_3+"ы" ;
                       Pl => base_1+"ё"+base_2+"е"+base_3
                     } ;
              Loc => table {
                       Sg => base_1+"я"+base_2+base_3+"е" ;
                       Pl => base_1+"ё"+base_2+base_3+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"я"+base_2+base_3+"ой" ;
                         Pl => base_1+"ё"+base_2+base_3+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN213"
  } ;

mkN214 : Str -> N ;
mkN214 base =
  case base of {
    base_1 => lin N
      { s = table {
              Nom => table {
                       Sg => base_1 ;
                       Pl => base_1+"ы"
                     } ;
              Acc => table {
                       Sg => base_1 ;
                       Pl => base_1+"ы"
                     } ;
              Dat => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"оў"
                     } ;
              Loc => table {
                       Sg => base_1+"е" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ом" ;
                         Pl => base_1+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN214"
  } ;

mkN215 : Str -> N ;
mkN215 base =
  case base of {
    base_1@?+"а"+base_2+"а" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"а"+base_2+"а" ;
                       Pl => base_1+"о"+base_2+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"а"+base_2+"у" ;
                       Pl => base_1+"о"+base_2+"ы"
                     } ;
              Dat => table {
                       Sg => base_1+"а"+base_2+"е" ;
                       Pl => base_1+"о"+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"а"+base_2+"ы" ;
                       Pl => base_1+"о"+base_2+"аў"
                     } ;
              Loc => table {
                       Sg => base_1+"а"+base_2+"е" ;
                       Pl => base_1+"о"+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"а"+base_2+"ой" ;
                         Pl => base_1+"о"+base_2+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN215"
  } ;

mkN216 : Str -> N ;
mkN216 base =
  case base of {
    base_1+base_2@?+"а" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+base_2+"а" ;
                       Pl => base_1+base_2+"і"
                     } ;
              Acc => table {
                       Sg => base_1+base_2+"а" ;
                       Pl => base_1+base_2+"і"
                     } ;
              Dat => table {
                       Sg => base_1+base_2+"у" ;
                       Pl => base_1+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+base_2+"а" ;
                       Pl => base_1+"а"+base_2
                     } ;
              Loc => table {
                       Sg => base_1+base_2+"у" ;
                       Pl => base_1+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+base_2+"ам" ;
                         Pl => base_1+base_2+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN216"
  } ;

mkN217 : Str -> N ;
mkN217 base =
  case base of {
    base_1+"ўка" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ўка" ;
                       Pl => base_1+"ўкі"
                     } ;
              Acc => table {
                       Sg => base_1+"ўку" ;
                       Pl => base_1+"ўкі"
                     } ;
              Dat => table {
                       Sg => base_1+"ўцы" ;
                       Pl => base_1+"ўкам"
                     } ;
              Gen => table {
                       Sg => base_1+"ўкі" ;
                       Pl => base_1+"вак"
                     } ;
              Loc => table {
                       Sg => base_1+"ўцы" ;
                       Pl => base_1+"ўках"
                     } ;
              Instr => table {
                         Sg => base_1+"ўкай" ;
                         Pl => base_1+"ўкамі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN217"
  } ;

mkN218 : Str -> N ;
mkN218 base =
  case base of {
    base_1+"та" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"та" ;
                       Pl => nonExist
                     } ;
              Acc => table {
                       Sg => base_1+"ту" ;
                       Pl => nonExist
                     } ;
              Dat => table {
                       Sg => base_1+"це" ;
                       Pl => nonExist
                     } ;
              Gen => table {
                       Sg => base_1+"ты" ;
                       Pl => nonExist
                     } ;
              Loc => table {
                       Sg => base_1+"це" ;
                       Pl => nonExist
                     } ;
              Instr => table {
                         Sg => base_1+"той" ;
                         Pl => nonExist
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN218"
  } ;

mkN219 : Str -> N ;
mkN219 base =
  case base of {
    base_1+"ец" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ец" ;
                       Pl => base_1+"цы"
                     } ;
              Acc => table {
                       Sg => base_1+"ца" ;
                       Pl => base_1+"цаў"
                     } ;
              Dat => table {
                       Sg => base_1+"цу" ;
                       Pl => base_1+"цам"
                     } ;
              Gen => table {
                       Sg => base_1+"ца" ;
                       Pl => base_1+"цаў"
                     } ;
              Loc => table {
                       Sg => base_1+"цу" ;
                       Pl => base_1+"цах"
                     } ;
              Instr => table {
                         Sg => base_1+"цам" ;
                         Pl => base_1+"цамі"
                       }
            } ;
        Voc = table {
                Sg => base_1+"ча" ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN219"
  } ;

mkN220 : Str -> N ;
mkN220 base =
  case base of {
    base_1+"о"+base_2@? => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"о"+base_2 ;
                       Pl => base_1+"о"+base_2+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"о"+base_2 ;
                       Pl => base_1+"о"+base_2+"ы"
                     } ;
              Dat => table {
                       Sg => base_1+"о"+base_2+"ы" ;
                       Pl => base_1+"а"+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"о"+base_2+"ы" ;
                       Pl => base_1+"а"+base_2+"эй"
                     } ;
              Loc => table {
                       Sg => base_1+"о"+base_2+"ы" ;
                       Pl => base_1+"а"+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"о"+base_2+"чу" ;
                         Pl => base_1+"а"+base_2+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN220"
  } ;

mkN221 : Str -> N ;
mkN221 base =
  case base of {
    base_1+"ыха" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ыха" ;
                       Pl => base_1+"охі"
                     } ;
              Acc => table {
                       Sg => base_1+"ыху" ;
                       Pl => base_1+"ох"
                     } ;
              Dat => table {
                       Sg => base_1+"ысе" ;
                       Pl => base_1+"охам"
                     } ;
              Gen => table {
                       Sg => base_1+"ыхі" ;
                       Pl => base_1+"ох"
                     } ;
              Loc => table {
                       Sg => base_1+"ысе" ;
                       Pl => base_1+"охах"
                     } ;
              Instr => table {
                         Sg => base_1+"ыхой" ;
                         Pl => base_1+"охамі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN221"
  } ;

mkN222 : Str -> N ;
mkN222 base =
  case base of {
    "а"+base_1+"о" => lin N
      { s = table {
              Nom => table {
                       Sg => "а"+base_1+"о" ;
                       Pl => "во"+base_1+"ы"
                     } ;
              Acc => table {
                       Sg => "а"+base_1+"о" ;
                       Pl => "во"+base_1+"ы"
                     } ;
              Dat => table {
                       Sg => "а"+base_1+"у" ;
                       Pl => "во"+base_1+"ам"
                     } ;
              Gen => table {
                       Sg => "а"+base_1+"а" ;
                       Pl => "во"+base_1+"аў"
                     } ;
              Loc => table {
                       Sg => "а"+base_1+"е" ;
                       Pl => "во"+base_1+"ах"
                     } ;
              Instr => table {
                         Sg => "а"+base_1+"ом" ;
                         Pl => "во"+base_1+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN222"
  } ;

mkN223 : Str -> N ;
mkN223 base =
  case base of {
    "во"+base_1+"е"+base_2@?+"а" => lin N
      { s = table {
              Nom => table {
                       Sg => "во"+base_1+"е"+base_2+"а" ;
                       Pl => "а"+base_1+"ё"+base_2+"ы"
                     } ;
              Acc => table {
                       Sg => "во"+base_1+"е"+base_2+"а" ;
                       Pl => "а"+base_1+"ё"+base_2+"ы"
                     } ;
              Dat => table {
                       Sg => "во"+base_1+"е"+base_2+"у" ;
                       Pl => "а"+base_1+"ё"+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => "во"+base_1+"е"+base_2+"а" ;
                       Pl => "а"+base_1+"ё"+base_2
                     } ;
              Loc => table {
                       Sg => "во"+base_1+"е"+base_2+"ы" ;
                       Pl => "а"+base_1+"ё"+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => "во"+base_1+"е"+base_2+"ам" ;
                         Pl => "а"+base_1+"ё"+base_2+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN223"
  } ;

mkN224 : Str -> N ;
mkN224 base =
  case base of {
    base_1+"я"+base_2@?+base_3@?+"о" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"я"+base_2+base_3+"о" ;
                       Pl => base_1+"ё"+base_2+base_3+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"я"+base_2+base_3+"о" ;
                       Pl => base_1+"ё"+base_2+base_3+"ы"
                     } ;
              Dat => table {
                       Sg => base_1+"я"+base_2+base_3+"у" ;
                       Pl => base_1+"ё"+base_2+base_3+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"я"+base_2+base_3+"а" ;
                       Pl => base_1+"ё"+base_2+"зе"+base_3
                     } ;
              Loc => table {
                       Sg => base_1+"я"+base_2+base_3+"ы" ;
                       Pl => base_1+"ё"+base_2+base_3+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"я"+base_2+base_3+"ом" ;
                         Pl => base_1+"ё"+base_2+base_3+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN224"
  } ;

mkN225 : Str -> N ;
mkN225 base =
  case base of {
    base_1+"і"+base_2@?+"я" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"і"+base_2+"я" ;
                       Pl => base_1+"е"+base_2+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"і"+base_2+"я" ;
                       Pl => base_1+"я"+base_2+"ей"
                     } ;
              Dat => table {
                       Sg => base_1+"і"+base_2+"яці" ;
                       Pl => base_1+"е"+base_2+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"і"+base_2+"яці" ;
                       Pl => base_1+"я"+base_2+"ей"
                     } ;
              Loc => table {
                       Sg => base_1+"і"+base_2+"яці" ;
                       Pl => base_1+"е"+base_2+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"і"+base_2+"ем" ;
                         Pl => base_1+"е"+base_2+"ьмі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN225"
  } ;

mkN226 : Str -> N ;
mkN226 base =
  case base of {
    base_1+"я"+base_2@?+"'я" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"я"+base_2+"'я" ;
                       Pl => base_1+"е"+base_2+"'і"
                     } ;
              Acc => table {
                       Sg => base_1+"я"+base_2+"'ю" ;
                       Pl => base_1+"е"+base_2+"'і"
                     } ;
              Dat => table {
                       Sg => base_1+"я"+base_2+"'і" ;
                       Pl => base_1+"е"+base_2+"'ям"
                     } ;
              Gen => table {
                       Sg => base_1+"я"+base_2+"'і" ;
                       Pl => base_1+"я"+base_2+"ей"
                     } ;
              Loc => table {
                       Sg => base_1+"я"+base_2+"'і" ;
                       Pl => base_1+"е"+base_2+"'ях"
                     } ;
              Instr => table {
                         Sg => base_1+"я"+base_2+"'ёй" ;
                         Pl => base_1+"е"+base_2+"'ямі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN226"
  } ;

mkN227 : Str -> N ;
mkN227 base =
  case base of {
    base_1 => lin N
      { s = table {
              Nom => table {
                       Sg => base_1 ;
                       Pl => nonExist
                     } ;
              Acc => table {
                       Sg => base_1 ;
                       Pl => nonExist
                     } ;
              Dat => table {
                       Sg => base_1+"ы" ;
                       Pl => nonExist
                     } ;
              Gen => table {
                       Sg => base_1+"ы" ;
                       Pl => nonExist
                     } ;
              Loc => table {
                       Sg => base_1+"ы" ;
                       Pl => nonExist
                     } ;
              Instr => table {
                         Sg => base_1+"'ю" ;
                         Pl => nonExist
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN227"
  } ;

mkN228 : Str -> N ;
mkN228 base =
  case base of {
    base_1+"ха" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ха" ;
                       Pl => base_1+"шы"
                     } ;
              Acc => table {
                       Sg => base_1+"ха" ;
                       Pl => base_1+"шы"
                     } ;
              Dat => table {
                       Sg => base_1+"ху" ;
                       Pl => base_1+"шам"
                     } ;
              Gen => table {
                       Sg => base_1+"ха" ;
                       Pl => base_1+"шэй"
                     } ;
              Loc => table {
                       Sg => base_1+"ху" ;
                       Pl => base_1+"шах"
                     } ;
              Instr => table {
                         Sg => base_1+"хам" ;
                         Pl => base_1+"шамі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN228"
  } ;

mkN229 : Str -> N ;
mkN229 base =
  case base of {
    base_1+"оў" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"оў" ;
                       Pl => nonExist
                     } ;
              Acc => table {
                       Sg => base_1+"оў" ;
                       Pl => nonExist
                     } ;
              Dat => table {
                       Sg => base_1+"ві" ;
                       Pl => nonExist
                     } ;
              Gen => table {
                       Sg => base_1+"ві" ;
                       Pl => nonExist
                     } ;
              Loc => table {
                       Sg => base_1+"ві" ;
                       Pl => nonExist
                     } ;
              Instr => table {
                         Sg => base_1+"оўю" ;
                         Pl => nonExist
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN229"
  } ;

mkN230 : Str -> N ;
mkN230 base =
  case base of {
    base_1+"ё" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ё" ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"ё" ;
                       Pl => base_1+"і"
                     } ;
              Dat => table {
                       Sg => base_1+"ю" ;
                       Pl => base_1+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"я" ;
                       Pl => base_1+"яў"
                     } ;
              Loc => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"ём" ;
                         Pl => base_1+"ямі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN230"
  } ;

mkN231 : Str -> N ;
mkN231 base =
  case base of {
    base_1+"я"+base_2@(?+?)+"о" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"я"+base_2+"о" ;
                       Pl => base_1+"ё"+base_2+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"я"+base_2+"о" ;
                       Pl => base_1+"ё"+base_2+"ы"
                     } ;
              Dat => table {
                       Sg => base_1+"я"+base_2+"у" ;
                       Pl => base_1+"ё"+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"я"+base_2+"а" ;
                       Pl => base_1+"ё"+base_2+"аў"
                     } ;
              Loc => table {
                       Sg => base_1+"я"+base_2+"зе" ;
                       Pl => base_1+"ё"+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"я"+base_2+"ом" ;
                         Pl => base_1+"ё"+base_2+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN231"
  } ;

mkN232 : Str -> N ;
mkN232 base =
  case base of {
    base_1+"я" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"я" ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"ю" ;
                       Pl => base_1+"ь"
                     } ;
              Dat => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ь"
                     } ;
              Loc => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"яй" ;
                         Pl => base_1+"ямі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN232"
  } ;

mkN233 : Str -> N ;
mkN233 base =
  case base of {
    "во"+base_1+"ў" => lin N
      { s = table {
              Nom => table {
                       Sg => "во"+base_1+"ў" ;
                       Pl => "а"+base_1+"вы"
                     } ;
              Acc => table {
                       Sg => "во"+base_1+"ў" ;
                       Pl => "а"+base_1+"вы"
                     } ;
              Dat => table {
                       Sg => "во"+base_1+"ву" ;
                       Pl => "а"+base_1+"вам"
                     } ;
              Gen => table {
                       Sg => "во"+base_1+"ва" ;
                       Pl => "а"+base_1+"воў"
                     } ;
              Loc => table {
                       Sg => "во"+base_1+"ве" ;
                       Pl => "а"+base_1+"вах"
                     } ;
              Instr => table {
                         Sg => "во"+base_1+"вам" ;
                         Pl => "а"+base_1+"вамі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN233"
  } ;

mkN234 : Str -> N ;
mkN234 base =
  case base of {
    base_1 => lin N
      { s = table {
              Nom => table {
                       Sg => base_1 ;
                       Pl => base_1
                     } ;
              Acc => table {
                       Sg => base_1 ;
                       Pl => base_1
                     } ;
              Dat => table {
                       Sg => base_1 ;
                       Pl => base_1
                     } ;
              Gen => table {
                       Sg => base_1 ;
                       Pl => base_1
                     } ;
              Loc => table {
                       Sg => base_1 ;
                       Pl => base_1
                     } ;
              Instr => table {
                         Sg => base_1 ;
                         Pl => base_1
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN234"
  } ;

mkN235 : Str -> N ;
mkN235 base =
  case base of {
    base_1+"е"+base_2@? => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"е"+base_2 ;
                       Pl => base_1+"й"+base_2+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"й"+base_2+"а" ;
                       Pl => base_1+"й"+base_2+"аў"
                     } ;
              Dat => table {
                       Sg => base_1+"й"+base_2+"у" ;
                       Pl => base_1+"й"+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"й"+base_2+"а" ;
                       Pl => base_1+"й"+base_2+"аў"
                     } ;
              Loc => table {
                       Sg => base_1+"й"+base_2+"у" ;
                       Pl => base_1+"й"+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"й"+base_2+"ам" ;
                         Pl => base_1+"й"+base_2+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN235"
  } ;

mkN236 : Str -> N ;
mkN236 base =
  case base of {
    base_1+"е"+base_2@?+"ы" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"е"+base_2+"ы" ;
                       Pl => base_1+"е"+base_2+"ы"
                     } ;
              Acc => table {
                       Sg => nonExist ;
                       Pl => base_1+"е"+base_2+"ы"
                     } ;
              Dat => table {
                       Sg => nonExist ;
                       Pl => base_1+"я"+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"я"+base_2+"эй" ;
                       Pl => base_1+"я"+base_2+"эй"
                     } ;
              Loc => table {
                       Sg => nonExist ;
                       Pl => base_1+"я"+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => nonExist ;
                         Pl => base_1+"я"+base_2+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN236"
  } ;

mkN237 : Str -> N ;
mkN237 base =
  case base of {
    base_1+"ь" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ь" ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"я" ;
                       Pl => base_1+"яў"
                     } ;
              Dat => table {
                       Sg => base_1+"ю" ;
                       Pl => base_1+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"я" ;
                       Pl => base_1+"яў"
                     } ;
              Loc => table {
                       Sg => base_1+"ю" ;
                       Pl => base_1+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"ем" ;
                         Pl => base_1+"ямі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN237"
  } ;

mkN238 : Str -> N ;
mkN238 base =
  case base of {
    base_1+"а"+base_2@? => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"а"+base_2 ;
                       Pl => base_1+base_2+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+base_2+"а" ;
                       Pl => base_1+base_2+"оў"
                     } ;
              Dat => table {
                       Sg => base_1+base_2+"у" ;
                       Pl => base_1+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+base_2+"а" ;
                       Pl => base_1+base_2+"оў"
                     } ;
              Loc => table {
                       Sg => base_1+base_2+"у" ;
                       Pl => base_1+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+base_2+"ам" ;
                         Pl => base_1+base_2+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN238"
  } ;

mkN239 : Str -> N ;
mkN239 base =
  case base of {
    base_1+"ін" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ін" ;
                       Pl => base_1+"е"
                     } ;
              Acc => table {
                       Sg => base_1+"іна" ;
                       Pl => base_1
                     } ;
              Dat => table {
                       Sg => base_1+"іну" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"іна" ;
                       Pl => base_1
                     } ;
              Loc => table {
                       Sg => base_1+"іне" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"інам" ;
                         Pl => base_1+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN239"
  } ;

mkN240 : Str -> N ;
mkN240 base =
  case base of {
    base_1+"ва"+base_2@? => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ва"+base_2 ;
                       Pl => base_1+"ў"+base_2+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"ва"+base_2 ;
                       Pl => base_1+"ў"+base_2+"і"
                     } ;
              Dat => table {
                       Sg => base_1+"ў"+base_2+"у" ;
                       Pl => base_1+"ў"+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"ў"+base_2+"а" ;
                       Pl => base_1+"ў"+base_2+"аў"
                     } ;
              Loc => table {
                       Sg => base_1+"ў"+base_2+"у" ;
                       Pl => base_1+"ў"+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ў"+base_2+"ам" ;
                         Pl => base_1+"ў"+base_2+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN240"
  } ;

mkN241 : Str -> N ;
mkN241 base =
  case base of {
    base_1+"і" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => nonExist ;
                       Pl => base_1+"і"
                     } ;
              Dat => table {
                       Sg => nonExist ;
                       Pl => base_1+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"яў" ;
                       Pl => base_1+"яў"
                     } ;
              Loc => table {
                       Sg => nonExist ;
                       Pl => base_1+"ях"
                     } ;
              Instr => table {
                         Sg => nonExist ;
                         Pl => base_1+"ямі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN241"
  } ;

mkN242 : Str -> N ;
mkN242 base =
  case base of {
    base_1+"і" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => nonExist ;
                       Pl => base_1+"і"
                     } ;
              Dat => table {
                       Sg => nonExist ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"оў" ;
                       Pl => base_1+"оў"
                     } ;
              Loc => table {
                       Sg => nonExist ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => nonExist ;
                         Pl => base_1+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN242"
  } ;

mkN243 : Str -> N ;
mkN243 base =
  case base of {
    base_1+"я"+base_2@("ляш"|"люш"|(?+?+?+?)) => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"я"+base_2 ;
                       Pl => base_1+"е"+base_2+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"я"+base_2 ;
                       Pl => base_1+"е"+base_2+"ы"
                     } ;
              Dat => table {
                       Sg => base_1+"е"+base_2+"у" ;
                       Pl => base_1+"е"+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"е"+base_2+"а" ;
                       Pl => base_1+"е"+base_2+"оў"
                     } ;
              Loc => table {
                       Sg => base_1+"е"+base_2+"ы" ;
                       Pl => base_1+"е"+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"е"+base_2+"ом" ;
                         Pl => base_1+"е"+base_2+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN243"
  } ;

mkN244 : Str -> N ;
mkN244 base =
  case base of {
    base_1+"і" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => nonExist ;
                       Pl => base_1+"і"
                     } ;
              Dat => table {
                       Sg => nonExist ;
                       Pl => base_1+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"ей" ;
                       Pl => base_1+"ей"
                     } ;
              Loc => table {
                       Sg => nonExist ;
                       Pl => base_1+"ях"
                     } ;
              Instr => table {
                         Sg => nonExist ;
                         Pl => base_1+"ьмі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN244"
  } ;

mkN245 : Str -> N ;
mkN245 base =
  case base of {
    base_1+"та" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"та" ;
                       Pl => base_1+"ты"
                     } ;
              Acc => table {
                       Sg => base_1+"та" ;
                       Pl => base_1+"ты"
                     } ;
              Dat => table {
                       Sg => base_1+"ту" ;
                       Pl => base_1+"там"
                     } ;
              Gen => table {
                       Sg => base_1+"та" ;
                       Pl => base_1+"т"
                     } ;
              Loc => table {
                       Sg => base_1+"це" ;
                       Pl => base_1+"тах"
                     } ;
              Instr => table {
                         Sg => base_1+"там" ;
                         Pl => base_1+"тамі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN245"
  } ;

mkN246 : Str -> N ;
mkN246 base =
  case base of {
    base_1@?+"я"+base_2+"о" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"я"+base_2+"о" ;
                       Pl => base_1+"ё"+base_2+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"я"+base_2+"о" ;
                       Pl => base_1+"ё"+base_2+"ы"
                     } ;
              Dat => table {
                       Sg => base_1+"я"+base_2+"у" ;
                       Pl => base_1+"ё"+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"я"+base_2+"а" ;
                       Pl => base_1+"ё"+base_2+"аў"
                     } ;
              Loc => table {
                       Sg => base_1+"я"+base_2+"ы" ;
                       Pl => base_1+"ё"+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"я"+base_2+"ом" ;
                         Pl => base_1+"ё"+base_2+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN246"
  } ;

mkN247 : Str -> N ;
mkN247 base =
  case base of {
    base_1+"о"+base_2@?+"ь" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"о"+base_2+"ь" ;
                       Pl => base_1+"а"+base_2+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"а"+base_2+"я" ;
                       Pl => base_1+"а"+base_2+"ёў"
                     } ;
              Dat => table {
                       Sg => base_1+"а"+base_2+"ю" ;
                       Pl => base_1+"а"+base_2+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"а"+base_2+"я" ;
                       Pl => base_1+"а"+base_2+"ёў"
                     } ;
              Loc => table {
                       Sg => base_1+"а"+base_2+"ю" ;
                       Pl => base_1+"а"+base_2+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"а"+base_2+"ём" ;
                         Pl => base_1+"а"+base_2+"ямі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN247"
  } ;

mkN248 : Str -> N ;
mkN248 base =
  case base of {
    base_1+"а" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"і"
                     } ;
              Dat => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"ь"
                     } ;
              Loc => table {
                       Sg => base_1+"е" ;
                       Pl => base_1+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"ам" ;
                         Pl => base_1+"ямі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN248"
  } ;

mkN249 : Str -> N ;
mkN249 base =
  case base of {
    base_1+"а"+base_2@?+"ка" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"а"+base_2+"ка" ;
                       Pl => base_1+"о"+base_2+"кі"
                     } ;
              Acc => table {
                       Sg => base_1+"а"+base_2+"ку" ;
                       Pl => base_1+"а"+base_2+"ок"
                     } ;
              Dat => table {
                       Sg => base_1+"а"+base_2+"цэ" ;
                       Pl => base_1+"о"+base_2+"кам"
                     } ;
              Gen => table {
                       Sg => base_1+"а"+base_2+"кі" ;
                       Pl => base_1+"а"+base_2+"ок"
                     } ;
              Loc => table {
                       Sg => base_1+"а"+base_2+"цэ" ;
                       Pl => base_1+"о"+base_2+"ках"
                     } ;
              Instr => table {
                         Sg => base_1+"а"+base_2+"кой" ;
                         Pl => base_1+"о"+base_2+"камі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN249"
  } ;

mkN250 : Str -> N ;
mkN250 base =
  case base of {
    base_1+"йцец" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"йцец" ;
                       Pl => base_1+"йцы"
                     } ;
              Acc => table {
                       Sg => base_1+"йца" ;
                       Pl => base_1+"йцоў"
                     } ;
              Dat => table {
                       Sg => base_1+"йцу" ;
                       Pl => base_1+"йцам"
                     } ;
              Gen => table {
                       Sg => base_1+"йца" ;
                       Pl => base_1+"йцоў"
                     } ;
              Loc => table {
                       Sg => base_1+"йцу" ;
                       Pl => base_1+"йцах"
                     } ;
              Instr => table {
                         Sg => base_1+"йцом" ;
                         Pl => base_1+"йцамі"
                       }
            } ;
        Voc = table {
                Sg => "войч"+base_1 ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN250"
  } ;

mkN251 : Str -> N ;
mkN251 base =
  case base of {
    base_1+"а"+base_2@? => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"а"+base_2 ;
                       Pl => base_1+base_2+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"а"+base_2 ;
                       Pl => base_1+base_2+"і"
                     } ;
              Dat => table {
                       Sg => base_1+base_2+"у" ;
                       Pl => base_1+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+base_2+"у" ;
                       Pl => base_1+base_2+"аў"
                     } ;
              Loc => table {
                       Sg => base_1+base_2+"у" ;
                       Pl => base_1+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+base_2+"ам" ;
                         Pl => base_1+base_2+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN251"
  } ;

mkN252 : Str -> N ;
mkN252 base =
  case base of {
    base_1+"ў" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ў" ;
                       Pl => base_1+"вы"
                     } ;
              Acc => table {
                       Sg => base_1+"ў" ;
                       Pl => base_1+"вы"
                     } ;
              Dat => table {
                       Sg => base_1+"ву" ;
                       Pl => base_1+"вам"
                     } ;
              Gen => table {
                       Sg => base_1+"ву" ;
                       Pl => base_1+"ваў"
                     } ;
              Loc => table {
                       Sg => base_1+"ве" ;
                       Pl => base_1+"вах"
                     } ;
              Instr => table {
                         Sg => base_1+"вам" ;
                         Pl => base_1+"вамі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN252"
  } ;

mkN253 : Str -> N ;
mkN253 base =
  case base of {
    base_1+"е"+base_2@? => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"е"+base_2 ;
                       Pl => base_1+"я"+base_2+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"е"+base_2+"а" ;
                       Pl => base_1+"я"+base_2+"оў"
                     } ;
              Dat => table {
                       Sg => base_1+"е"+base_2+"у" ;
                       Pl => base_1+"я"+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"е"+base_2+"а" ;
                       Pl => base_1+"я"+base_2+"оў"
                     } ;
              Loc => table {
                       Sg => base_1+"е"+base_2+"зе" ;
                       Pl => base_1+"я"+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"е"+base_2+"ам" ;
                         Pl => base_1+"я"+base_2+"амі"
                       }
            } ;
        Voc = table {
                Sg => base_1+"е"+base_2+"у" ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN253"
  } ;

mkN254 : Str -> N ;
mkN254 base =
  case base of {
    base_1+"я"+base_2@?+base_3@?+"о" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"я"+base_2+base_3+"о" ;
                       Pl => base_1+"ё"+base_2+base_3+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"я"+base_2+base_3+"о" ;
                       Pl => base_1+"ё"+base_2+base_3+"ы"
                     } ;
              Dat => table {
                       Sg => base_1+"я"+base_2+base_3+"у" ;
                       Pl => base_1+"ё"+base_2+base_3+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"я"+base_2+base_3+"а" ;
                       Pl => base_1+"ё"+base_2+"е"+base_3
                     } ;
              Loc => table {
                       Sg => base_1+"я"+base_2+base_3+"е" ;
                       Pl => base_1+"ё"+base_2+base_3+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"я"+base_2+base_3+"ом" ;
                         Pl => base_1+"ё"+base_2+base_3+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN254"
  } ;

mkN255 : Str -> N ;
mkN255 base =
  case base of {
    base_1+"ё"+base_2@? => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ё"+base_2 ;
                       Pl => base_1+base_2+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+base_2+"а" ;
                       Pl => base_1+base_2+"оў"
                     } ;
              Dat => table {
                       Sg => base_1+base_2+"у" ;
                       Pl => base_1+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+base_2+"а" ;
                       Pl => base_1+base_2+"оў"
                     } ;
              Loc => table {
                       Sg => base_1+base_2+"ы" ;
                       Pl => base_1+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+base_2+"ом" ;
                         Pl => base_1+base_2+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN255"
  } ;

mkN256 : Str -> N ;
mkN256 base =
  case base of {
    base_1+"а" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"і"
                     } ;
              Dat => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"аў"
                     } ;
              Loc => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ам" ;
                         Pl => base_1+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN256"
  } ;

mkN257 : Str -> N ;
mkN257 base =
  case base of {
    base_1+"я"+base_2@(?+?)+"а" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"я"+base_2+"а" ;
                       Pl => base_1+"ё"+base_2+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"я"+base_2+"у" ;
                       Pl => base_1+"ё"+base_2+"ы"
                     } ;
              Dat => table {
                       Sg => base_1+"я"+base_2+"е" ;
                       Pl => base_1+"ё"+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"я"+base_2+"ы" ;
                       Pl => base_1+"ё"+base_2+"аў"
                     } ;
              Loc => table {
                       Sg => base_1+"я"+base_2+"е" ;
                       Pl => base_1+"ё"+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"я"+base_2+"ой" ;
                         Pl => base_1+"ё"+base_2+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN257"
  } ;

mkN258 : Str -> N ;
mkN258 base =
  case base of {
    base_1+"е"+base_2@? => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"е"+base_2 ;
                       Pl => base_1+base_2+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+base_2+"а" ;
                       Pl => base_1+base_2+"оў"
                     } ;
              Dat => table {
                       Sg => base_1+base_2+"у" ;
                       Pl => base_1+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+base_2+"а" ;
                       Pl => base_1+base_2+"оў"
                     } ;
              Loc => table {
                       Sg => base_1+base_2+"е" ;
                       Pl => base_1+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+base_2+"ам" ;
                         Pl => base_1+base_2+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN258"
  } ;

mkN259 : Str -> N ;
mkN259 base =
  case base of {
    base_1+"от" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"от" ;
                       Pl => base_1+"аты"
                     } ;
              Acc => table {
                       Sg => base_1+"от" ;
                       Pl => base_1+"аты"
                     } ;
              Dat => table {
                       Sg => base_1+"ату" ;
                       Pl => base_1+"атам"
                     } ;
              Gen => table {
                       Sg => base_1+"ата" ;
                       Pl => base_1+"атоў"
                     } ;
              Loc => table {
                       Sg => base_1+"аце" ;
                       Pl => base_1+"атах"
                     } ;
              Instr => table {
                         Sg => base_1+"атом" ;
                         Pl => base_1+"атамі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN259"
  } ;

mkN260 : Str -> N ;
mkN260 base =
  case base of {
    base_1+base_2@?+"а" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+base_2+"а" ;
                       Pl => base_1+base_2+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+base_2+"а" ;
                       Pl => base_1+base_2+"ы"
                     } ;
              Dat => table {
                       Sg => base_1+base_2+"у" ;
                       Pl => base_1+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+base_2+"а" ;
                       Pl => base_1+"е"+base_2
                     } ;
              Loc => table {
                       Sg => base_1+base_2+"е" ;
                       Pl => base_1+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+base_2+"ам" ;
                         Pl => base_1+base_2+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN260"
  } ;

mkN261 : Str -> N ;
mkN261 base =
  case base of {
    base_1+"ыца" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ыца" ;
                       Pl => base_1+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"ыцу" ;
                       Pl => base_1+"эй"
                     } ;
              Dat => table {
                       Sg => base_1+"ыцы" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"ыцы" ;
                       Pl => base_1+"эй"
                     } ;
              Loc => table {
                       Sg => base_1+"ыцы" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ыцай" ;
                         Pl => base_1+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN261"
  } ;

mkN262 : Str -> N ;
mkN262 base =
  case base of {
    base_1+"ь" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ь" ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"ь" ;
                       Pl => base_1+"і"
                     } ;
              Dat => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ей"
                     } ;
              Loc => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"ю" ;
                         Pl => base_1+"ямі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN262"
  } ;

mkN263 : Str -> N ;
mkN263 base =
  case base of {
    base_1+"яя" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"яя" ;
                       Pl => base_1+"еі"
                     } ;
              Acc => table {
                       Sg => base_1+"яю" ;
                       Pl => base_1+"ей"
                     } ;
              Dat => table {
                       Sg => base_1+"яі" ;
                       Pl => base_1+"еям"
                     } ;
              Gen => table {
                       Sg => base_1+"яі" ;
                       Pl => base_1+"ей"
                     } ;
              Loc => table {
                       Sg => base_1+"яі" ;
                       Pl => base_1+"еях"
                     } ;
              Instr => table {
                         Sg => base_1+"яёй" ;
                         Pl => base_1+"еямі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN263"
  } ;

mkN264 : Str -> N ;
mkN264 base =
  case base of {
    base_1+"еў" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"еў" ;
                       Pl => "і"+base_1+"ьвы"
                     } ;
              Acc => table {
                       Sg => "і"+base_1+"ьва" ;
                       Pl => "і"+base_1+"ьвоў"
                     } ;
              Dat => table {
                       Sg => "і"+base_1+"ьву" ;
                       Pl => "і"+base_1+"ьвам"
                     } ;
              Gen => table {
                       Sg => "і"+base_1+"ьва" ;
                       Pl => "і"+base_1+"ьвоў"
                     } ;
              Loc => table {
                       Sg => "і"+base_1+"ьве" ;
                       Pl => "і"+base_1+"ьвах"
                     } ;
              Instr => table {
                         Sg => "і"+base_1+"ьвом" ;
                         Pl => "і"+base_1+"ьвамі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN264"
  } ;

mkN265 : Str -> N ;
mkN265 base =
  case base of {
    base_1+"зе"+base_2@? => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"зе"+base_2 ;
                       Pl => base_1+base_2+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+base_2+"а" ;
                       Pl => base_1+base_2+"аў"
                     } ;
              Dat => table {
                       Sg => base_1+base_2+"у" ;
                       Pl => base_1+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+base_2+"а" ;
                       Pl => base_1+base_2+"аў"
                     } ;
              Loc => table {
                       Sg => base_1+base_2+"у" ;
                       Pl => base_1+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+base_2+"ам" ;
                         Pl => base_1+base_2+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN265"
  } ;

mkN266 : Str -> N ;
mkN266 base =
  case base of {
    base_1+"а"+base_2@(?+?+?)+"а" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"а"+base_2+"а" ;
                       Pl => base_1+"э"+base_2+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"а"+base_2+"у" ;
                       Pl => base_1+"э"+base_2+"ы"
                     } ;
              Dat => table {
                       Sg => base_1+"а"+base_2+"е" ;
                       Pl => base_1+"э"+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"а"+base_2+"ы" ;
                       Pl => base_1+"э"+base_2+"аў"
                     } ;
              Loc => table {
                       Sg => base_1+"а"+base_2+"е" ;
                       Pl => base_1+"э"+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"а"+base_2+"ой" ;
                         Pl => base_1+"э"+base_2+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN266"
  } ;

mkN267 : Str -> N ;
mkN267 base =
  case base of {
    base_1+"о"+base_2@(?+?+?)+"ы" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"о"+base_2+"ы" ;
                       Pl => base_1+"о"+base_2+"ы"
                     } ;
              Acc => table {
                       Sg => nonExist ;
                       Pl => base_1+"о"+base_2+"ы"
                     } ;
              Dat => table {
                       Sg => nonExist ;
                       Pl => base_1+"а"+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"а"+base_2+"эй" ;
                       Pl => base_1+"а"+base_2+"эй"
                     } ;
              Loc => table {
                       Sg => nonExist ;
                       Pl => base_1+"а"+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => nonExist ;
                         Pl => base_1+"а"+base_2+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN267"
  } ;

mkN268 : Str -> N ;
mkN268 base =
  case base of {
    "во"+base_1+"ь" => lin N
      { s = table {
              Nom => table {
                       Sg => "во"+base_1+"ь" ;
                       Pl => "во"+base_1+"і"
                     } ;
              Acc => table {
                       Sg => "во"+base_1+"ь" ;
                       Pl => "во"+base_1+"і"
                     } ;
              Dat => table {
                       Sg => "во"+base_1+"і" ;
                       Pl => "а"+base_1+"ям"
                     } ;
              Gen => table {
                       Sg => "во"+base_1+"і" ;
                       Pl => "а"+base_1+"ей"
                     } ;
              Loc => table {
                       Sg => "во"+base_1+"і" ;
                       Pl => "а"+base_1+"ях"
                     } ;
              Instr => table {
                         Sg => "во"+base_1+"ю" ;
                         Pl => "а"+base_1+"ямі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN268"
  } ;

mkN269 : Str -> N ;
mkN269 base =
  case base of {
    base_1+"зе"+base_2@? => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"зе"+base_2 ;
                       Pl => base_1+base_2+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+base_2+"а" ;
                       Pl => base_1+base_2+"оў"
                     } ;
              Dat => table {
                       Sg => base_1+base_2+"у" ;
                       Pl => base_1+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+base_2+"а" ;
                       Pl => base_1+base_2+"оў"
                     } ;
              Loc => table {
                       Sg => base_1+base_2+"ы" ;
                       Pl => base_1+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+base_2+"ом" ;
                         Pl => base_1+base_2+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN269"
  } ;

mkN270 : Str -> N ;
mkN270 base =
  case base of {
    base_1+"та" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"та" ;
                       Pl => base_1+"ты"
                     } ;
              Acc => table {
                       Sg => base_1+"ту" ;
                       Pl => base_1+"т"
                     } ;
              Dat => table {
                       Sg => base_1+"ту" ;
                       Pl => base_1+"там"
                     } ;
              Gen => table {
                       Sg => base_1+"ты" ;
                       Pl => base_1+"т"
                     } ;
              Loc => table {
                       Sg => base_1+"це" ;
                       Pl => base_1+"тах"
                     } ;
              Instr => table {
                         Sg => base_1+"там" ;
                         Pl => base_1+"тамі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN270"
  } ;

mkN271 : Str -> N ;
mkN271 base =
  case base of {
    base_1+"і" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => nonExist ;
                       Pl => base_1+"і"
                     } ;
              Dat => table {
                       Sg => nonExist ;
                       Pl => base_1+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"ей" ;
                       Pl => base_1+"ей"
                     } ;
              Loc => table {
                       Sg => nonExist ;
                       Pl => base_1+"ях"
                     } ;
              Instr => table {
                         Sg => nonExist ;
                         Pl => base_1+"ямі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN271"
  } ;

mkN272 : Str -> N ;
mkN272 base =
  case base of {
    base_1+"вы" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"вы" ;
                       Pl => base_1+"вы"
                     } ;
              Acc => table {
                       Sg => nonExist ;
                       Pl => base_1+"вы"
                     } ;
              Dat => table {
                       Sg => nonExist ;
                       Pl => base_1+"вам"
                     } ;
              Gen => table {
                       Sg => base_1+"ў" ;
                       Pl => base_1+"ў"
                     } ;
              Loc => table {
                       Sg => nonExist ;
                       Pl => base_1+"вах"
                     } ;
              Instr => table {
                         Sg => nonExist ;
                         Pl => base_1+"вамі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN272"
  } ;

mkN273 : Str -> N ;
mkN273 base =
  case base of {
    base_1+"й"+base_2@?+"о" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"й"+base_2+"о" ;
                       Pl => base_1+"й"+base_2+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"й"+base_2+"а" ;
                       Pl => base_1+"і"+base_2
                     } ;
              Dat => table {
                       Sg => base_1+"й"+base_2+"у" ;
                       Pl => base_1+"й"+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"й"+base_2+"а" ;
                       Pl => base_1+"і"+base_2
                     } ;
              Loc => table {
                       Sg => base_1+"й"+base_2+"е" ;
                       Pl => base_1+"й"+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"й"+base_2+"ом" ;
                         Pl => base_1+"й"+base_2+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN273"
  } ;

mkN274 : Str -> N ;
mkN274 base =
  case base of {
    base_1+"е"+base_2@? => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"е"+base_2 ;
                       Pl => base_1+"я"+base_2+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"е"+base_2 ;
                       Pl => base_1+"я"+base_2+"ы"
                     } ;
              Dat => table {
                       Sg => base_1+"я"+base_2+"у" ;
                       Pl => base_1+"я"+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"я"+base_2+"у" ;
                       Pl => base_1+"я"+base_2+"оў"
                     } ;
              Loc => table {
                       Sg => base_1+"я"+base_2+"ы" ;
                       Pl => base_1+"я"+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"я"+base_2+"ом" ;
                         Pl => base_1+"я"+base_2+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN274"
  } ;

mkN275 : Str -> N ;
mkN275 base =
  case base of {
    base_1+"а" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"оў"
                     } ;
              Dat => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"оў"
                     } ;
              Loc => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ам" ;
                         Pl => base_1+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN275"
  } ;

mkN276 : Str -> N ;
mkN276 base =
  case base of {
    base_1+"а"+base_2@? => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"а"+base_2 ;
                       Pl => base_1+base_2+"і"
                     } ;
              Acc => table {
                       Sg => base_1+base_2+"а" ;
                       Pl => base_1+base_2+"аў"
                     } ;
              Dat => table {
                       Sg => base_1+base_2+"у" ;
                       Pl => base_1+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+base_2+"а" ;
                       Pl => base_1+base_2+"аў"
                     } ;
              Loc => table {
                       Sg => base_1+base_2+"у" ;
                       Pl => base_1+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+base_2+"ам" ;
                         Pl => base_1+base_2+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN276"
  } ;

mkN277 : Str -> N ;
mkN277 base =
  case base of {
    base_1+"о"+base_2@? => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"о"+base_2 ;
                       Pl => base_1+base_2+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"о"+base_2 ;
                       Pl => base_1+base_2+"ы"
                     } ;
              Dat => table {
                       Sg => base_1+base_2+"у" ;
                       Pl => base_1+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+base_2+"а" ;
                       Pl => base_1+base_2+"оў"
                     } ;
              Loc => table {
                       Sg => base_1+base_2+"е" ;
                       Pl => base_1+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+base_2+"ом" ;
                         Pl => base_1+base_2+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN277"
  } ;

mkN278 : Str -> N ;
mkN278 base =
  case base of {
    base_1+"я"+base_2@("л"|"ств"|(?+?))+"о" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"я"+base_2+"о" ;
                       Pl => base_1+"ё"+base_2+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"я"+base_2+"о" ;
                       Pl => base_1+"ё"+base_2+"ы"
                     } ;
              Dat => table {
                       Sg => base_1+"я"+base_2+"у" ;
                       Pl => base_1+"ё"+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"я"+base_2+"а" ;
                       Pl => base_1+"ё"+base_2+"аў"
                     } ;
              Loc => table {
                       Sg => base_1+"я"+base_2+"е" ;
                       Pl => base_1+"ё"+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"я"+base_2+"ом" ;
                         Pl => base_1+"ё"+base_2+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN278"
  } ;

mkN279 : Str -> N ;
mkN279 base =
  case base of {
    base_1+"ў"+base_2@?+"а" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ў"+base_2+"а" ;
                       Pl => base_1+"ў"+base_2+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"ў"+base_2+"у" ;
                       Pl => base_1+"ве"+base_2
                     } ;
              Dat => table {
                       Sg => base_1+"ў"+base_2+"е" ;
                       Pl => base_1+"ў"+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"ў"+base_2+"ы" ;
                       Pl => base_1+"ве"+base_2
                     } ;
              Loc => table {
                       Sg => base_1+"ў"+base_2+"е" ;
                       Pl => base_1+"ў"+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ў"+base_2+"ай" ;
                         Pl => base_1+"ў"+base_2+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN279"
  } ;

mkN280 : Str -> N ;
mkN280 base =
  case base of {
    base_1+"ей" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ей" ;
                       Pl => base_1+"лі"
                     } ;
              Acc => table {
                       Sg => base_1+"ей" ;
                       Pl => base_1+"лі"
                     } ;
              Dat => table {
                       Sg => base_1+"ею" ;
                       Pl => base_1+"лям"
                     } ;
              Gen => table {
                       Sg => base_1+"ея" ;
                       Pl => base_1+"лёў"
                     } ;
              Loc => table {
                       Sg => base_1+"еі" ;
                       Pl => base_1+"лях"
                     } ;
              Instr => table {
                         Sg => base_1+"еем" ;
                         Pl => base_1+"лямі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN280"
  } ;

mkN281 : Str -> N ;
mkN281 base =
  case base of {
    base_1+"ей" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ей" ;
                       Pl => base_1+"'і"
                     } ;
              Acc => table {
                       Sg => base_1+"'я" ;
                       Pl => base_1+"'ёў"
                     } ;
              Dat => table {
                       Sg => base_1+"'ю" ;
                       Pl => base_1+"'ям"
                     } ;
              Gen => table {
                       Sg => base_1+"'я" ;
                       Pl => base_1+"'ёў"
                     } ;
              Loc => table {
                       Sg => base_1+"'і" ;
                       Pl => base_1+"'ях"
                     } ;
              Instr => table {
                         Sg => base_1+"'ём" ;
                         Pl => base_1+"'ямі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN281"
  } ;

mkN282 : Str -> N ;
mkN282 base =
  case base of {
    base_1+"о" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"о" ;
                       Pl => nonExist
                     } ;
              Acc => table {
                       Sg => base_1+"о" ;
                       Pl => nonExist
                     } ;
              Dat => table {
                       Sg => base_1+"у" ;
                       Pl => nonExist
                     } ;
              Gen => table {
                       Sg => base_1+"а" ;
                       Pl => nonExist
                     } ;
              Loc => table {
                       Sg => base_1+"ы" ;
                       Pl => nonExist
                     } ;
              Instr => table {
                         Sg => base_1+"ом" ;
                         Pl => nonExist
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN282"
  } ;

mkN283 : Str -> N ;
mkN283 base =
  case base of {
    base_1+"ы" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ы" ;
                       Pl => base_1+"ы"
                     } ;
              Acc => table {
                       Sg => nonExist ;
                       Pl => base_1+"ы"
                     } ;
              Dat => table {
                       Sg => nonExist ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1 ;
                       Pl => base_1
                     } ;
              Loc => table {
                       Sg => nonExist ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => nonExist ;
                         Pl => base_1+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN283"
  } ;

mkN284 : Str -> N ;
mkN284 base =
  case base of {
    base_1+"я"+base_2@?+"а" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"я"+base_2+"а" ;
                       Pl => base_1+"е"+base_2+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"я"+base_2+"у" ;
                       Pl => base_1+"е"+base_2+"ы"
                     } ;
              Dat => table {
                       Sg => base_1+"я"+base_2+"е" ;
                       Pl => base_1+"е"+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"я"+base_2+"ы" ;
                       Pl => base_1+"е"+base_2
                     } ;
              Loc => table {
                       Sg => base_1+"я"+base_2+"е" ;
                       Pl => base_1+"е"+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"я"+base_2+"ой" ;
                         Pl => base_1+"е"+base_2+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN284"
  } ;

mkN285 : Str -> N ;
mkN285 base =
  case base of {
    base_1+"ын" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ын" ;
                       Pl => base_1+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"ына" ;
                       Pl => base_1
                     } ;
              Dat => table {
                       Sg => base_1+"ыну" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"ына" ;
                       Pl => base_1
                     } ;
              Loc => table {
                       Sg => base_1+"ыне" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ынам" ;
                         Pl => base_1+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN285"
  } ;

mkN286 : Str -> N ;
mkN286 base =
  case base of {
    base_1+"а"+base_2@? => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"а"+base_2 ;
                       Pl => base_1+base_2+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+base_2+"а" ;
                       Pl => base_1+base_2+"аў"
                     } ;
              Dat => table {
                       Sg => base_1+base_2+"у" ;
                       Pl => base_1+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+base_2+"а" ;
                       Pl => base_1+base_2+"аў"
                     } ;
              Loc => table {
                       Sg => base_1+base_2+"у" ;
                       Pl => base_1+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+base_2+"ам" ;
                         Pl => base_1+base_2+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN286"
  } ;

mkN287 : Str -> N ;
mkN287 base =
  case base of {
    base_1 => lin N
      { s = table {
              Nom => table {
                       Sg => base_1 ;
                       Pl => base_1+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"а" ;
                       Pl => base_1
                     } ;
              Dat => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"а" ;
                       Pl => base_1
                     } ;
              Loc => table {
                       Sg => base_1+"е" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ам" ;
                         Pl => base_1+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN287"
  } ;

mkN288 : Str -> N ;
mkN288 base =
  case base of {
    base_1+"е"+base_2@(?+?)+"ь" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"е"+base_2+"ь" ;
                       Pl => base_1+"е"+base_2+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"е"+base_2+"ь" ;
                       Pl => base_1+"е"+base_2+"і"
                     } ;
              Dat => table {
                       Sg => base_1+"е"+base_2+"і" ;
                       Pl => base_1+"я"+base_2+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"е"+base_2+"і" ;
                       Pl => base_1+"я"+base_2+"ей"
                     } ;
              Loc => table {
                       Sg => base_1+"е"+base_2+"і" ;
                       Pl => base_1+"я"+base_2+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"е"+base_2+"ю" ;
                         Pl => base_1+"я"+base_2+"ямі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN288"
  } ;

mkN289 : Str -> N ;
mkN289 base =
  case base of {
    base_1+"га" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"га" ;
                       Pl => base_1+"гі"
                     } ;
              Acc => table {
                       Sg => base_1+"гу" ;
                       Pl => base_1+"г"
                     } ;
              Dat => table {
                       Sg => base_1+"зе" ;
                       Pl => base_1+"гам"
                     } ;
              Gen => table {
                       Sg => base_1+"гі" ;
                       Pl => base_1+"г"
                     } ;
              Loc => table {
                       Sg => base_1+"зе" ;
                       Pl => base_1+"гах"
                     } ;
              Instr => table {
                         Sg => base_1+"гай" ;
                         Pl => base_1+"гамі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN289"
  } ;

mkN290 : Str -> N ;
mkN290 base =
  case base of {
    base_1+"а"+base_2@?+"ь" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"а"+base_2+"ь" ;
                       Pl => base_1+base_2+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"а"+base_2+"ь" ;
                       Pl => base_1+base_2+"і"
                     } ;
              Dat => table {
                       Sg => base_1+base_2+"ю" ;
                       Pl => base_1+base_2+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+base_2+"я" ;
                       Pl => base_1+base_2+"ей"
                     } ;
              Loc => table {
                       Sg => base_1+base_2+"і" ;
                       Pl => base_1+base_2+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+base_2+"ем" ;
                         Pl => base_1+base_2+"ямі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN290"
  } ;

mkN291 : Str -> N ;
mkN291 base =
  case base of {
    base_1+"ы" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ы" ;
                       Pl => base_1+"ыя"
                     } ;
              Acc => table {
                       Sg => base_1+"ага" ;
                       Pl => base_1+"ых"
                     } ;
              Dat => table {
                       Sg => base_1+"аму" ;
                       Pl => base_1+"ым"
                     } ;
              Gen => table {
                       Sg => base_1+"ага" ;
                       Pl => base_1+"ых"
                     } ;
              Loc => table {
                       Sg => base_1+"ым" ;
                       Pl => base_1+"ых"
                     } ;
              Instr => table {
                         Sg => base_1+"ым" ;
                         Pl => base_1+"ымі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN291"
  } ;

mkN292 : Str -> N ;
mkN292 base =
  case base of {
    base_1+"а" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"ы" --guessed
                     } ;
              Acc => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"ы" --guessed
                     } ;
              Dat => table {
                       Sg => base_1+"е" ;
                       Pl => base_1+"ам" --guessed
                     } ;
              Gen => table {
                       Sg => base_1+"ы" ;
                       Pl => base_1 --guessed
                     } ;
              Loc => table {
                       Sg => base_1+"е" ;
                       Pl => base_1+"ах" --guessed
                     } ;
              Instr => table {
                         Sg => base_1+"ой" ;
                         Pl => base_1+"амі" --guessed
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN292"
  } ;

mkN293 : Str -> N ;
mkN293 base =
  case base of {
    base_1+base_2@?+"ь" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+base_2+"ь" ;
                       Pl => nonExist
                     } ;
              Acc => table {
                       Sg => base_1+base_2+"ь" ;
                       Pl => nonExist
                     } ;
              Dat => table {
                       Sg => base_1+base_2+"і" ;
                       Pl => nonExist
                     } ;
              Gen => table {
                       Sg => base_1+base_2+"і" ;
                       Pl => nonExist
                     } ;
              Loc => table {
                       Sg => base_1+base_2+"і" ;
                       Pl => nonExist
                     } ;
              Instr => table {
                         Sg => base_1+"д"+base_2+"ю" ;
                         Pl => nonExist
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN293"
  } ;

mkN294 : Str -> N ;
mkN294 base =
  case base of {
    base_1+"о"+base_2@? => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"о"+base_2 ;
                       Pl => nonExist
                     } ;
              Acc => table {
                       Sg => base_1+"о"+base_2 ;
                       Pl => nonExist
                     } ;
              Dat => table {
                       Sg => base_1+"а"+base_2+"у" ;
                       Pl => nonExist
                     } ;
              Gen => table {
                       Sg => base_1+"а"+base_2+"у" ;
                       Pl => nonExist
                     } ;
              Loc => table {
                       Sg => base_1+"а"+base_2+"у" ;
                       Pl => nonExist
                     } ;
              Instr => table {
                         Sg => base_1+"а"+base_2+"ом" ;
                         Pl => nonExist
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN294"
  } ;

mkN295 : Str -> N ;
mkN295 base =
  case base of {
    base_1+"а"+base_2@? => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"а"+base_2 ;
                       Pl => base_1+base_2+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"а"+base_2 ;
                       Pl => base_1+base_2+"ы"
                     } ;
              Dat => table {
                       Sg => base_1+base_2+"у" ;
                       Pl => base_1+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+base_2+"у" ;
                       Pl => base_1+base_2+"оў"
                     } ;
              Loc => table {
                       Sg => base_1+base_2+"ы" ;
                       Pl => base_1+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+base_2+"ам" ;
                         Pl => base_1+base_2+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN295"
  } ;

mkN296 : Str -> N ;
mkN296 base =
  case base of {
    base_1+"о"+base_2@? => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"о"+base_2 ;
                       Pl => base_1+base_2+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"о"+base_2 ;
                       Pl => base_1+base_2+"і"
                     } ;
              Dat => table {
                       Sg => base_1+base_2+"у" ;
                       Pl => base_1+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+base_2+"у" ;
                       Pl => base_1+base_2+"оў"
                     } ;
              Loc => table {
                       Sg => base_1+base_2+"у" ;
                       Pl => base_1+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+base_2+"ом" ;
                         Pl => base_1+base_2+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN296"
  } ;

mkN297 : Str -> N ;
mkN297 base =
  case base of {
    base_1+"а" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"ы"
                     } ;
              Dat => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"а" ;
                       Pl => base_1
                     } ;
              Loc => table {
                       Sg => base_1+"ы" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ам" ;
                         Pl => base_1+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN297"
  } ;

mkN298 : Str -> N ;
mkN298 base =
  case base of {
    base_1+"е"+base_2@? => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"е"+base_2 ;
                       Pl => base_1+base_2+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+base_2+"а" ;
                       Pl => base_1+base_2+"аў"
                     } ;
              Dat => table {
                       Sg => base_1+base_2+"у" ;
                       Pl => base_1+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+base_2+"а" ;
                       Pl => base_1+base_2+"аў"
                     } ;
              Loc => table {
                       Sg => base_1+base_2+"ы" ;
                       Pl => base_1+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+base_2+"ам" ;
                         Pl => base_1+base_2+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN298"
  } ;

mkN299 : Str -> N ;
mkN299 base =
  case base of {
    base_1+"е"+base_2@? => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"е"+base_2 ;
                       Pl => base_1+base_2+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"е"+base_2 ;
                       Pl => base_1+base_2+"ы"
                     } ;
              Dat => table {
                       Sg => base_1+base_2+"у" ;
                       Pl => base_1+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+base_2+"а" ;
                       Pl => base_1+base_2+"аў"
                     } ;
              Loc => table {
                       Sg => base_1+base_2+"ы" ;
                       Pl => base_1+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+base_2+"ам" ;
                         Pl => base_1+base_2+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN299"
  } ;

mkN300 : Str -> N ;
mkN300 base =
  case base of {
    base_1+"ве"+base_2@? => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ве"+base_2 ;
                       Pl => base_1+"ў"+base_2+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"ў"+base_2+"а" ;
                       Pl => base_1+"ў"+base_2+"аў"
                     } ;
              Dat => table {
                       Sg => base_1+"ў"+base_2+"у" ;
                       Pl => base_1+"ў"+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"ў"+base_2+"а" ;
                       Pl => base_1+"ў"+base_2+"аў"
                     } ;
              Loc => table {
                       Sg => base_1+"ў"+base_2+"у" ;
                       Pl => base_1+"ў"+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ў"+base_2+"ам" ;
                         Pl => base_1+"ў"+base_2+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN300"
  } ;

mkN301 : Str -> N ;
mkN301 base =
  case base of {
    base_1+"я" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"я" ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"ю" ;
                       Pl => base_1+"і"
                     } ;
              Dat => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"яў"
                     } ;
              Loc => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"яй" ;
                         Pl => base_1+"ямі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN301"
  } ;

mkN302 : Str -> N ;
mkN302 base =
  case base of {
    base_1+"а" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"ы"
                     } ;
              Dat => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"аў"
                     } ;
              Loc => table {
                       Sg => base_1+"зе" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ам" ;
                         Pl => base_1+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN302"
  } ;

mkN303 : Str -> N ;
mkN303 base =
  case base of {
    "а"+base_1+"а" => lin N
      { s = table {
              Nom => table {
                       Sg => "а"+base_1+"а" ;
                       Pl => "во"+base_1+"ы"
                     } ;
              Acc => table {
                       Sg => "а"+base_1+"у" ;
                       Pl => "во"+base_1
                     } ;
              Dat => table {
                       Sg => "а"+base_1+"е" ;
                       Pl => "во"+base_1+"ам"
                     } ;
              Gen => table {
                       Sg => "а"+base_1+"ы" ;
                       Pl => "во"+base_1
                     } ;
              Loc => table {
                       Sg => "а"+base_1+"е" ;
                       Pl => "во"+base_1+"ах"
                     } ;
              Instr => table {
                         Sg => "а"+base_1+"ой" ;
                         Pl => "во"+base_1+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN303"
  } ;

mkN304 : Str -> N ;
mkN304 base =
  case base of {
    base_1+"ха" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ха" ;
                       Pl => base_1+"хі"
                     } ;
              Acc => table {
                       Sg => base_1+"ху" ;
                       Pl => base_1+"хі"
                     } ;
              Dat => table {
                       Sg => base_1+"се" ;
                       Pl => base_1+"хам"
                     } ;
              Gen => table {
                       Sg => base_1+"хі" ;
                       Pl => base_1+"хаў"
                     } ;
              Loc => table {
                       Sg => base_1+"се" ;
                       Pl => base_1+"хах"
                     } ;
              Instr => table {
                         Sg => base_1+"хай" ;
                         Pl => base_1+"хамі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN304"
  } ;

mkN305 : Str -> N ;
mkN305 base =
  case base of {
    base_1+"й" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"й" ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"й" ;
                       Pl => base_1+"і"
                     } ;
              Dat => table {
                       Sg => base_1+"ю" ;
                       Pl => base_1+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"ю" ;
                       Pl => base_1+"яў"
                     } ;
              Loc => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"ем" ;
                         Pl => base_1+"ямі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN305"
  } ;

mkN306 : Str -> N ;
mkN306 base =
  case base of {
    base_1 => lin N
      { s = table {
              Nom => table {
                       Sg => base_1 ;
                       Pl => base_1+"ы"
                     } ;
              Acc => table {
                       Sg => base_1 ;
                       Pl => base_1+"эй"
                     } ;
              Dat => table {
                       Sg => base_1+"ы" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"ы" ;
                       Pl => base_1+"эй"
                     } ;
              Loc => table {
                       Sg => base_1+"ы" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"шу" ;
                         Pl => base_1+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN306"
  } ;

mkN307 : Str -> N ;
mkN307 base =
  case base of {
    base_1+"вей" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"вей" ;
                       Pl => base_1+"ўі"
                     } ;
              Acc => table {
                       Sg => base_1+"ўя" ;
                       Pl => base_1+"ўёў"
                     } ;
              Dat => table {
                       Sg => base_1+"ўю" ;
                       Pl => base_1+"ўям"
                     } ;
              Gen => table {
                       Sg => base_1+"ўя" ;
                       Pl => base_1+"ўёў"
                     } ;
              Loc => table {
                       Sg => base_1+"ўі" ;
                       Pl => base_1+"ўях"
                     } ;
              Instr => table {
                         Sg => base_1+"ўём" ;
                         Pl => base_1+"ўямі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN307"
  } ;

mkN308 : Str -> N ;
mkN308 base =
  case base of {
    base_1+"е"+base_2@? => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"е"+base_2 ;
                       Pl => base_1+"ь"+base_2+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"ь"+base_2+"а" ;
                       Pl => base_1+"ь"+base_2+"аў"
                     } ;
              Dat => table {
                       Sg => base_1+"ь"+base_2+"у" ;
                       Pl => base_1+"ь"+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"ь"+base_2+"а" ;
                       Pl => base_1+"ь"+base_2+"аў"
                     } ;
              Loc => table {
                       Sg => base_1+"ь"+base_2+"у" ;
                       Pl => base_1+"ь"+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ь"+base_2+"ам" ;
                         Pl => base_1+"ь"+base_2+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN308"
  } ;

mkN309 : Str -> N ;
mkN309 base =
  case base of {
    base_1+"ха" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ха" ;
                       Pl => base_1+"хі"
                     } ;
              Acc => table {
                       Sg => base_1+"ху" ;
                       Pl => base_1+"хі"
                     } ;
              Dat => table {
                       Sg => base_1+"се" ;
                       Pl => base_1+"хам"
                     } ;
              Gen => table {
                       Sg => base_1+"хі" ;
                       Pl => base_1+"х"
                     } ;
              Loc => table {
                       Sg => base_1+"се" ;
                       Pl => base_1+"хах"
                     } ;
              Instr => table {
                         Sg => base_1+"хай" ;
                         Pl => base_1+"хамі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN309"
  } ;

mkN310 : Str -> N ;
mkN310 base =
  case base of {
    base_1+"ь" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ь" ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"ь" ;
                       Pl => base_1+"і"
                     } ;
              Dat => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ей"
                     } ;
              Loc => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"ём" ;
                         Pl => base_1+"ямі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN310"
  } ;

mkN311 : Str -> N ;
mkN311 base =
  case base of {
    base_1+"о"+base_2@(?+?+?)+"ь" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"о"+base_2+"ь" ;
                       Pl => base_1+"а"+base_2+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"о"+base_2+"ь" ;
                       Pl => base_1+"а"+base_2+"і"
                     } ;
              Dat => table {
                       Sg => base_1+"о"+base_2+"ю" ;
                       Pl => base_1+"а"+base_2+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"о"+base_2+"я" ;
                       Pl => base_1+"а"+base_2+"ёў"
                     } ;
              Loc => table {
                       Sg => base_1+"о"+base_2+"і" ;
                       Pl => base_1+"а"+base_2+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"о"+base_2+"ем" ;
                         Pl => base_1+"а"+base_2+"ямі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN311"
  } ;

mkN312 : Str -> N ;
mkN312 base =
  case base of {
    base_1+"а" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"у" ;
                       Pl => base_1
                     } ;
              Dat => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"ы" ;
                       Pl => base_1
                     } ;
              Loc => table {
                       Sg => base_1+"е" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ам" ;
                         Pl => base_1+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN312"
  } ;

mkN313 : Str -> N ;
mkN313 base =
  case base of {
    base_1 => lin N
      { s = table {
              Nom => table {
                       Sg => base_1 ;
                       Pl => base_1+"ы"
                     } ;
              Acc => table {
                       Sg => base_1 ;
                       Pl => base_1+"ай"
                     } ;
              Dat => table {
                       Sg => base_1+"ы" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"ы" ;
                       Pl => base_1+"ай"
                     } ;
              Loc => table {
                       Sg => base_1+"ы" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"шу" ;
                         Pl => base_1+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN313"
  } ;

mkN314 : Str -> N ;
mkN314 base =
  case base of {
    base_1+"а"+base_2@? => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"а"+base_2 ;
                       Pl => base_1+base_2+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"а"+base_2 ;
                       Pl => base_1+base_2+"ы"
                     } ;
              Dat => table {
                       Sg => base_1+base_2+"у" ;
                       Pl => base_1+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+base_2+"а" ;
                       Pl => base_1+base_2+"оў"
                     } ;
              Loc => table {
                       Sg => base_1+base_2+"е" ;
                       Pl => base_1+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+base_2+"ом" ;
                         Pl => base_1+base_2+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN314"
  } ;

mkN315 : Str -> N ;
mkN315 base =
  case base of {
    base_1+"а"+base_2@?+base_3@?+"а" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"а"+base_2+base_3+"а" ;
                       Pl => base_1+"о"+base_2+base_3+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"а"+base_2+base_3+"у" ;
                       Pl => base_1+"о"+base_2+base_3+"ы"
                     } ;
              Dat => table {
                       Sg => base_1+"а"+base_2+base_3+"е" ;
                       Pl => base_1+"о"+base_2+base_3+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"а"+base_2+base_3+"ы" ;
                       Pl => base_1+"а"+base_2+"ё"+base_3
                     } ;
              Loc => table {
                       Sg => base_1+"а"+base_2+base_3+"е" ;
                       Pl => base_1+"о"+base_2+base_3+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"а"+base_2+base_3+"ой" ;
                         Pl => base_1+"о"+base_2+base_3+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN315"
  } ;

mkN316 : Str -> N ;
mkN316 base =
  case base of {
    base_1@("ч"|(?+?+?))+"а"+base_2+"о" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"а"+base_2+"о" ;
                       Pl => base_1+"о"+base_2+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"а"+base_2+"о" ;
                       Pl => base_1+"о"+base_2+"ы"
                     } ;
              Dat => table {
                       Sg => base_1+"а"+base_2+"у" ;
                       Pl => base_1+"о"+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"а"+base_2+"а" ;
                       Pl => base_1+"о"+base_2+"аў"
                     } ;
              Loc => table {
                       Sg => base_1+"а"+base_2+"е" ;
                       Pl => base_1+"о"+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"а"+base_2+"ом" ;
                         Pl => base_1+"о"+base_2+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN316"
  } ;

mkN317 : Str -> N ;
mkN317 base =
  case base of {
    base_1+"та" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"та" ;
                       Pl => base_1+"ты"
                     } ;
              Acc => table {
                       Sg => base_1+"та" ;
                       Pl => base_1+"ты"
                     } ;
              Dat => table {
                       Sg => base_1+"ту" ;
                       Pl => base_1+"там"
                     } ;
              Gen => table {
                       Sg => base_1+"та" ;
                       Pl => base_1+"тоў"
                     } ;
              Loc => table {
                       Sg => base_1+"це" ;
                       Pl => base_1+"тах"
                     } ;
              Instr => table {
                         Sg => base_1+"там" ;
                         Pl => base_1+"тамі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN317"
  } ;

mkN318 : Str -> N ;
mkN318 base =
  case base of {
    base_1+"а"+base_2@?+"а"+base_3@?+"а" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"а"+base_2+"а"+base_3+"а" ;
                       Pl => base_1+"о"+base_2+"а"+base_3+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"а"+base_2+"а"+base_3+"у" ;
                       Pl => base_1+"о"+base_2+"а"+base_3+"ы"
                     } ;
              Dat => table {
                       Sg => base_1+"а"+base_2+"а"+base_3+"е" ;
                       Pl => base_1+"а"+base_2+"а"+base_3+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"а"+base_2+"а"+base_3+"ы" ;
                       Pl => base_1+"а"+base_2+"о"+base_3
                     } ;
              Loc => table {
                       Sg => base_1+"а"+base_2+"а"+base_3+"е" ;
                       Pl => base_1+"а"+base_2+"а"+base_3+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"а"+base_2+"а"+base_3+"ой" ;
                         Pl => base_1+"а"+base_2+"а"+base_3+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN318"
  } ;

mkN319 : Str -> N ;
mkN319 base =
  case base of {
    base_1+"а"+base_2@(?+?)+"а" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"а"+base_2+"а" ;
                       Pl => base_1+"о"+base_2+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"а"+base_2+"у" ;
                       Pl => base_1+"о"+base_2+"аў"
                     } ;
              Dat => table {
                       Sg => base_1+"а"+base_2+"е" ;
                       Pl => base_1+"о"+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"а"+base_2+"ы" ;
                       Pl => base_1+"о"+base_2+"аў"
                     } ;
              Loc => table {
                       Sg => base_1+"а"+base_2+"е" ;
                       Pl => base_1+"о"+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"а"+base_2+"ой" ;
                         Pl => base_1+"о"+base_2+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN319"
  } ;

mkN320 : Str -> N ;
mkN320 base =
  case base of {
    base_1+"я"+base_2@?+"о" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"я"+base_2+"о" ;
                       Pl => base_1+"е"+base_2+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"я"+base_2+"о" ;
                       Pl => base_1+"е"+base_2+"ы"
                     } ;
              Dat => table {
                       Sg => base_1+"я"+base_2+"у" ;
                       Pl => base_1+"я"+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"я"+base_2+"а" ;
                       Pl => base_1+"я"+base_2+"эй"
                     } ;
              Loc => table {
                       Sg => base_1+"я"+base_2+"ы" ;
                       Pl => base_1+"я"+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"я"+base_2+"ом" ;
                         Pl => base_1+"я"+base_2+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN320"
  } ;

mkN321 : Str -> N ;
mkN321 base =
  case base of {
    base_1+"ы"+base_2@?+"о" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ы"+base_2+"о" ;
                       Pl => base_1+"о"+base_2+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"ы"+base_2+"о" ;
                       Pl => base_1+"о"+base_2+"ы"
                     } ;
              Dat => table {
                       Sg => base_1+"ы"+base_2+"у" ;
                       Pl => base_1+"о"+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"ы"+base_2+"а" ;
                       Pl => base_1+"о"+base_2+"аў"
                     } ;
              Loc => table {
                       Sg => base_1+"ы"+base_2+"е" ;
                       Pl => base_1+"о"+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ы"+base_2+"ом" ;
                         Pl => base_1+"о"+base_2+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN321"
  } ;

mkN322 : Str -> N ;
mkN322 base =
  case base of {
    base_1+base_2@?+"і" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+base_2+"і" ;
                       Pl => base_1+base_2+"і"
                     } ;
              Acc => table {
                       Sg => nonExist ;
                       Pl => base_1+base_2+"і"
                     } ;
              Dat => table {
                       Sg => nonExist ;
                       Pl => base_1+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"а"+base_2 ;
                       Pl => base_1+"а"+base_2
                     } ;
              Loc => table {
                       Sg => nonExist ;
                       Pl => base_1+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => nonExist ;
                         Pl => base_1+base_2+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN322"
  } ;

mkN323 : Str -> N ;
mkN323 base =
  case base of {
    base_1@?+"о"+base_2+"ь" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"о"+base_2+"ь" ;
                       Pl => base_1+"о"+base_2+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"о"+base_2+"я" ;
                       Pl => base_1+"а"+base_2+"ей"
                     } ;
              Dat => table {
                       Sg => base_1+"о"+base_2+"ю" ;
                       Pl => base_1+"а"+base_2+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"о"+base_2+"я" ;
                       Pl => base_1+"а"+base_2+"ей"
                     } ;
              Loc => table {
                       Sg => base_1+"о"+base_2+"ю" ;
                       Pl => base_1+"а"+base_2+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"о"+base_2+"ем" ;
                         Pl => base_1+"а"+base_2+"ямі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN323"
  } ;

mkN324 : Str -> N ;
mkN324 base =
  case base of {
    base_1+"ы" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ы" ;
                       Pl => base_1+"ы"
                     } ;
              Acc => table {
                       Sg => nonExist ;
                       Pl => base_1+"ы"
                     } ;
              Dat => table {
                       Sg => nonExist ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"аў" ;
                       Pl => base_1+"аў"
                     } ;
              Loc => table {
                       Sg => nonExist ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => nonExist ;
                         Pl => base_1+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN324"
  } ;

mkN325 : Str -> N ;
mkN325 base =
  case base of {
    base_1+"ь" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ь" ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"ь" ;
                       Pl => base_1+"і"
                     } ;
              Dat => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ей"
                     } ;
              Loc => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"цю" ;
                         Pl => base_1+"ямі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN325"
  } ;

mkN326 : Str -> N ;
mkN326 base =
  case base of {
    base_1+"ове"+base_2@? => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ове"+base_2 ;
                       Pl => base_1+"аў"+base_2+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"ове"+base_2 ;
                       Pl => base_1+"аў"+base_2+"ы"
                     } ;
              Dat => table {
                       Sg => base_1+"оў"+base_2+"у" ;
                       Pl => base_1+"аў"+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"оў"+base_2+"а" ;
                       Pl => base_1+"аў"+base_2+"оў"
                     } ;
              Loc => table {
                       Sg => base_1+"оў"+base_2+"е" ;
                       Pl => base_1+"аў"+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"оў"+base_2+"ам" ;
                         Pl => base_1+"аў"+base_2+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN326"
  } ;

mkN327 : Str -> N ;
mkN327 base =
  case base of {
    base_1+"о"+base_2@(?+?) => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"о"+base_2 ;
                       Pl => base_1+"а"+base_2+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"о"+base_2 ;
                       Pl => base_1+"а"+base_2+"ы"
                     } ;
              Dat => table {
                       Sg => base_1+"а"+base_2+"у" ;
                       Pl => base_1+"а"+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"а"+base_2+"а" ;
                       Pl => base_1+"а"+base_2+"оў"
                     } ;
              Loc => table {
                       Sg => base_1+"а"+base_2+"зе" ;
                       Pl => base_1+"а"+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"а"+base_2+"ом" ;
                         Pl => base_1+"а"+base_2+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN327"
  } ;

mkN328 : Str -> N ;
mkN328 base =
  case base of {
    base_1+"я"+base_2@("вак"|(?+?+?+?)) => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"я"+base_2 ;
                       Pl => base_1+"е"+base_2+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"е"+base_2+"а" ;
                       Pl => base_1+"е"+base_2+"оў"
                     } ;
              Dat => table {
                       Sg => base_1+"е"+base_2+"у" ;
                       Pl => base_1+"е"+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"е"+base_2+"а" ;
                       Pl => base_1+"е"+base_2+"оў"
                     } ;
              Loc => table {
                       Sg => base_1+"е"+base_2+"у" ;
                       Pl => base_1+"е"+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"е"+base_2+"ом" ;
                         Pl => base_1+"е"+base_2+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN328"
  } ;

mkN329 : Str -> N ;
mkN329 base =
  case base of {
    base_1+"е"+base_2@?+"і" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"е"+base_2+"і" ;
                       Pl => base_1+"е"+base_2+"і"
                     } ;
              Acc => table {
                       Sg => nonExist ;
                       Pl => base_1+"е"+base_2+"і"
                     } ;
              Dat => table {
                       Sg => nonExist ;
                       Pl => base_1+"я"+base_2+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"я"+base_2+"ей" ;
                       Pl => base_1+"я"+base_2+"ей"
                     } ;
              Loc => table {
                       Sg => nonExist ;
                       Pl => base_1+"я"+base_2+"ях"
                     } ;
              Instr => table {
                         Sg => nonExist ;
                         Pl => base_1+"я"+base_2+"ямі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN329"
  } ;

mkN330 : Str -> N ;
mkN330 base =
  case base of {
    base_1+"е"+base_2@? => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"е"+base_2 ;
                       Pl => base_1+base_2+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"е"+base_2 ;
                       Pl => base_1+base_2+"ы"
                     } ;
              Dat => table {
                       Sg => base_1+base_2+"у" ;
                       Pl => base_1+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+base_2+"а" ;
                       Pl => base_1+base_2+"оў"
                     } ;
              Loc => table {
                       Sg => base_1+base_2+"е" ;
                       Pl => base_1+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+base_2+"ом" ;
                         Pl => base_1+base_2+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN330"
  } ;

mkN331 : Str -> N ;
mkN331 base =
  case base of {
    base_1+"д"+base_2@?+"я" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"д"+base_2+"я" ;
                       Pl => base_1+"д"+base_2+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"д"+base_2+"ю" ;
                       Pl => base_1+"д"+base_2+"і"
                     } ;
              Dat => table {
                       Sg => base_1+"д"+base_2+"і" ;
                       Pl => base_1+"д"+base_2+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"д"+base_2+"і" ;
                       Pl => base_1+base_2+"ей"
                     } ;
              Loc => table {
                       Sg => base_1+"д"+base_2+"і" ;
                       Pl => base_1+"д"+base_2+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"д"+base_2+"ёй" ;
                         Pl => base_1+"д"+base_2+"ямі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN331"
  } ;

mkN332 : Str -> N ;
mkN332 base =
  case base of {
    base_1+"я" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"я" ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"ю" ;
                       Pl => base_1+"яў"
                     } ;
              Dat => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"яў"
                     } ;
              Loc => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"ёй" ;
                         Pl => base_1+"ямі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN332"
  } ;

mkN333 : Str -> N ;
mkN333 base =
  case base of {
    base_1 => lin N
      { s = table {
              Nom => table {
                       Sg => base_1 ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => base_1 ;
                       Pl => base_1+"і"
                     } ;
              Dat => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"оў"
                     } ;
              Loc => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ам" ;
                         Pl => base_1+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN333"
  } ;

mkN334 : Str -> N ;
mkN334 base =
  case base of {
    base_1 => lin N
      { s = table {
              Nom => table {
                       Sg => base_1 ;
                       Pl => base_1+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"аў"
                     } ;
              Dat => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"аў"
                     } ;
              Loc => table {
                       Sg => base_1+"ы" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ам" ;
                         Pl => base_1+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN334"
  } ;

mkN335 : Str -> N ;
mkN335 base =
  case base of {
    base_1+"ы" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ы" ;
                       Pl => base_1+"ы"
                     } ;
              Acc => table {
                       Sg => nonExist ;
                       Pl => base_1+"ы"
                     } ;
              Dat => table {
                       Sg => nonExist ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1 ;
                       Pl => base_1
                     } ;
              Loc => table {
                       Sg => nonExist ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => nonExist ;
                         Pl => base_1+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN335"
  } ;

mkN336 : Str -> N ;
mkN336 base =
  case base of {
    base_1+"а"+base_2@(?+?+?)+"а" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"а"+base_2+"а" ;
                       Pl => base_1+"о"+base_2+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"а"+base_2+"у" ;
                       Pl => base_1+"о"+base_2+"ы"
                     } ;
              Dat => table {
                       Sg => base_1+"а"+base_2+"ы" ;
                       Pl => base_1+"о"+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"а"+base_2+"ы" ;
                       Pl => base_1+"о"+base_2+"аў"
                     } ;
              Loc => table {
                       Sg => base_1+"а"+base_2+"ы" ;
                       Pl => base_1+"о"+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"а"+base_2+"ой" ;
                         Pl => base_1+"о"+base_2+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN336"
  } ;

mkN337 : Str -> N ;
mkN337 base =
  case base of {
    base_1+"г" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"г" ;
                       Pl => base_1+"гі"
                     } ;
              Acc => table {
                       Sg => base_1+"г" ;
                       Pl => base_1+"гі"
                     } ;
              Dat => table {
                       Sg => base_1+"гу" ;
                       Pl => base_1+"гам"
                     } ;
              Gen => table {
                       Sg => base_1+"га" ;
                       Pl => base_1+"гаў"
                     } ;
              Loc => table {
                       Sg => base_1+"зе" ;
                       Pl => base_1+"гах"
                     } ;
              Instr => table {
                         Sg => base_1+"гам" ;
                         Pl => base_1+"гамі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN337"
  } ;

mkN338 : Str -> N ;
mkN338 base =
  case base of {
    base_1+"эш"+base_2@?+"та" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"эш"+base_2+"та" ;
                       Pl => base_1+base_2+"шоты"
                     } ;
              Acc => table {
                       Sg => base_1+"эш"+base_2+"та" ;
                       Pl => base_1+base_2+"шоты"
                     } ;
              Dat => table {
                       Sg => base_1+"эш"+base_2+"ту" ;
                       Pl => base_1+base_2+"шотам"
                     } ;
              Gen => table {
                       Sg => base_1+"эш"+base_2+"та" ;
                       Pl => base_1+base_2+"шот"
                     } ;
              Loc => table {
                       Sg => base_1+"эш"+base_2+"це" ;
                       Pl => base_1+base_2+"шотах"
                     } ;
              Instr => table {
                         Sg => base_1+"эш"+base_2+"там" ;
                         Pl => base_1+base_2+"шотамі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN338"
  } ;

mkN339 : Str -> N ;
mkN339 base =
  case base of {
    base_1+"г" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"г" ;
                       Pl => base_1+"гі"
                     } ;
              Acc => table {
                       Sg => base_1+"га" ;
                       Pl => base_1+"гаў"
                     } ;
              Dat => table {
                       Sg => base_1+"гу" ;
                       Pl => base_1+"гам"
                     } ;
              Gen => table {
                       Sg => base_1+"га" ;
                       Pl => base_1+"гаў"
                     } ;
              Loc => table {
                       Sg => base_1+"зе" ;
                       Pl => base_1+"гах"
                     } ;
              Instr => table {
                         Sg => base_1+"гам" ;
                         Pl => base_1+"гамі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN339"
  } ;

mkN340 : Str -> N ;
mkN340 base =
  case base of {
    base_1+"я"+base_2@?+"о" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"я"+base_2+"о" ;
                       Pl => base_1+"ё"+base_2+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"я"+base_2+"о" ;
                       Pl => base_1+"ё"+base_2+"ы"
                     } ;
              Dat => table {
                       Sg => base_1+"я"+base_2+"у" ;
                       Pl => base_1+"ё"+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"я"+base_2+"а" ;
                       Pl => base_1+"ё"+base_2
                     } ;
              Loc => table {
                       Sg => base_1+"я"+base_2+"е" ;
                       Pl => base_1+"ё"+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"я"+base_2+"ом" ;
                         Pl => base_1+"ё"+base_2+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN340"
  } ;

mkN341 : Str -> N ;
mkN341 base =
  case base of {
    base_1+"я"+base_2@(?+?)+"а" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"я"+base_2+"а" ;
                       Pl => base_1+"е"+base_2+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"я"+base_2+"у" ;
                       Pl => base_1+"е"+base_2+"ы"
                     } ;
              Dat => table {
                       Sg => base_1+"я"+base_2+"е" ;
                       Pl => base_1+"е"+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"я"+base_2+"ы" ;
                       Pl => base_1+"е"+base_2+"аў"
                     } ;
              Loc => table {
                       Sg => base_1+"я"+base_2+"е" ;
                       Pl => base_1+"е"+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"я"+base_2+"ой" ;
                         Pl => base_1+"е"+base_2+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN341"
  } ;

mkN342 : Str -> N ;
mkN342 base =
  case base of {
    base_1+"э"+base_2@? => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"э"+base_2 ;
                       Pl => base_1+"а"+base_2+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"э"+base_2 ;
                       Pl => base_1+"а"+base_2+"і"
                     } ;
              Dat => table {
                       Sg => base_1+"э"+base_2+"у" ;
                       Pl => base_1+"а"+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"э"+base_2+"у" ;
                       Pl => base_1+"а"+base_2+"оў"
                     } ;
              Loc => table {
                       Sg => base_1+"э"+base_2+"у" ;
                       Pl => base_1+"а"+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"э"+base_2+"ам" ;
                         Pl => base_1+"а"+base_2+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN342"
  } ;

mkN343 : Str -> N ;
mkN343 base =
  case base of {
    base_1+"е"+base_2@?+"ь" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"е"+base_2+"ь" ;
                       Pl => base_1+base_2+"і"
                     } ;
              Acc => table {
                       Sg => base_1+base_2+"я" ;
                       Pl => base_1+base_2+"яў"
                     } ;
              Dat => table {
                       Sg => base_1+base_2+"ю" ;
                       Pl => base_1+base_2+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+base_2+"я" ;
                       Pl => base_1+base_2+"яў"
                     } ;
              Loc => table {
                       Sg => base_1+base_2+"ю" ;
                       Pl => base_1+base_2+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+base_2+"ем" ;
                         Pl => base_1+base_2+"ямі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN343"
  } ;

mkN344 : Str -> N ;
mkN344 base =
  case base of {
    base_1+"а"+base_2@(?+?)+"о" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"а"+base_2+"о" ;
                       Pl => base_1+"э"+base_2+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"а"+base_2+"о" ;
                       Pl => base_1+"э"+base_2+"ы"
                     } ;
              Dat => table {
                       Sg => base_1+"а"+base_2+"у" ;
                       Pl => base_1+"э"+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"а"+base_2+"а" ;
                       Pl => base_1+"э"+base_2+"аў"
                     } ;
              Loc => table {
                       Sg => base_1+"а"+base_2+"ы" ;
                       Pl => base_1+"э"+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"а"+base_2+"ом" ;
                         Pl => base_1+"э"+base_2+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN344"
  } ;

mkN345 : Str -> N ;
mkN345 base =
  case base of {
    base_1+"ака" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ака" ;
                       Pl => base_1+"окі"
                     } ;
              Acc => table {
                       Sg => base_1+"аку" ;
                       Pl => base_1+"окі"
                     } ;
              Dat => table {
                       Sg => base_1+"ацэ" ;
                       Pl => base_1+"окам"
                     } ;
              Gen => table {
                       Sg => base_1+"акі" ;
                       Pl => base_1+"ок"
                     } ;
              Loc => table {
                       Sg => base_1+"ацэ" ;
                       Pl => base_1+"оках"
                     } ;
              Instr => table {
                         Sg => base_1+"акой" ;
                         Pl => base_1+"окамі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN345"
  } ;

mkN346 : Str -> N ;
mkN346 base =
  case base of {
    base_1 => lin N
      { s = table {
              Nom => table {
                       Sg => base_1 ;
                       Pl => base_1+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"оў"
                     } ;
              Dat => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"оў"
                     } ;
              Loc => table {
                       Sg => base_1+"ы" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ом" ;
                         Pl => base_1+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN346"
  } ;

mkN347 : Str -> N ;
mkN347 base =
  case base of {
    base_1+"а" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"у" ;
                       Pl => base_1
                     } ;
              Dat => table {
                       Sg => base_1+"е" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"ы" ;
                       Pl => base_1
                     } ;
              Loc => table {
                       Sg => base_1+"е" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ой" ;
                         Pl => base_1+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN347"
  } ;

mkN348 : Str -> N ;
mkN348 base =
  case base of {
    base_1+"ка" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ка" ;
                       Pl => base_1+"кі"
                     } ;
              Acc => table {
                       Sg => base_1+"ку" ;
                       Pl => base_1+"к"
                     } ;
              Dat => table {
                       Sg => base_1+"цы" ;
                       Pl => base_1+"кам"
                     } ;
              Gen => table {
                       Sg => base_1+"кі" ;
                       Pl => base_1+"к"
                     } ;
              Loc => table {
                       Sg => base_1+"цы" ;
                       Pl => base_1+"ках"
                     } ;
              Instr => table {
                         Sg => base_1+"кай" ;
                         Pl => base_1+"камі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN348"
  } ;

mkN349 : Str -> N ;
mkN349 base =
  case base of {
    base_1+"а"+base_2@?+"ь" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"а"+base_2+"ь" ;
                       Pl => base_1+base_2+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"а"+base_2+"ь" ;
                       Pl => base_1+base_2+"і"
                     } ;
              Dat => table {
                       Sg => base_1+"а"+base_2+"ю" ;
                       Pl => base_1+base_2+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"а"+base_2+"ю" ;
                       Pl => base_1+base_2+"ёў"
                     } ;
              Loc => table {
                       Sg => base_1+"а"+base_2+"і" ;
                       Pl => base_1+base_2+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"а"+base_2+"ем" ;
                         Pl => base_1+base_2+"ямі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN349"
  } ;

mkN350 : Str -> N ;
mkN350 base =
  case base of {
    base_1+"а"+base_2@? => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"а"+base_2 ;
                       Pl => base_1+base_2+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"а"+base_2 ;
                       Pl => base_1+base_2+"ы"
                     } ;
              Dat => table {
                       Sg => base_1+base_2+"у" ;
                       Pl => base_1+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+base_2+"у" ;
                       Pl => base_1+base_2+"аў"
                     } ;
              Loc => table {
                       Sg => base_1+base_2+"ы" ;
                       Pl => base_1+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+base_2+"ам" ;
                         Pl => base_1+base_2+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN350"
  } ;

mkN351 : Str -> N ;
mkN351 base =
  case base of {
    base_1+"ў" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ў" ;
                       Pl => base_1+"вы"
                     } ;
              Acc => table {
                       Sg => base_1+"ў" ;
                       Pl => base_1+"вы"
                     } ;
              Dat => table {
                       Sg => base_1+"ву" ;
                       Pl => base_1+"вам"
                     } ;
              Gen => table {
                       Sg => base_1+"ва" ;
                       Pl => base_1+"ваў"
                     } ;
              Loc => table {
                       Sg => base_1+"ве" ;
                       Pl => base_1+"вах"
                     } ;
              Instr => table {
                         Sg => base_1+"вам" ;
                         Pl => base_1+"вамі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN351"
  } ;

mkN352 : Str -> N ;
mkN352 base =
  case base of {
    base_1+"во"+base_2@(?+?+?+?)+"ў" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"во"+base_2+"ў" ;
                       Pl => base_1+"а"+base_2+"вы"
                     } ;
              Acc => table {
                       Sg => base_1+"во"+base_2+"ў" ;
                       Pl => base_1+"а"+base_2+"вы"
                     } ;
              Dat => table {
                       Sg => base_1+"во"+base_2+"ву" ;
                       Pl => base_1+"а"+base_2+"вам"
                     } ;
              Gen => table {
                       Sg => base_1+"во"+base_2+"ва" ;
                       Pl => base_1+"а"+base_2+"воў"
                     } ;
              Loc => table {
                       Sg => base_1+"во"+base_2+"ве" ;
                       Pl => base_1+"а"+base_2+"вах"
                     } ;
              Instr => table {
                         Sg => base_1+"во"+base_2+"вам" ;
                         Pl => base_1+"а"+base_2+"вамі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN352"
  } ;

mkN353 : Str -> N ;
mkN353 base =
  case base of {
    base_1+"оў" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"оў" ;
                       Pl => base_1+"авы"
                     } ;
              Acc => table {
                       Sg => base_1+"оў" ;
                       Pl => base_1+"авы"
                     } ;
              Dat => table {
                       Sg => base_1+"ову" ;
                       Pl => base_1+"авам"
                     } ;
              Gen => table {
                       Sg => base_1+"ова" ;
                       Pl => base_1+"авоў"
                     } ;
              Loc => table {
                       Sg => base_1+"ове" ;
                       Pl => base_1+"авах"
                     } ;
              Instr => table {
                         Sg => base_1+"овам" ;
                         Pl => base_1+"авамі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN353"
  } ;

mkN354 : Str -> N ;
mkN354 base =
  case base of {
    base_1+"е"+base_2@? => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"е"+base_2 ;
                       Pl => nonExist
                     } ;
              Acc => table {
                       Sg => base_1+"е"+base_2 ;
                       Pl => nonExist
                     } ;
              Dat => table {
                       Sg => base_1+base_2+"у" ;
                       Pl => nonExist
                     } ;
              Gen => table {
                       Sg => base_1+base_2+"у" ;
                       Pl => nonExist
                     } ;
              Loc => table {
                       Sg => base_1+base_2+"ы" ;
                       Pl => nonExist
                     } ;
              Instr => table {
                         Sg => base_1+base_2+"ом" ;
                         Pl => nonExist
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN354"
  } ;

mkN355 : Str -> N ;
mkN355 base =
  case base of {
    base_1+"а"+base_2@?+"ь" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"а"+base_2+"ь" ;
                       Pl => base_1+base_2+"і"
                     } ;
              Acc => table {
                       Sg => base_1+base_2+"я" ;
                       Pl => base_1+base_2+"яў"
                     } ;
              Dat => table {
                       Sg => base_1+base_2+"ю" ;
                       Pl => base_1+base_2+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+base_2+"я" ;
                       Pl => base_1+base_2+"яў"
                     } ;
              Loc => table {
                       Sg => base_1+base_2+"і" ;
                       Pl => base_1+base_2+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+base_2+"ем" ;
                         Pl => base_1+base_2+"ямі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN355"
  } ;

mkN356 : Str -> N ;
mkN356 base =
  case base of {
    base_1+"а" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"ы"
                     } ;
              Dat => table {
                       Sg => base_1+"е" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"ы" ;
                       Pl => base_1+"аў"
                     } ;
              Loc => table {
                       Sg => base_1+"е" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ой" ;
                         Pl => base_1+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN356"
  } ;

mkN357 : Str -> N ;
mkN357 base =
  case base of {
    base_1+"е"+base_2@? => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"е"+base_2 ;
                       Pl => base_1+base_2+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+base_2+"а" ;
                       Pl => base_1+base_2+"оў"
                     } ;
              Dat => table {
                       Sg => base_1+base_2+"у" ;
                       Pl => base_1+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+base_2+"а" ;
                       Pl => base_1+base_2+"оў"
                     } ;
              Loc => table {
                       Sg => base_1+base_2+"ы" ;
                       Pl => base_1+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+base_2+"ом" ;
                         Pl => base_1+base_2+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN357"
  } ;

mkN358 : Str -> N ;
mkN358 base =
  case base of {
    base_1+base_2@?+"а" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+base_2+"а" ;
                       Pl => base_1+base_2+"і"
                     } ;
              Acc => table {
                       Sg => base_1+base_2+"у" ;
                       Pl => base_1+"а"+base_2
                     } ;
              Dat => table {
                       Sg => base_1+base_2+"у" ;
                       Pl => base_1+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+base_2+"і" ;
                       Pl => base_1+"а"+base_2
                     } ;
              Loc => table {
                       Sg => base_1+base_2+"у" ;
                       Pl => base_1+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+base_2+"ам" ;
                         Pl => base_1+base_2+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN358"
  } ;

mkN359 : Str -> N ;
mkN359 base =
  case base of {
    base_1+"а"+base_2@?+"ь" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"а"+base_2+"ь" ;
                       Pl => nonExist
                     } ;
              Acc => table {
                       Sg => base_1+"а"+base_2+"ь" ;
                       Pl => nonExist
                     } ;
              Dat => table {
                       Sg => base_1+base_2+"ю" ;
                       Pl => nonExist
                     } ;
              Gen => table {
                       Sg => base_1+base_2+"ю" ;
                       Pl => nonExist
                     } ;
              Loc => table {
                       Sg => base_1+base_2+"і" ;
                       Pl => nonExist
                     } ;
              Instr => table {
                         Sg => base_1+base_2+"ем" ;
                         Pl => nonExist
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN359"
  } ;

mkN360 : Str -> N ;
mkN360 base =
  case base of {
    base_1+"ят"+base_2@?+"а" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ят"+base_2+"а" ;
                       Pl => base_1+"ёт"+base_2+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"ят"+base_2+"у" ;
                       Pl => base_1+"ёт"+base_2+"ы"
                     } ;
              Dat => table {
                       Sg => base_1+"ят"+base_2+"е" ;
                       Pl => base_1+"ёт"+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"ят"+base_2+"ы" ;
                       Pl => base_1+"ёце"+base_2
                     } ;
              Loc => table {
                       Sg => base_1+"ят"+base_2+"е" ;
                       Pl => base_1+"ёт"+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ят"+base_2+"ой" ;
                         Pl => base_1+"ёт"+base_2+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN360"
  } ;

mkN361 : Str -> N ;
mkN361 base =
  case base of {
    base_1+"ае" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ае" ;
                       Pl => base_1+"ыя"
                     } ;
              Acc => table {
                       Sg => base_1+"ае" ;
                       Pl => base_1+"ых"
                     } ;
              Dat => table {
                       Sg => base_1+"аму" ;
                       Pl => base_1+"ым"
                     } ;
              Gen => table {
                       Sg => base_1+"ага" ;
                       Pl => base_1+"ых"
                     } ;
              Loc => table {
                       Sg => base_1+"ым" ;
                       Pl => base_1+"ых"
                     } ;
              Instr => table {
                         Sg => base_1+"ым" ;
                         Pl => base_1+"ымі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN361"
  } ;

mkN362 : Str -> N ;
mkN362 base =
  case base of {
    base_1 => lin N
      { s = table {
              Nom => table {
                       Sg => base_1 ;
                       Pl => nonExist
                     } ;
              Acc => table {
                       Sg => base_1 ;
                       Pl => nonExist
                     } ;
              Dat => table {
                       Sg => base_1+"ы" ;
                       Pl => nonExist
                     } ;
              Gen => table {
                       Sg => base_1+"ы" ;
                       Pl => nonExist
                     } ;
              Loc => table {
                       Sg => base_1+"ы" ;
                       Pl => nonExist
                     } ;
              Instr => table {
                         Sg => base_1+"ай" ;
                         Pl => nonExist
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN362"
  } ;

mkN363 : Str -> N ;
mkN363 base =
  case base of {
    base_1+"та" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"та" ;
                       Pl => base_1+"ты"
                     } ;
              Acc => table {
                       Sg => base_1+"ту" ;
                       Pl => base_1+"т"
                     } ;
              Dat => table {
                       Sg => base_1+"це" ;
                       Pl => base_1+"там"
                     } ;
              Gen => table {
                       Sg => base_1+"ты" ;
                       Pl => base_1+"т"
                     } ;
              Loc => table {
                       Sg => base_1+"це" ;
                       Pl => base_1+"тах"
                     } ;
              Instr => table {
                         Sg => base_1+"тай" ;
                         Pl => base_1+"тамі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN363"
  } ;

mkN364 : Str -> N ;
mkN364 base =
  case base of {
    base_1+base_2@(?+?+?+?+?+?+?+?+?)+"т" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+base_2+"т" ;
                       Pl => base_1+"ы"+base_2+"ты"
                     } ;
              Acc => table {
                       Sg => base_1+"а"+base_2+"та" ;
                       Pl => base_1+"аў"+base_2+"таў"
                     } ;
              Dat => table {
                       Sg => base_1+"у"+base_2+"ту" ;
                       Pl => base_1+"ам"+base_2+"там"
                     } ;
              Gen => table {
                       Sg => base_1+"а"+base_2+"та" ;
                       Pl => base_1+"аў"+base_2+"таў"
                     } ;
              Loc => table {
                       Sg => base_1+"е"+base_2+"це" ;
                       Pl => base_1+"ах"+base_2+"тах"
                     } ;
              Instr => table {
                         Sg => base_1+"ам"+base_2+"там" ;
                         Pl => base_1+"амі"+base_2+"тамі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN364"
  } ;

mkN365 : Str -> N ;
mkN365 base =
  case base of {
    base_1+"я"+base_2@(?+?+?) => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"я"+base_2 ;
                       Pl => base_1+"е"+base_2+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"е"+base_2+"а" ;
                       Pl => base_1+"е"+base_2+"оў"
                     } ;
              Dat => table {
                       Sg => base_1+"е"+base_2+"у" ;
                       Pl => base_1+"е"+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"е"+base_2+"а" ;
                       Pl => base_1+"е"+base_2+"оў"
                     } ;
              Loc => table {
                       Sg => base_1+"е"+base_2+"ы" ;
                       Pl => base_1+"е"+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"е"+base_2+"ом" ;
                         Pl => base_1+"е"+base_2+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN365"
  } ;

mkN366 : Str -> N ;
mkN366 base =
  case base of {
    base_1@(?+?+?+?+?+?)+"ь"+base_2 => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ь"+base_2 ;
                       Pl => base_1+"і"+base_2+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"я"+base_2+"а" ;
                       Pl => base_1+"яў"+base_2+"оў"
                     } ;
              Dat => table {
                       Sg => base_1+"ю"+base_2+"у" ;
                       Pl => base_1+"ям"+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"я"+base_2+"а" ;
                       Pl => base_1+"яў"+base_2+"оў"
                     } ;
              Loc => table {
                       Sg => base_1+"і"+base_2+"е" ;
                       Pl => base_1+"ях"+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ем"+base_2+"ом" ;
                         Pl => base_1+"ямі"+base_2+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN366"
  } ;

mkN367 : Str -> N ;
mkN367 base =
  case base of {
    base_1+"це"+base_2@? => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"це"+base_2 ;
                       Pl => base_1+"т"+base_2+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"т"+base_2+"а" ;
                       Pl => base_1+"т"+base_2+"аў"
                     } ;
              Dat => table {
                       Sg => base_1+"т"+base_2+"у" ;
                       Pl => base_1+"т"+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"т"+base_2+"а" ;
                       Pl => base_1+"т"+base_2+"аў"
                     } ;
              Loc => table {
                       Sg => base_1+"т"+base_2+"е" ;
                       Pl => base_1+"т"+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"т"+base_2+"ам" ;
                         Pl => base_1+"т"+base_2+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN367"
  } ;

mkN368 : Str -> N ;
mkN368 base =
  case base of {
    base_1+"вё"+base_2@? => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"вё"+base_2 ;
                       Pl => base_1+"ў"+base_2+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"вё"+base_2 ;
                       Pl => base_1+"ў"+base_2+"ы"
                     } ;
              Dat => table {
                       Sg => base_1+"ў"+base_2+"у" ;
                       Pl => base_1+"ў"+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"ў"+base_2+"а" ;
                       Pl => base_1+"ў"+base_2+"оў"
                     } ;
              Loc => table {
                       Sg => base_1+"ў"+base_2+"е" ;
                       Pl => base_1+"ў"+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ў"+base_2+"ом" ;
                         Pl => base_1+"ў"+base_2+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN368"
  } ;

mkN369 : Str -> N ;
mkN369 base =
  case base of {
    base_1+"о"+base_2@(?+?+?)+"й" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"о"+base_2+"й" ;
                       Pl => base_1+"а"+base_2+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"о"+base_2+"я" ;
                       Pl => base_1+"а"+base_2+"яў"
                     } ;
              Dat => table {
                       Sg => base_1+"о"+base_2+"ю" ;
                       Pl => base_1+"а"+base_2+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"о"+base_2+"я" ;
                       Pl => base_1+"а"+base_2+"яў"
                     } ;
              Loc => table {
                       Sg => base_1+"о"+base_2+"ю" ;
                       Pl => base_1+"а"+base_2+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"о"+base_2+"ем" ;
                         Pl => base_1+"а"+base_2+"ямі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN369"
  } ;

mkN370 : Str -> N ;
mkN370 base =
  case base of {
    base_1+"е"+base_2@(?+?)+"я"+base_3@?+"о" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"е"+base_2+"я"+base_3+"о" ;
                       Pl => base_1+"я"+base_2+"ё"+base_3+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"е"+base_2+"я"+base_3+"о" ;
                       Pl => base_1+"я"+base_2+"ё"+base_3+"ы"
                     } ;
              Dat => table {
                       Sg => base_1+"е"+base_2+"я"+base_3+"у" ;
                       Pl => base_1+"я"+base_2+"ё"+base_3+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"е"+base_2+"я"+base_3+"а" ;
                       Pl => base_1+"я"+base_2+"ё"+base_3
                     } ;
              Loc => table {
                       Sg => base_1+"е"+base_2+"я"+base_3+"е" ;
                       Pl => base_1+"я"+base_2+"ё"+base_3+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"е"+base_2+"я"+base_3+"ом" ;
                         Pl => base_1+"я"+base_2+"ё"+base_3+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN370"
  } ;

mkN371 : Str -> N ;
mkN371 base =
  case base of {
    base_1+"це"+base_2@?+"ь" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"це"+base_2+"ь" ;
                       Pl => base_1+"т"+base_2+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"т"+base_2+"я" ;
                       Pl => base_1+"т"+base_2+"яў"
                     } ;
              Dat => table {
                       Sg => base_1+"т"+base_2+"ю" ;
                       Pl => base_1+"т"+base_2+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"т"+base_2+"я" ;
                       Pl => base_1+"т"+base_2+"яў"
                     } ;
              Loc => table {
                       Sg => base_1+"т"+base_2+"і" ;
                       Pl => base_1+"т"+base_2+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"т"+base_2+"ем" ;
                         Pl => base_1+"т"+base_2+"ямі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN371"
  } ;

mkN372 : Str -> N ;
mkN372 base =
  case base of {
    base_1+"це"+base_2@?+"ь" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"це"+base_2+"ь" ;
                       Pl => base_1+"т"+base_2+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"т"+base_2+"я" ;
                       Pl => base_1+"т"+base_2+"яў"
                     } ;
              Dat => table {
                       Sg => base_1+"т"+base_2+"ю" ;
                       Pl => base_1+"т"+base_2+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"т"+base_2+"я" ;
                       Pl => base_1+"т"+base_2+"яў"
                     } ;
              Loc => table {
                       Sg => base_1+"т"+base_2+"ю" ;
                       Pl => base_1+"т"+base_2+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"т"+base_2+"ем" ;
                         Pl => base_1+"т"+base_2+"ямі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN372"
  } ;

mkN373 : Str -> N ;
mkN373 base =
  case base of {
    base_1+"а"+base_2@? => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"а"+base_2 ;
                       Pl => base_1+base_2+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"а"+base_2 ;
                       Pl => base_1+base_2+"ы"
                     } ;
              Dat => table {
                       Sg => base_1+base_2+"у" ;
                       Pl => base_1+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+base_2+"а" ;
                       Pl => base_1+base_2+"аў"
                     } ;
              Loc => table {
                       Sg => base_1+base_2+"ы" ;
                       Pl => base_1+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+base_2+"ам" ;
                         Pl => base_1+base_2+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN373"
  } ;

mkN374 : Str -> N ;
mkN374 base =
  case base of {
    base_1+"ата" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ата" ;
                       Pl => base_1+"оты"
                     } ;
              Acc => table {
                       Sg => base_1+"ату" ;
                       Pl => base_1+"оты"
                     } ;
              Dat => table {
                       Sg => base_1+"аце" ;
                       Pl => base_1+"отам"
                     } ;
              Gen => table {
                       Sg => base_1+"аты" ;
                       Pl => base_1+"от"
                     } ;
              Loc => table {
                       Sg => base_1+"аце" ;
                       Pl => base_1+"отах"
                     } ;
              Instr => table {
                         Sg => base_1+"атой" ;
                         Pl => base_1+"отамі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN374"
  } ;

mkN375 : Str -> N ;
mkN375 base =
  case base of {
    base_1+"ь" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ь" ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"ь" ;
                       Pl => base_1+"і"
                     } ;
              Dat => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ей"
                     } ;
              Loc => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"сю" ;
                         Pl => base_1+"ямі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN375"
  } ;

mkN376 : Str -> N ;
mkN376 base =
  case base of {
    base_1+"цё"+base_2@? => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"цё"+base_2 ;
                       Pl => base_1+"т"+base_2+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"цё"+base_2 ;
                       Pl => base_1+"т"+base_2+"ы"
                     } ;
              Dat => table {
                       Sg => base_1+"т"+base_2+"у" ;
                       Pl => base_1+"т"+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"т"+base_2+"а" ;
                       Pl => base_1+"т"+base_2+"оў"
                     } ;
              Loc => table {
                       Sg => base_1+"т"+base_2+"е" ;
                       Pl => base_1+"т"+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"т"+base_2+"ом" ;
                         Pl => base_1+"т"+base_2+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN376"
  } ;

mkN377 : Str -> N ;
mkN377 base =
  case base of {
    base_1+"ве"+base_2@?+"ь" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ве"+base_2+"ь" ;
                       Pl => base_1+"ў"+base_2+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"ве"+base_2+"ь" ;
                       Pl => base_1+"ў"+base_2+"і"
                     } ;
              Dat => table {
                       Sg => base_1+"ў"+base_2+"ю" ;
                       Pl => base_1+"ў"+base_2+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"ў"+base_2+"ю" ;
                       Pl => base_1+"ў"+base_2+"яў"
                     } ;
              Loc => table {
                       Sg => base_1+"ў"+base_2+"і" ;
                       Pl => base_1+"ў"+base_2+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"ў"+base_2+"ем" ;
                         Pl => base_1+"ў"+base_2+"ямі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN377"
  } ;

mkN378 : Str -> N ;
mkN378 base =
  case base of {
    base_1+"я"+base_2@(?+?)+"оў" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"я"+base_2+"оў" ;
                       Pl => base_1+"я"+base_2+"ові"
                     } ;
              Acc => table {
                       Sg => base_1+"я"+base_2+"оў" ;
                       Pl => base_1+"е"+base_2+"ывей"
                     } ;
              Dat => table {
                       Sg => base_1+"е"+base_2+"ыві" ;
                       Pl => base_1+"е"+base_2+"ывям"
                     } ;
              Gen => table {
                       Sg => base_1+"е"+base_2+"ыві" ;
                       Pl => base_1+"е"+base_2+"ывей"
                     } ;
              Loc => table {
                       Sg => base_1+"е"+base_2+"ыві" ;
                       Pl => base_1+"е"+base_2+"ывях"
                     } ;
              Instr => table {
                         Sg => base_1+"е"+base_2+"ывёй" ;
                         Pl => base_1+"е"+base_2+"ывямі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN378"
  } ;

mkN379 : Str -> N ;
mkN379 base =
  case base of {
    base_1+"ё"+base_2@? => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ё"+base_2 ;
                       Pl => base_1+"я"+base_2+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"ё"+base_2 ;
                       Pl => base_1+"я"+base_2+"і"
                     } ;
              Dat => table {
                       Sg => base_1+"я"+base_2+"у" ;
                       Pl => base_1+"я"+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"я"+base_2+"у" ;
                       Pl => base_1+"я"+base_2+"оў"
                     } ;
              Loc => table {
                       Sg => base_1+"я"+base_2+"у" ;
                       Pl => base_1+"я"+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"я"+base_2+"ом" ;
                         Pl => base_1+"я"+base_2+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN379"
  } ;

mkN380 : Str -> N ;
mkN380 base =
  case base of {
    base_1+base_2@?+"зе"+base_3@?+"ь" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+base_2+"зе"+base_3+"ь" ;
                       Pl => base_1+"а"+base_2+base_3+"і"
                     } ;
              Acc => table {
                       Sg => base_1+base_2+"зе"+base_3+"ь" ;
                       Pl => base_1+"а"+base_2+base_3+"і"
                     } ;
              Dat => table {
                       Sg => base_1+"а"+base_2+base_3+"ю" ;
                       Pl => base_1+"а"+base_2+base_3+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"а"+base_2+base_3+"я" ;
                       Pl => base_1+"а"+base_2+base_3+"яў"
                     } ;
              Loc => table {
                       Sg => base_1+"а"+base_2+base_3+"і" ;
                       Pl => base_1+"а"+base_2+base_3+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"а"+base_2+base_3+"ем" ;
                         Pl => base_1+"а"+base_2+base_3+"ямі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN380"
  } ;

mkN381 : Str -> N ;
mkN381 base =
  case base of {
    base_1+"зё"+base_2@? => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"зё"+base_2 ;
                       Pl => nonExist
                     } ;
              Acc => table {
                       Sg => base_1+"зё"+base_2 ;
                       Pl => nonExist
                     } ;
              Dat => table {
                       Sg => base_1+base_2+"у" ;
                       Pl => nonExist
                     } ;
              Gen => table {
                       Sg => base_1+base_2+"у" ;
                       Pl => nonExist
                     } ;
              Loc => table {
                       Sg => base_1+base_2+"ы" ;
                       Pl => nonExist
                     } ;
              Instr => table {
                         Sg => base_1+base_2+"ом" ;
                         Pl => nonExist
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN381"
  } ;

mkN382 : Str -> N ;
mkN382 base =
  case base of {
    base_1+"ве"+base_2@? => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ве"+base_2 ;
                       Pl => nonExist
                     } ;
              Acc => table {
                       Sg => base_1+"ве"+base_2 ;
                       Pl => nonExist
                     } ;
              Dat => table {
                       Sg => base_1+"ў"+base_2+"у" ;
                       Pl => nonExist
                     } ;
              Gen => table {
                       Sg => base_1+"ў"+base_2+"у" ;
                       Pl => nonExist
                     } ;
              Loc => table {
                       Sg => base_1+"ў"+base_2+"ы" ;
                       Pl => nonExist
                     } ;
              Instr => table {
                         Sg => base_1+"ў"+base_2+"ам" ;
                         Pl => nonExist
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN382"
  } ;

mkN383 : Str -> N ;
mkN383 base =
  case base of {
    base_1+"ына" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ына" ;
                       Pl => base_1+"аты"
                     } ;
              Acc => table {
                       Sg => base_1+"ыну" ;
                       Pl => base_1+"ат"
                     } ;
              Dat => table {
                       Sg => base_1+"ыне" ;
                       Pl => base_1+"атам"
                     } ;
              Gen => table {
                       Sg => base_1+"ыны" ;
                       Pl => base_1+"ат"
                     } ;
              Loc => table {
                       Sg => base_1+"ыне" ;
                       Pl => base_1+"атах"
                     } ;
              Instr => table {
                         Sg => base_1+"ынай" ;
                         Pl => base_1+"атамі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN383"
  } ;

mkN384 : Str -> N ;
mkN384 base =
  case base of {
    base_1+"я" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"я" ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"ю" ;
                       Pl => base_1+"й"
                     } ;
              Dat => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"й"
                     } ;
              Loc => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"яй" ;
                         Pl => base_1+"ямі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN384"
  } ;

mkN385 : Str -> N ;
mkN385 base =
  case base of {
    base_1+"т" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"т" ;
                       Pl => base_1+"ты"
                     } ;
              Acc => table {
                       Sg => base_1+"т" ;
                       Pl => base_1+"ты"
                     } ;
              Dat => table {
                       Sg => base_1+"ту" ;
                       Pl => base_1+"там"
                     } ;
              Gen => table {
                       Sg => base_1+"та" ;
                       Pl => base_1+"тоў"
                     } ;
              Loc => table {
                       Sg => base_1+"це" ;
                       Pl => base_1+"тах"
                     } ;
              Instr => table {
                         Sg => base_1+"там" ;
                         Pl => base_1+"тамі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN385"
  } ;

mkN386 : Str -> N ;
mkN386 base =
  case base of {
    base_1+"ь" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ь" ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"ь" ;
                       Pl => base_1+"і"
                     } ;
              Dat => table {
                       Sg => base_1+"ю" ;
                       Pl => base_1+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"ю" ;
                       Pl => base_1+"ёў"
                     } ;
              Loc => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"ём" ;
                         Pl => base_1+"ямі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN386"
  } ;

mkN387 : Str -> N ;
mkN387 base =
  case base of {
    base_1+"я"+base_2@?+"а" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"я"+base_2+"а" ;
                       Pl => base_1+"е"+base_2+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"я"+base_2+"у" ;
                       Pl => base_1+"е"+base_2+"ы"
                     } ;
              Dat => table {
                       Sg => base_1+"я"+base_2+"зе" ;
                       Pl => base_1+"е"+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"я"+base_2+"ы" ;
                       Pl => base_1+"е"+base_2
                     } ;
              Loc => table {
                       Sg => base_1+"я"+base_2+"зе" ;
                       Pl => base_1+"е"+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"я"+base_2+"ой" ;
                         Pl => base_1+"е"+base_2+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN387"
  } ;

mkN388 : Str -> N ;
mkN388 base =
  case base of {
    base_1+"а"+base_2@?+base_3@?+"а" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"а"+base_2+base_3+"а" ;
                       Pl => base_1+"о"+base_2+base_3+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"а"+base_2+base_3+"у" ;
                       Pl => base_1+"о"+base_2+base_3+"ы"
                     } ;
              Dat => table {
                       Sg => base_1+"а"+base_2+base_3+"е" ;
                       Pl => base_1+"о"+base_2+base_3+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"а"+base_2+base_3+"ы" ;
                       Pl => base_1+"о"+base_2+"е"+base_3
                     } ;
              Loc => table {
                       Sg => base_1+"а"+base_2+base_3+"е" ;
                       Pl => base_1+"о"+base_2+base_3+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"а"+base_2+base_3+"ой" ;
                         Pl => base_1+"о"+base_2+base_3+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN388"
  } ;

mkN389 : Str -> N ;
mkN389 base =
  case base of {
    base_1+"еў" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"еў" ;
                       Pl => base_1+"явы"
                     } ;
              Acc => table {
                       Sg => base_1+"еў" ;
                       Pl => base_1+"явы"
                     } ;
              Dat => table {
                       Sg => base_1+"яву" ;
                       Pl => base_1+"явам"
                     } ;
              Gen => table {
                       Sg => base_1+"ява" ;
                       Pl => base_1+"явоў"
                     } ;
              Loc => table {
                       Sg => base_1+"яве" ;
                       Pl => base_1+"явах"
                     } ;
              Instr => table {
                         Sg => base_1+"явом" ;
                         Pl => base_1+"явамі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN389"
  } ;

mkN390 : Str -> N ;
mkN390 base =
  case base of {
    base_1+"е"+base_2@? => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"е"+base_2 ;
                       Pl => base_1+base_2+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"е"+base_2 ;
                       Pl => base_1+base_2+"ы"
                     } ;
              Dat => table {
                       Sg => base_1+base_2+"у" ;
                       Pl => base_1+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+base_2+"а" ;
                       Pl => base_1+base_2+"оў"
                     } ;
              Loc => table {
                       Sg => base_1+base_2+"ы" ;
                       Pl => base_1+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+base_2+"ом" ;
                         Pl => base_1+base_2+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN390"
  } ;

mkN391 : Str -> N ;
mkN391 base =
  case base of {
    base_1+"а" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"ы"
                     } ;
              Dat => table {
                       Sg => base_1+"ы" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"ы" ;
                       Pl => base_1+"аў"
                     } ;
              Loc => table {
                       Sg => base_1+"ы" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ой" ;
                         Pl => base_1+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN391"
  } ;

mkN392 : Str -> N ;
mkN392 base =
  case base of {
    base_1+"ь"+base_2@?+"о" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ь"+base_2+"о" ;
                       Pl => base_1+"ь"+base_2+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"ь"+base_2+"о" ;
                       Pl => base_1+"ь"+base_2+"ы"
                     } ;
              Dat => table {
                       Sg => base_1+"ь"+base_2+"у" ;
                       Pl => base_1+"ь"+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"ь"+base_2+"а" ;
                       Pl => base_1+"е"+base_2
                     } ;
              Loc => table {
                       Sg => base_1+"ь"+base_2+"е" ;
                       Pl => base_1+"ь"+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ь"+base_2+"ом" ;
                         Pl => base_1+"ь"+base_2+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN392"
  } ;

mkN393 : Str -> N ;
mkN393 base =
  case base of {
    base_1+"э"+base_2@?+"я" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"э"+base_2+"я" ;
                       Pl => base_1+"а"+base_2+"ёны"
                     } ;
              Acc => table {
                       Sg => base_1+"э"+base_2+"я" ;
                       Pl => base_1+"а"+base_2+"ёны"
                     } ;
              Dat => table {
                       Sg => base_1+"э"+base_2+"ю" ;
                       Pl => base_1+"а"+base_2+"ёнам"
                     } ;
              Gen => table {
                       Sg => base_1+"э"+base_2+"я" ;
                       Pl => base_1+"а"+base_2+"ён"
                     } ;
              Loc => table {
                       Sg => base_1+"э"+base_2+"і" ;
                       Pl => base_1+"а"+base_2+"ёнах"
                     } ;
              Instr => table {
                         Sg => base_1+"э"+base_2+"ем" ;
                         Pl => base_1+"а"+base_2+"ёнамі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN393"
  } ;

mkN394 : Str -> N ;
mkN394 base =
  case base of {
    base_1+"ха" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ха" ;
                       Pl => base_1+"хі"
                     } ;
              Acc => table {
                       Sg => base_1+"ха" ;
                       Pl => base_1+"хі"
                     } ;
              Dat => table {
                       Sg => base_1+"ху" ;
                       Pl => base_1+"хам"
                     } ;
              Gen => table {
                       Sg => base_1+"ха" ;
                       Pl => base_1+"хаў"
                     } ;
              Loc => table {
                       Sg => base_1+"се" ;
                       Pl => base_1+"хах"
                     } ;
              Instr => table {
                         Sg => base_1+"хам" ;
                         Pl => base_1+"хамі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN394"
  } ;

mkN395 : Str -> N ;
mkN395 base =
  case base of {
    "аў"+base_1+"а" => lin N
      { s = table {
              Nom => table {
                       Sg => "аў"+base_1+"а" ;
                       Pl => "воў"+base_1+"ы"
                     } ;
              Acc => table {
                       Sg => "аў"+base_1+"у" ;
                       Pl => "аве"+base_1
                     } ;
              Dat => table {
                       Sg => "аў"+base_1+"ы" ;
                       Pl => "воў"+base_1+"ам"
                     } ;
              Gen => table {
                       Sg => "аў"+base_1+"ы" ;
                       Pl => "аве"+base_1
                     } ;
              Loc => table {
                       Sg => "аў"+base_1+"ы" ;
                       Pl => "воў"+base_1+"ах"
                     } ;
              Instr => table {
                         Sg => "аў"+base_1+"ой" ;
                         Pl => "воў"+base_1+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN395"
  } ;

mkN396 : Str -> N ;
mkN396 base =
  case base of {
    base_1+"х" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"х" ;
                       Pl => base_1+"хі"
                     } ;
              Acc => table {
                       Sg => base_1+"х" ;
                       Pl => base_1+"хі"
                     } ;
              Dat => table {
                       Sg => base_1+"ху" ;
                       Pl => base_1+"хам"
                     } ;
              Gen => table {
                       Sg => base_1+"ха" ;
                       Pl => base_1+"хаў"
                     } ;
              Loc => table {
                       Sg => base_1+"се" ;
                       Pl => base_1+"хах"
                     } ;
              Instr => table {
                         Sg => base_1+"хам" ;
                         Pl => base_1+"хамі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN396"
  } ;

mkN397 : Str -> N ;
mkN397 base =
  case base of {
    base_1+"т" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"т" ;
                       Pl => base_1+"ты"
                     } ;
              Acc => table {
                       Sg => base_1+"та" ;
                       Pl => base_1+"т"
                     } ;
              Dat => table {
                       Sg => base_1+"ту" ;
                       Pl => base_1+"там"
                     } ;
              Gen => table {
                       Sg => base_1+"та" ;
                       Pl => base_1+"т"
                     } ;
              Loc => table {
                       Sg => base_1+"це" ;
                       Pl => base_1+"тах"
                     } ;
              Instr => table {
                         Sg => base_1+"там" ;
                         Pl => base_1+"тамі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN397"
  } ;

mkN398 : Str -> N ;
mkN398 base =
  case base of {
    base_1+"е"+base_2@(?+?)+"ь" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"е"+base_2+"ь" ;
                       Pl => base_1+"я"+base_2+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"е"+base_2+"я" ;
                       Pl => base_1+"я"+base_2+"ёў"
                     } ;
              Dat => table {
                       Sg => base_1+"е"+base_2+"ю" ;
                       Pl => base_1+"я"+base_2+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"е"+base_2+"я" ;
                       Pl => base_1+"я"+base_2+"ёў"
                     } ;
              Loc => table {
                       Sg => base_1+"е"+base_2+"ю" ;
                       Pl => base_1+"я"+base_2+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"е"+base_2+"ем" ;
                         Pl => base_1+"я"+base_2+"ямі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN398"
  } ;

mkN399 : Str -> N ;
mkN399 base =
  case base of {
    base_1+"а"+base_2@?+"га" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"а"+base_2+"га" ;
                       Pl => base_1+"э"+base_2+"гі"
                     } ;
              Acc => table {
                       Sg => base_1+"а"+base_2+"гу" ;
                       Pl => base_1+"э"+base_2+"гі"
                     } ;
              Dat => table {
                       Sg => base_1+"а"+base_2+"зе" ;
                       Pl => base_1+"э"+base_2+"гам"
                     } ;
              Gen => table {
                       Sg => base_1+"а"+base_2+"гі" ;
                       Pl => base_1+"э"+base_2+"г"
                     } ;
              Loc => table {
                       Sg => base_1+"а"+base_2+"зе" ;
                       Pl => base_1+"э"+base_2+"гах"
                     } ;
              Instr => table {
                         Sg => base_1+"а"+base_2+"гой" ;
                         Pl => base_1+"э"+base_2+"гамі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN399"
  } ;

mkN400 : Str -> N ;
mkN400 base =
  case base of {
    base_1+"э"+base_2@?+"е"+base_3@?+"ь" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"э"+base_2+"е"+base_3+"ь" ;
                       Pl => base_1+"а"+base_2+"я"+base_3+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"э"+base_2+"е"+base_3+"ь" ;
                       Pl => base_1+"а"+base_2+"я"+base_3+"і"
                     } ;
              Dat => table {
                       Sg => base_1+"э"+base_2+"е"+base_3+"ю" ;
                       Pl => base_1+"а"+base_2+"я"+base_3+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"э"+base_2+"е"+base_3+"я" ;
                       Pl => base_1+"а"+base_2+"я"+base_3+"ёў"
                     } ;
              Loc => table {
                       Sg => base_1+"э"+base_2+"е"+base_3+"і" ;
                       Pl => base_1+"а"+base_2+"я"+base_3+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"э"+base_2+"е"+base_3+"ем" ;
                         Pl => base_1+"а"+base_2+"я"+base_3+"ямі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN400"
  } ;

mkN401 : Str -> N ;
mkN401 base =
  case base of {
    "рабёнак" => lin N
      { s = table {
              Nom => table {
                       Sg => "рабёнак" ;
                       Pl => "дзеці"
                     } ;
              Acc => table {
                       Sg => "рабёнка" ;
                       Pl => "дзяцей"
                     } ;
              Dat => table {
                       Sg => "рабёнку" ;
                       Pl => "дзецям"
                     } ;
              Gen => table {
                       Sg => "рабёнка" ;
                       Pl => "дзяцей"
                     } ;
              Loc => table {
                       Sg => "рабёнку" ;
                       Pl => "дзецях"
                     } ;
              Instr => table {
                         Sg => "рабёнкам" ;
                         Pl => "дзецьмі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN401"
  } ;

mkN402 : Str -> N ;
mkN402 base =
  case base of {
    base_1+"ве"+base_2@?+"ь" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ве"+base_2+"ь" ;
                       Pl => base_1+"ў"+base_2+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"ў"+base_2+"я" ;
                       Pl => base_1+"ў"+base_2+"яў"
                     } ;
              Dat => table {
                       Sg => base_1+"ў"+base_2+"ю" ;
                       Pl => base_1+"ў"+base_2+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"ў"+base_2+"я" ;
                       Pl => base_1+"ў"+base_2+"яў"
                     } ;
              Loc => table {
                       Sg => base_1+"ў"+base_2+"і" ;
                       Pl => base_1+"ў"+base_2+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"ў"+base_2+"ем" ;
                         Pl => base_1+"ў"+base_2+"ямі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN402"
  } ;

mkN403 : Str -> N ;
mkN403 base =
  case base of {
    base_1+"я" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"я" ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"ю" ;
                       Pl => base_1+"яў"
                     } ;
              Dat => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"яў"
                     } ;
              Loc => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"яй" ;
                         Pl => base_1+"ямі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN403"
  } ;

mkN404 : Str -> N ;
mkN404 base =
  case base of {
    base_1 => lin N
      { s = table {
              Nom => table {
                       Sg => base_1 ;
                       Pl => base_1+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"оў"
                     } ;
              Dat => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"оў"
                     } ;
              Loc => table {
                       Sg => base_1+"зе" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ам" ;
                         Pl => base_1+"амі"
                       }
            } ;
        Voc = table {
                Sg => base_1+"зе" ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN404"
  } ;

mkN405 : Str -> N ;
mkN405 base =
  case base of {
    base_1+"ё"+base_2@? => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ё"+base_2 ;
                       Pl => base_1+"ь"+base_2+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"ё"+base_2 ;
                       Pl => base_1+"ь"+base_2+"і"
                     } ;
              Dat => table {
                       Sg => base_1+"ь"+base_2+"у" ;
                       Pl => base_1+"ь"+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"ь"+base_2+"а" ;
                       Pl => base_1+"ь"+base_2+"оў"
                     } ;
              Loc => table {
                       Sg => base_1+"ь"+base_2+"у" ;
                       Pl => base_1+"ь"+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ь"+base_2+"ом" ;
                         Pl => base_1+"ь"+base_2+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN405"
  } ;

mkN406 : Str -> N ;
mkN406 base =
  case base of {
    base_1+"а"+base_2@?+"га" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"а"+base_2+"га" ;
                       Pl => base_1+"э"+base_2+"гі"
                     } ;
              Acc => table {
                       Sg => base_1+"а"+base_2+"гу" ;
                       Pl => base_1+"э"+base_2+"гі"
                     } ;
              Dat => table {
                       Sg => base_1+"а"+base_2+"зе" ;
                       Pl => base_1+"э"+base_2+"гам"
                     } ;
              Gen => table {
                       Sg => base_1+"а"+base_2+"гі" ;
                       Pl => base_1+"э"+base_2+"гаў"
                     } ;
              Loc => table {
                       Sg => base_1+"а"+base_2+"зе" ;
                       Pl => base_1+"э"+base_2+"гах"
                     } ;
              Instr => table {
                         Sg => base_1+"а"+base_2+"гой" ;
                         Pl => base_1+"э"+base_2+"гамі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN406"
  } ;

mkN407 : Str -> N ;
mkN407 base =
  case base of {
    base_1+"е"+base_2@? => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"е"+base_2 ;
                       Pl => base_1+"ь"+base_2+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"ь"+base_2+"а" ;
                       Pl => base_1+"ь"+base_2+"оў"
                     } ;
              Dat => table {
                       Sg => base_1+"ь"+base_2+"у" ;
                       Pl => base_1+"ь"+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"ь"+base_2+"а" ;
                       Pl => base_1+"ь"+base_2+"оў"
                     } ;
              Loc => table {
                       Sg => base_1+"ь"+base_2+"у" ;
                       Pl => base_1+"ь"+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ь"+base_2+"ом" ;
                         Pl => base_1+"ь"+base_2+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN407"
  } ;

mkN408 : Str -> N ;
mkN408 base =
  case base of {
    base_1+"я" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"я" ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"ю" ;
                       Pl => base_1+"ь"
                     } ;
              Dat => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ь"
                     } ;
              Loc => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"ёй" ;
                         Pl => base_1+"ямі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN408"
  } ;

mkN409 : Str -> N ;
mkN409 base =
  case base of {
    base_1+"я"+base_2@("рык"|(?+?+?+?)) => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"я"+base_2 ;
                       Pl => base_1+"е"+base_2+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"я"+base_2 ;
                       Pl => base_1+"е"+base_2+"і"
                     } ;
              Dat => table {
                       Sg => base_1+"е"+base_2+"у" ;
                       Pl => base_1+"е"+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"е"+base_2+"а" ;
                       Pl => base_1+"е"+base_2+"оў"
                     } ;
              Loc => table {
                       Sg => base_1+"е"+base_2+"у" ;
                       Pl => base_1+"е"+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"е"+base_2+"ом" ;
                         Pl => base_1+"е"+base_2+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN409"
  } ;

mkN410 : Str -> N ;
mkN410 base =
  case base of {
    base_1+"ь" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ь" ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"ь" ;
                       Pl => base_1+"і"
                     } ;
              Dat => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ей"
                     } ;
              Loc => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"зю" ;
                         Pl => base_1+"ямі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN410"
  } ;

mkN411 : Str -> N ;
mkN411 base =
  case base of {
    base_1+"ня" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ня" ;
                       Pl => base_1+"ні"
                     } ;
              Acc => table {
                       Sg => base_1+"ню" ;
                       Pl => base_1+"ей"
                     } ;
              Dat => table {
                       Sg => base_1+"ні" ;
                       Pl => base_1+"ням"
                     } ;
              Gen => table {
                       Sg => base_1+"ні" ;
                       Pl => base_1+"ей"
                     } ;
              Loc => table {
                       Sg => base_1+"ні" ;
                       Pl => base_1+"нях"
                     } ;
              Instr => table {
                         Sg => base_1+"нёй" ;
                         Pl => base_1+"нямі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN411"
  } ;

mkN412 : Str -> N ;
mkN412 base =
  case base of {
    base_1+"ая" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ая" ;
                       Pl => base_1+"ыя"
                     } ;
              Acc => table {
                       Sg => base_1+"ую" ;
                       Pl => base_1+"ых"
                     } ;
              Dat => table {
                       Sg => base_1+"ай" ;
                       Pl => base_1+"ым"
                     } ;
              Gen => table {
                       Sg => base_1+"ай" ;
                       Pl => base_1+"ых"
                     } ;
              Loc => table {
                       Sg => base_1+"ай" ;
                       Pl => base_1+"ых"
                     } ;
              Instr => table {
                         Sg => base_1+"ай" ;
                         Pl => base_1+"ымі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN412"
  } ;

mkN413 : Str -> N ;
mkN413 base =
  case base of {
    base_1+"ь"+base_2@(?+?+?+?+?+?)+"ь" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ь"+base_2+"ь" ;
                       Pl => nonExist
                     } ;
              Acc => table {
                       Sg => base_1+"ь"+base_2+"ь" ;
                       Pl => nonExist
                     } ;
              Dat => table {
                       Sg => base_1+"ю"+base_2+"ю" ;
                       Pl => nonExist
                     } ;
              Gen => table {
                       Sg => base_1+"ю"+base_2+"ю" ;
                       Pl => nonExist
                     } ;
              Loc => table {
                       Sg => base_1+"і"+base_2+"і" ;
                       Pl => nonExist
                     } ;
              Instr => table {
                         Sg => base_1+"ем"+base_2+"ем" ;
                         Pl => nonExist
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN413"
  } ;

mkN414 : Str -> N ;
mkN414 base =
  case base of {
    base_1+"ін" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ін" ;
                       Pl => base_1+"іны"
                     } ;
              Acc => table {
                       Sg => base_1+"іна" ;
                       Pl => base_1
                     } ;
              Dat => table {
                       Sg => base_1+"іну" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"іна" ;
                       Pl => base_1+"інаў"
                     } ;
              Loc => table {
                       Sg => base_1+"іне" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"інам" ;
                         Pl => base_1+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN414"
  } ;

mkN415 : Str -> N ;
mkN415 base =
  case base of {
    base_1+"вы" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"вы" ;
                       Pl => base_1+"вы"
                     } ;
              Acc => table {
                       Sg => nonExist ;
                       Pl => base_1+"вы"
                     } ;
              Dat => table {
                       Sg => nonExist ;
                       Pl => base_1+"вам"
                     } ;
              Gen => table {
                       Sg => base_1+"ў" ;
                       Pl => base_1+"ў"
                     } ;
              Loc => table {
                       Sg => nonExist ;
                       Pl => base_1+"вах"
                     } ;
              Instr => table {
                         Sg => nonExist ;
                         Pl => base_1+"вамі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN415"
  } ;

mkN416 : Str -> N ;
mkN416 base =
  case base of {
    base_1+"я"+base_2@(?+?+?) => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"я"+base_2 ;
                       Pl => base_1+"е"+base_2+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"е"+base_2+"а" ;
                       Pl => base_1+"е"+base_2+"оў"
                     } ;
              Dat => table {
                       Sg => base_1+"е"+base_2+"у" ;
                       Pl => base_1+"е"+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"е"+base_2+"а" ;
                       Pl => base_1+"е"+base_2+"оў"
                     } ;
              Loc => table {
                       Sg => base_1+"е"+base_2+"у" ;
                       Pl => base_1+"е"+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"е"+base_2+"ом" ;
                         Pl => base_1+"е"+base_2+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN416"
  } ;

mkN417 : Str -> N ;
mkN417 base =
  case base of {
    base_1+"а"+base_2@(?+?)+"о" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"а"+base_2+"о" ;
                       Pl => base_1+"э"+base_2+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"а"+base_2+"о" ;
                       Pl => base_1+"э"+base_2+"ы"
                     } ;
              Dat => table {
                       Sg => base_1+"а"+base_2+"у" ;
                       Pl => base_1+"э"+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"а"+base_2+"а" ;
                       Pl => base_1+"э"+base_2+"аў"
                     } ;
              Loc => table {
                       Sg => base_1+"а"+base_2+"е" ;
                       Pl => base_1+"э"+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"а"+base_2+"ом" ;
                         Pl => base_1+"э"+base_2+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN417"
  } ;

mkN418 : Str -> N ;
mkN418 base =
  case base of {
    base_1+"ь" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ь" ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"ь" ;
                       Pl => base_1+"і"
                     } ;
              Dat => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"яў"
                     } ;
              Loc => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"зю" ;
                         Pl => base_1+"ямі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN418"
  } ;

mkN419 : Str -> N ;
mkN419 base =
  case base of {
    base_1+"ынка" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ынка" ;
                       Pl => base_1+"аткі"
                     } ;
              Acc => table {
                       Sg => base_1+"ынку" ;
                       Pl => base_1+"атак"
                     } ;
              Dat => table {
                       Sg => base_1+"ынцы" ;
                       Pl => base_1+"аткам"
                     } ;
              Gen => table {
                       Sg => base_1+"ынкі" ;
                       Pl => base_1+"атак"
                     } ;
              Loc => table {
                       Sg => base_1+"ынцы" ;
                       Pl => base_1+"атках"
                     } ;
              Instr => table {
                         Sg => base_1+"ынкай" ;
                         Pl => base_1+"аткамі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN419"
  } ;

mkN420 : Str -> N ;
mkN420 base =
  case base of {
    base_1+"ве"+base_2@? => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ве"+base_2 ;
                       Pl => base_1+"ў"+base_2+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"ў"+base_2+"а" ;
                       Pl => base_1+"ў"+base_2+"оў"
                     } ;
              Dat => table {
                       Sg => base_1+"ў"+base_2+"у" ;
                       Pl => base_1+"ў"+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"ў"+base_2+"а" ;
                       Pl => base_1+"ў"+base_2+"оў"
                     } ;
              Loc => table {
                       Sg => base_1+"ў"+base_2+"у" ;
                       Pl => base_1+"ў"+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ў"+base_2+"ом" ;
                         Pl => base_1+"ў"+base_2+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN420"
  } ;

mkN421 : Str -> N ;
mkN421 base =
  case base of {
    base_1+"е"+base_2@?+"ь" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"е"+base_2+"ь" ;
                       Pl => base_1+"я"+base_2+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"я"+base_2+"я" ;
                       Pl => base_1+"я"+base_2+"ёў"
                     } ;
              Dat => table {
                       Sg => base_1+"я"+base_2+"ю" ;
                       Pl => base_1+"я"+base_2+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"я"+base_2+"я" ;
                       Pl => base_1+"я"+base_2+"ёў"
                     } ;
              Loc => table {
                       Sg => base_1+"я"+base_2+"і" ;
                       Pl => base_1+"я"+base_2+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"я"+base_2+"ём" ;
                         Pl => base_1+"я"+base_2+"ямі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN421"
  } ;

mkN422 : Str -> N ;
mkN422 base =
  case base of {
    base_1+"е"+base_2@? => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"е"+base_2 ;
                       Pl => base_1+"я"+base_2+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"я"+base_2+"а" ;
                       Pl => base_1+"я"+base_2+"оў"
                     } ;
              Dat => table {
                       Sg => base_1+"я"+base_2+"у" ;
                       Pl => base_1+"я"+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"я"+base_2+"а" ;
                       Pl => base_1+"я"+base_2+"оў"
                     } ;
              Loc => table {
                       Sg => base_1+"я"+base_2+"у" ;
                       Pl => base_1+"я"+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"я"+base_2+"ом" ;
                         Pl => base_1+"я"+base_2+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN422"
  } ;

mkN423 : Str -> N ;
mkN423 base =
  case base of {
    base_1+"ў" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ў" ;
                       Pl => base_1+"вы"
                     } ;
              Acc => table {
                       Sg => base_1+"ў" ;
                       Pl => base_1+"вы"
                     } ;
              Dat => table {
                       Sg => base_1+"ву" ;
                       Pl => base_1+"вам"
                     } ;
              Gen => table {
                       Sg => base_1+"ва" ;
                       Pl => base_1+"воў"
                     } ;
              Loc => table {
                       Sg => base_1+"ве" ;
                       Pl => base_1+"вах"
                     } ;
              Instr => table {
                         Sg => base_1+"вом" ;
                         Pl => base_1+"вамі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN423"
  } ;

mkN424 : Str -> N ;
mkN424 base =
  case base of {
    base_1+"я" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"я" ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"ю" ;
                       Pl => base_1+"і"
                     } ;
              Dat => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"яў"
                     } ;
              Loc => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"ёй" ;
                         Pl => base_1+"ямі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN424"
  } ;

mkN425 : Str -> N ;
mkN425 base =
  case base of {
    base_1+"чо"+base_2@? => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"чо"+base_2 ;
                       Pl => base_1+base_2+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"чо"+base_2 ;
                       Pl => base_1+base_2+"і"
                     } ;
              Dat => table {
                       Sg => base_1+base_2+"у" ;
                       Pl => base_1+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+base_2+"а" ;
                       Pl => base_1+base_2+"оў"
                     } ;
              Loc => table {
                       Sg => base_1+base_2+"у" ;
                       Pl => base_1+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+base_2+"ом" ;
                         Pl => base_1+base_2+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN425"
  } ;

mkN426 : Str -> N ;
mkN426 base =
  case base of {
    base_1+base_2@?+"я" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+base_2+"я" ;
                       Pl => base_1+base_2+"і"
                     } ;
              Acc => table {
                       Sg => base_1+base_2+"ю" ;
                       Pl => base_1+base_2+"ь"
                     } ;
              Dat => table {
                       Sg => base_1+base_2+"і" ;
                       Pl => base_1+base_2+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+base_2+"і" ;
                       Pl => base_1+"е"+base_2+"ь"
                     } ;
              Loc => table {
                       Sg => base_1+base_2+"і" ;
                       Pl => base_1+base_2+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+base_2+"яй" ;
                         Pl => base_1+base_2+"ямі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN426"
  } ;

mkN427 : Str -> N ;
mkN427 base =
  case base of {
    base_1+"ы" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ы" ;
                       Pl => base_1+"ыя"
                     } ;
              Acc => table {
                       Sg => base_1+"ога" ;
                       Pl => base_1+"ых"
                     } ;
              Dat => table {
                       Sg => base_1+"ому" ;
                       Pl => base_1+"ым"
                     } ;
              Gen => table {
                       Sg => base_1+"ога" ;
                       Pl => base_1+"ых"
                     } ;
              Loc => table {
                       Sg => base_1+"ым" ;
                       Pl => base_1+"ых"
                     } ;
              Instr => table {
                         Sg => base_1+"ым" ;
                         Pl => base_1+"ымі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN427"
  } ;

mkN428 : Str -> N ;
mkN428 base =
  case base of {
    base_1+"а" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"у" ;
                       Pl => base_1
                     } ;
              Dat => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"ы" ;
                       Pl => base_1
                     } ;
              Loc => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ам" ;
                         Pl => base_1+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN428"
  } ;

mkN429 : Str -> N ;
mkN429 base =
  case base of {
    base_1+"а" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"у" ;
                       Pl => base_1
                     } ;
              Dat => table {
                       Sg => base_1+"ы" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"ы" ;
                       Pl => base_1
                     } ;
              Loc => table {
                       Sg => base_1+"ы" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ай" ;
                         Pl => base_1+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN429"
  } ;

mkN430 : Str -> N ;
mkN430 base =
  case base of {
    base_1+"дзе"+base_2@? => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"дзе"+base_2 ;
                       Pl => base_1+"й"+base_2+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"й"+base_2+"а" ;
                       Pl => base_1+"й"+base_2+"оў"
                     } ;
              Dat => table {
                       Sg => base_1+"й"+base_2+"у" ;
                       Pl => base_1+"й"+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"й"+base_2+"а" ;
                       Pl => base_1+"й"+base_2+"оў"
                     } ;
              Loc => table {
                       Sg => base_1+"й"+base_2+"е" ;
                       Pl => base_1+"й"+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"й"+base_2+"ом" ;
                         Pl => base_1+"й"+base_2+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN430"
  } ;

mkN431 : Str -> N ;
mkN431 base =
  case base of {
    base_1 => lin N
      { s = table {
              Nom => table {
                       Sg => base_1 ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => base_1 ;
                       Pl => base_1+"і"
                     } ;
              Dat => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"оў"
                     } ;
              Loc => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ом" ;
                         Pl => base_1+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN431"
  } ;

mkN432 : Str -> N ;
mkN432 base =
  case base of {
    base_1+"та" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"та" ;
                       Pl => base_1+"ты"
                     } ;
              Acc => table {
                       Sg => base_1+"ту" ;
                       Pl => base_1+"таў"
                     } ;
              Dat => table {
                       Sg => base_1+"ту" ;
                       Pl => base_1+"там"
                     } ;
              Gen => table {
                       Sg => base_1+"ты" ;
                       Pl => base_1+"таў"
                     } ;
              Loc => table {
                       Sg => base_1+"це" ;
                       Pl => base_1+"тах"
                     } ;
              Instr => table {
                         Sg => base_1+"там" ;
                         Pl => base_1+"тамі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN432"
  } ;

mkN433 : Str -> N ;
mkN433 base =
  case base of {
    base_1+"ё" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ё" ;
                       Pl => base_1+"яты"
                     } ;
              Acc => table {
                       Sg => base_1+"ё" ;
                       Pl => base_1+"ят"
                     } ;
              Dat => table {
                       Sg => base_1+"яці" ;
                       Pl => base_1+"ятам"
                     } ;
              Gen => table {
                       Sg => base_1+"яці" ;
                       Pl => base_1+"ят"
                     } ;
              Loc => table {
                       Sg => base_1+"яці" ;
                       Pl => base_1+"ятах"
                     } ;
              Instr => table {
                         Sg => base_1+"ём" ;
                         Pl => base_1+"ятамі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN433"
  } ;

mkN434 : Str -> N ;
mkN434 base =
  case base of {
    base_1+"а"+base_2@?+"ь" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"а"+base_2+"ь" ;
                       Pl => base_1+base_2+"і"
                     } ;
              Acc => table {
                       Sg => base_1+base_2+"я" ;
                       Pl => base_1+base_2+"яў"
                     } ;
              Dat => table {
                       Sg => base_1+base_2+"ю" ;
                       Pl => base_1+base_2+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+base_2+"я" ;
                       Pl => base_1+base_2+"яў"
                     } ;
              Loc => table {
                       Sg => base_1+base_2+"ю" ;
                       Pl => base_1+base_2+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+base_2+"ем" ;
                         Pl => base_1+base_2+"ямі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN434"
  } ;

mkN435 : Str -> N ;
mkN435 base =
  case base of {
    base_1+"ве"+base_2@? => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ве"+base_2 ;
                       Pl => base_1+"ў"+base_2+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"ве"+base_2 ;
                       Pl => base_1+"ў"+base_2+"ы"
                     } ;
              Dat => table {
                       Sg => base_1+"ў"+base_2+"у" ;
                       Pl => base_1+"ў"+base_2+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"ў"+base_2+"а" ;
                       Pl => base_1+"ў"+base_2+"аў"
                     } ;
              Loc => table {
                       Sg => base_1+"ў"+base_2+"ы" ;
                       Pl => base_1+"ў"+base_2+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ў"+base_2+"ам" ;
                         Pl => base_1+"ў"+base_2+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN435"
  } ;

mkN436 : Str -> N ;
mkN436 base =
  case base of {
    base_1+"яя" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"яя" ;
                       Pl => base_1+"еі"
                     } ;
              Acc => table {
                       Sg => base_1+"яю" ;
                       Pl => base_1+"еі"
                     } ;
              Dat => table {
                       Sg => base_1+"яі" ;
                       Pl => base_1+"еям"
                     } ;
              Gen => table {
                       Sg => base_1+"яі" ;
                       Pl => base_1+"еяў"
                     } ;
              Loc => table {
                       Sg => base_1+"яі" ;
                       Pl => base_1+"еях"
                     } ;
              Instr => table {
                         Sg => base_1+"яёй" ;
                         Pl => base_1+"еямі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN436"
  } ;

mkN437 : Str -> N ;
mkN437 base =
  case base of {
    base_1+"а" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"ы" --guessed
                     } ;
              Acc => table {
                       Sg => base_1+"у" ;
                       Pl => base_1 --guessed
                     } ;
              Dat => table {
                       Sg => base_1+"е" ;
                       Pl => base_1+"ам" --guessed
                     } ;
              Gen => table {
                       Sg => base_1+"ы" ;
                       Pl => base_1 --guessed
                     } ;
              Loc => table {
                       Sg => base_1+"е" ;
                       Pl => base_1+"ах" --guessed
                     } ;
              Instr => table {
                         Sg => base_1+"ай" ;
                         Pl => base_1+"амі" --guessed
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN437"
  } ;

mkN438 : Str -> N ;
mkN438 base =
  case base of {
    base_1+"та" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"та" ;
                       Pl => base_1+"ты"
                     } ;
              Acc => table {
                       Sg => base_1+"та" ;
                       Pl => base_1+"ты"
                     } ;
              Dat => table {
                       Sg => base_1+"ту" ;
                       Pl => base_1+"там"
                     } ;
              Gen => table {
                       Sg => base_1+"та" ;
                       Pl => base_1+"таў"
                     } ;
              Loc => table {
                       Sg => base_1+"це" ;
                       Pl => base_1+"тах"
                     } ;
              Instr => table {
                         Sg => base_1+"там" ;
                         Pl => base_1+"тамі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN438"
  } ;

mkN439 : Str -> N ;
mkN439 base =
  case base of {
    base_1+"та" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"та" ;
                       Pl => base_1+"ты"
                     } ;
              Acc => table {
                       Sg => base_1+"ту" ;
                       Pl => base_1+"т"
                     } ;
              Dat => table {
                       Sg => base_1+"це" ;
                       Pl => base_1+"там"
                     } ;
              Gen => table {
                       Sg => base_1+"ту" ;
                       Pl => base_1+"т"
                     } ;
              Loc => table {
                       Sg => base_1+"це" ;
                       Pl => base_1+"тах"
                     } ;
              Instr => table {
                         Sg => base_1+"тай" ;
                         Pl => base_1+"тамі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN439"
  } ;

mkN440 : Str -> N ;
mkN440 base =
  case base of {
    base_1+"ка" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ка" ;
                       Pl => base_1+"кі"
                     } ;
              Acc => table {
                       Sg => base_1+"ку" ;
                       Pl => base_1+"кі"
                     } ;
              Dat => table {
                       Sg => base_1+"цы" ;
                       Pl => base_1+"кам"
                     } ;
              Gen => table {
                       Sg => base_1+"кі" ;
                       Pl => base_1+"каў"
                     } ;
              Loc => table {
                       Sg => base_1+"цы" ;
                       Pl => base_1+"ках"
                     } ;
              Instr => table {
                         Sg => base_1+"кай" ;
                         Pl => base_1+"камі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN440"
  } ;

mkN441 : Str -> N ;
mkN441 base =
  case base of {
    base_1+"і" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => nonExist ;
                       Pl => base_1+"і"
                     } ;
              Dat => table {
                       Sg => nonExist ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"аў" ;
                       Pl => base_1+"аў"
                     } ;
              Loc => table {
                       Sg => nonExist ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => nonExist ;
                         Pl => base_1+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN441"
  } ;

mkN442 : Str -> N ;
mkN442 base =
  case base of {
    base_1+"а"+base_2@(?+?)+"ё" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"а"+base_2+"ё" ;
                       Pl => base_1+"о"+base_2+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"а"+base_2+"ё" ;
                       Pl => base_1+"о"+base_2+"і"
                     } ;
              Dat => table {
                       Sg => base_1+"а"+base_2+"ю" ;
                       Pl => base_1+"о"+base_2+"ям"
                     } ;
              Gen => table {
                       Sg => base_1+"а"+base_2+"я" ;
                       Pl => base_1+"о"+base_2+"яў"
                     } ;
              Loc => table {
                       Sg => base_1+"а"+base_2+"і" ;
                       Pl => base_1+"о"+base_2+"ях"
                     } ;
              Instr => table {
                         Sg => base_1+"а"+base_2+"ём" ;
                         Pl => base_1+"о"+base_2+"ямі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN442"
  } ;

mkN443 : Str -> N ;
mkN443 base =
  case base of {
    base_1+"а" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"ы" --guessed
                     } ;
              Acc => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"ы" --guessed
                     } ;
              Dat => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"ам" --guessed
                     } ;
              Gen => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"аў" --guessed
                     } ;
              Loc => table {
                       Sg => base_1+"е" ;
                       Pl => base_1+"ах" --guessed
                     } ;
              Instr => table {
                         Sg => base_1+"ам" ;
                         Pl => base_1+"амі" --guessed
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN443"
  } ;

mkN444 : Str -> N ;
mkN444 base =
  case base of {
    base_1+"ы" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ы" ;
                       Pl => base_1+"ы"
                     } ;
              Acc => table {
                       Sg => nonExist ;
                       Pl => base_1
                     } ;
              Dat => table {
                       Sg => nonExist ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1 ;
                       Pl => base_1
                     } ;
              Loc => table {
                       Sg => nonExist ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => nonExist ;
                         Pl => base_1+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN444"
  } ;

mkN445 : Str -> N ;
mkN445 base =
  case base of {
    base_1+"а" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"ы"
                     } ;
              Dat => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"ы" ;
                       Pl => base_1
                     } ;
              Loc => table {
                       Sg => base_1+"ы" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ам" ;
                         Pl => base_1+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN445"
  } ;

mkN446 : Str -> N ;
mkN446 base =
  case base of {
    base_1+"а" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"ы"
                     } ;
              Acc => table {
                       Sg => base_1+"а" ;
                       Pl => base_1
                     } ;
              Dat => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"а" ;
                       Pl => base_1
                     } ;
              Loc => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ам" ;
                         Pl => base_1+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Neuter
      };
    _ => error "Can't apply paradigm mkN446"
  } ;

mkN447 : Str -> N ;
mkN447 base =
  case base of {
    base_1+"ы" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"ы" ;
                       Pl => base_1+"ы"
                     } ;
              Acc => table {
                       Sg => nonExist ;
                       Pl => base_1+"ы"
                     } ;
              Dat => table {
                       Sg => nonExist ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"аў" ;
                       Pl => base_1+"аў"
                     } ;
              Loc => table {
                       Sg => nonExist ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => nonExist ;
                         Pl => base_1+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Fem
      };
    _ => error "Can't apply paradigm mkN447"
  } ;

mkN448 : Str -> N ;
mkN448 base =
  case base of {
    base_1+"а" => lin N
      { s = table {
              Nom => table {
                       Sg => base_1+"а" ;
                       Pl => base_1+"і"
                     } ;
              Acc => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"і"
                     } ;
              Dat => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"ам"
                     } ;
              Gen => table {
                       Sg => base_1+"і" ;
                       Pl => base_1
                     } ;
              Loc => table {
                       Sg => base_1+"у" ;
                       Pl => base_1+"ах"
                     } ;
              Instr => table {
                         Sg => base_1+"ам" ;
                         Pl => base_1+"амі"
                       }
            } ;
        Voc = table {
                Sg => nonExist ;
                Pl => nonExist
              } ;
        g = Masc
      };
    _ => error "Can't apply paradigm mkN448"
  } ;

mkV001 : Str -> V ;
mkV001 base =
  case base of {
    base_1+"віць" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"віць" ;
                                                Pl => nonExist
                                              } ;
                                        P2 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              } ;
                                        P3 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"віць" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => base_1+"ві" ;
                       Pl => base_1+"віце"
                     } ;
        infinitive = base_1+"віць" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"віў" ;
                                 Pl => base_1+"вілі"
                               } ;
                       Fem => table {
                                Sg => base_1+"віла" ;
                                Pl => base_1+"вілі"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"віла" ;
                                   Pl => base_1+"вілі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"ўлены"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV001"
  } ;

mkV002 : Str -> V ;
mkV002 base =
  case base of {
    "брак" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => "brak" ;
                                                Pl => nonExist
                                              } ;
                                        P2 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              } ;
                                        P3 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => nonExist ;
                       Pl => nonExist
                     } ;
        infinitive = "брак" ;
        participle = table {
                       Masc => table {
                                 Sg => nonExist ;
                                 Pl => nonExist
                               } ;
                       Fem => table {
                                Sg => nonExist ;
                                Pl => nonExist
                              } ;
                       Neuter => table {
                                   Sg => nonExist ;
                                   Pl => nonExist
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV002"
  } ;

mkV003 : Str -> V ;
mkV003 base =
  case base of {
    base_1+"е"+base_2@("рк"|?)+"аваць" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"е"+base_2+"аваць" ;
                                                Pl => base_1+"я"+base_2+"уем"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"я"+base_2+"уеш" ;
                                                Pl => base_1+"я"+base_2+"уеце"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"я"+base_2+"уе" ;
                                                Pl => base_1+"я"+base_2+"уюць"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"е"+base_2+"аваць" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => base_1+"я"+base_2+"уй" ;
                       Pl => base_1+"я"+base_2+"уйце"
                     } ;
        infinitive = base_1+"е"+base_2+"аваць" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"е"+base_2+"аваў" ;
                                 Pl => base_1+"е"+base_2+"авалі"
                               } ;
                       Fem => table {
                                Sg => base_1+"е"+base_2+"авала" ;
                                Pl => base_1+"е"+base_2+"авалі"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"е"+base_2+"авала" ;
                                   Pl => base_1+"е"+base_2+"авалі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"е"+base_2+"аваны"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV003"
  } ;

mkV004 : Str -> V ;
mkV004 base =
  case base of {
    "быць" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => "bycʹ" ;
                                                Pl => nonExist
                                              } ;
                                        P2 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              } ;
                                        P3 => table {
                                                Sg => "ёсць" ;
                                                Pl => nonExist
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => "будзь" ;
                       Pl => "будзьце"
                     } ;
        infinitive = "быць" ;
        participle = table {
                       Masc => table {
                                 Sg => "быў" ;
                                 Pl => "былі"
                               } ;
                       Fem => table {
                                Sg => "была" ;
                                Pl => "былі"
                              } ;
                       Neuter => table {
                                   Sg => "было" ;
                                   Pl => "былі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV004"
  } ;

mkV005 : Str -> V ;
mkV005 base =
  case base of {
    "есьці" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => "есьці" ;
                                                Pl => "ядзім"
                                              } ;
                                        P2 => table {
                                                Sg => "ясі" ;
                                                Pl => "ясце"
                                              } ;
                                        P3 => table {
                                                Sg => "есць" ;
                                                Pl => "ядуць"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => "еш" ;
                       Pl => "ешце"
                     } ;
        infinitive = "есьці" ;
        participle = table {
                       Masc => table {
                                 Sg => "еў" ;
                                 Pl => "елі"
                               } ;
                       Fem => table {
                                Sg => "ела" ;
                                Pl => "елі"
                              } ;
                       Neuter => table {
                                   Sg => "ела" ;
                                   Pl => "елі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV005"
  } ;

mkV006 : Str -> V ;
mkV006 base =
  case base of {
    "піць" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => "picʹ" ;
                                                Pl => "п'ём"
                                              } ;
                                        P2 => table {
                                                Sg => "п'еш" ;
                                                Pl => "п'яце"
                                              } ;
                                        P3 => table {
                                                Sg => "п'е" ;
                                                Pl => "п'юць"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => "пі" ;
                       Pl => "піце"
                     } ;
        infinitive = "піць" ;
        participle = table {
                       Masc => table {
                                 Sg => "піў" ;
                                 Pl => "пілі"
                               } ;
                       Fem => table {
                                Sg => "піла" ;
                                Pl => "пілі"
                              } ;
                       Neuter => table {
                                   Sg => "піло" ;
                                   Pl => "пілі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => "піты"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV006"
  } ;

mkV007 : Str -> V ;
mkV007 base =
  case base of {
    "спаць" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => "spacʹ" ;
                                                Pl => "спім"
                                              } ;
                                        P2 => table {
                                                Sg => "спіш" ;
                                                Pl => "спіце"
                                              } ;
                                        P3 => table {
                                                Sg => "спіць" ;
                                                Pl => "спяць"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => "спі" ;
                       Pl => "спіце"
                     } ;
        infinitive = "спаць" ;
        participle = table {
                       Masc => table {
                                 Sg => "спаў" ;
                                 Pl => "спалі"
                               } ;
                       Fem => table {
                                Sg => "спала" ;
                                Pl => "спалі"
                              } ;
                       Neuter => table {
                                   Sg => "спала" ;
                                   Pl => "спалі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV007"
  } ;

mkV008 : Str -> V ;
mkV008 base =
  case base of {
    "жыць" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => "žycʹ" ;
                                                Pl => "жывём"
                                              } ;
                                        P2 => table {
                                                Sg => "жывеш" ;
                                                Pl => "жывяце"
                                              } ;
                                        P3 => table {
                                                Sg => "жыве" ;
                                                Pl => "жывуць"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => "жыві" ;
                       Pl => "жывіце"
                     } ;
        infinitive = "жыць" ;
        participle = table {
                       Masc => table {
                                 Sg => "жыў" ;
                                 Pl => "жылі"
                               } ;
                       Fem => table {
                                Sg => "жыла" ;
                                Pl => "жылі"
                              } ;
                       Neuter => table {
                                   Sg => "жыло" ;
                                   Pl => "жылі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV008"
  } ;

mkV009 : Str -> V ;
mkV009 base =
  case base of {
    base_1+"ацець" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"ацець" ;
                                                Pl => base_1+"очам"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"очаш" ;
                                                Pl => base_1+"очаце"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"оча" ;
                                                Pl => base_1+"очуць"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => base_1+"аці" ;
                       Pl => base_1+"аціце"
                     } ;
        infinitive = base_1+"ацець" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"ацеў" ;
                                 Pl => base_1+"ацелі"
                               } ;
                       Fem => table {
                                Sg => base_1+"ацела" ;
                                Pl => base_1+"ацелі"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"ацела" ;
                                   Pl => base_1+"ацелі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV009"
  } ;

mkV010 : Str -> V ;
mkV010 base =
  case base of {
    "знаць" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => "znacʹ" ;
                                                Pl => "знаем"
                                              } ;
                                        P2 => table {
                                                Sg => "знаеш" ;
                                                Pl => "знаеце"
                                              } ;
                                        P3 => table {
                                                Sg => "знае" ;
                                                Pl => "знаюць"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => "знай" ;
                       Pl => "знайце"
                     } ;
        infinitive = "знаць" ;
        participle = table {
                       Masc => table {
                                 Sg => "знаў" ;
                                 Pl => "зналі"
                               } ;
                       Fem => table {
                                Sg => "знала" ;
                                Pl => "зналі"
                              } ;
                       Neuter => table {
                                   Sg => "знала" ;
                                   Pl => "зналі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV010"
  } ;

mkV011 : Str -> V ;
mkV011 base =
  case base of {
    base_1+"іць" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"іць" ;
                                                Pl => base_1+"ім"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"іш" ;
                                                Pl => base_1+"іце"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"іць" ;
                                                Pl => base_1+"яць"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"іць" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"іце"
                     } ;
        infinitive = base_1+"іць" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"іў" ;
                                 Pl => base_1+"ілі"
                               } ;
                       Fem => table {
                                Sg => base_1+"іла" ;
                                Pl => base_1+"ілі"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"іла" ;
                                   Pl => base_1+"ілі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => base_1+"ены"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"ены"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV011"
  } ;

mkV012 : Str -> V ;
mkV012 base =
  case base of {
    "есці" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => "есці" ;
                                                Pl => "ядзім"
                                              } ;
                                        P2 => table {
                                                Sg => "ясі" ;
                                                Pl => "ясце"
                                              } ;
                                        P3 => table {
                                                Sg => "есць" ;
                                                Pl => "ядуць"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => "еш" ;
                       Pl => "ешце"
                     } ;
        infinitive = "есці" ;
        participle = table {
                       Masc => table {
                                 Sg => "еў" ;
                                 Pl => "елі"
                               } ;
                       Fem => table {
                                Sg => "ела" ;
                                Pl => "елі"
                              } ;
                       Neuter => table {
                                   Sg => "ела" ;
                                   Pl => "елі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV012"
  } ;

mkV013 : Str -> V ;
mkV013 base =
  case base of {
    base_1 => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1 ;
                                                Pl => nonExist
                                              } ;
                                        P2 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              } ;
                                        P3 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => nonExist ;
                       Pl => nonExist
                     } ;
        infinitive = base_1 ;
        participle = table {
                       Masc => table {
                                 Sg => nonExist ;
                                 Pl => nonExist
                               } ;
                       Fem => table {
                                Sg => nonExist ;
                                Pl => nonExist
                              } ;
                       Neuter => table {
                                   Sg => nonExist ;
                                   Pl => nonExist
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV013"
  } ;

mkV014 : Str -> V ;
mkV014 base =
  case base of {
    base_1+"няць" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"няць" ;
                                                Pl => nonExist
                                              } ;
                                        P2 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              } ;
                                        P3 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"няць" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => base_1+"мі" ;
                       Pl => base_1+"міце"
                     } ;
        infinitive = base_1+"няць" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"няў" ;
                                 Pl => base_1+"нялі"
                               } ;
                       Fem => table {
                                Sg => base_1+"няла" ;
                                Pl => base_1+"нялі"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"няло" ;
                                   Pl => base_1+"нялі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"няты"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV014"
  } ;

mkV015 : Str -> V ;
mkV015 base =
  case base of {
    base_1+"ць" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"ць" ;
                                                Pl => base_1+"ем"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"еш" ;
                                                Pl => base_1+"еце"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"е" ;
                                                Pl => base_1+"юць"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"ць" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => base_1+"й" ;
                       Pl => base_1+"йце"
                     } ;
        infinitive = base_1+"ць" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"ў" ;
                                 Pl => base_1+"лі"
                               } ;
                       Fem => table {
                                Sg => base_1+"ла" ;
                                Pl => base_1+"лі"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"ла" ;
                                   Pl => base_1+"лі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => base_1+"ны"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"ны"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV015"
  } ;

mkV016 : Str -> V ;
mkV016 base =
  case base of {
    base_1+"сці" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"сці" ;
                                                Pl => base_1+"дзём"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"дзеш" ;
                                                Pl => base_1+"дзяце"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"дзе" ;
                                                Pl => base_1+"дуць"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"сці" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => base_1+"дзі" ;
                       Pl => base_1+"дзіце"
                     } ;
        infinitive = base_1+"сці" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"шоў" ;
                                 Pl => base_1+"шлі"
                               } ;
                       Fem => table {
                                Sg => base_1+"шла" ;
                                Pl => base_1+"шлі"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"шло" ;
                                   Pl => base_1+"шлі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV016"
  } ;

mkV017 : Str -> V ;
mkV017 base =
  case base of {
    base_1+"а"+base_2@("дз"|?)+"іць" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"а"+base_2+"іць" ;
                                                Pl => base_1+"о"+base_2+"ім"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"о"+base_2+"іш" ;
                                                Pl => base_1+"о"+base_2+"іце"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"о"+base_2+"іць" ;
                                                Pl => base_1+"о"+base_2+"яць"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"а"+base_2+"іць" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => base_1+"а"+base_2+"і" ;
                       Pl => base_1+"а"+base_2+"іце"
                     } ;
        infinitive = base_1+"а"+base_2+"іць" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"а"+base_2+"іў" ;
                                 Pl => base_1+"а"+base_2+"ілі"
                               } ;
                       Fem => table {
                                Sg => base_1+"а"+base_2+"іла" ;
                                Pl => base_1+"а"+base_2+"ілі"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"а"+base_2+"іла" ;
                                   Pl => base_1+"а"+base_2+"ілі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => base_1+"о"+base_2+"лены"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"о"+base_2+"лены"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV017"
  } ;

mkV018 : Str -> V ;
mkV018 base =
  case base of {
    base_1+"хаць" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"хаць" ;
                                                Pl => base_1+"дзем"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"дзеш" ;
                                                Pl => base_1+"дзеце"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"дзе" ;
                                                Pl => base_1+"дуць"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"хаць" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => base_1+"дзь" ;
                       Pl => base_1+"дзьце"
                     } ;
        infinitive = base_1+"хаць" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"хаў" ;
                                 Pl => base_1+"халі"
                               } ;
                       Fem => table {
                                Sg => base_1+"хала" ;
                                Pl => base_1+"халі"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"хала" ;
                                   Pl => base_1+"халі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV018"
  } ;

mkV019 : Str -> V ;
mkV019 base =
  case base of {
    base_1+"а"+base_2@?+"ыць" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"а"+base_2+"ыць" ;
                                                Pl => base_1+"о"+base_2+"ым"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"о"+base_2+"ыш" ;
                                                Pl => base_1+"о"+base_2+"ыце"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"о"+base_2+"ыць" ;
                                                Pl => base_1+"о"+base_2+"аць"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => base_1+"а"+base_2+"ы" ;
                       Pl => base_1+"а"+base_2+"ыце"
                     } ;
        infinitive = base_1+"а"+base_2+"ыць" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"а"+base_2+"ыў" ;
                                 Pl => base_1+"а"+base_2+"ылі"
                               } ;
                       Fem => table {
                                Sg => base_1+"а"+base_2+"ыла" ;
                                Pl => base_1+"а"+base_2+"ылі"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"а"+base_2+"ыла" ;
                                   Pl => base_1+"а"+base_2+"ылі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => base_1+"о"+base_2+"аны"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV019"
  } ;

mkV020 : Str -> V ;
mkV020 base =
  case base of {
    base_1+"ыць" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"ыць" ;
                                                Pl => base_1+"ым"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"ыш" ;
                                                Pl => base_1+"ыце"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"ыць" ;
                                                Pl => base_1+"аць"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"ыць" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => base_1 ;
                       Pl => base_1+"це"
                     } ;
        infinitive = base_1+"ыць" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"ыў" ;
                                 Pl => base_1+"ылі"
                               } ;
                       Fem => table {
                                Sg => base_1+"ыла" ;
                                Pl => base_1+"ылі"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"ыла" ;
                                   Pl => base_1+"ылі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => base_1+"аны"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"аны"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV020"
  } ;

mkV021 : Str -> V ;
mkV021 base =
  case base of {
    base_1+"агчы" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"агчы" ;
                                                Pl => base_1+"ожам"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"ожаш" ;
                                                Pl => base_1+"ожаце"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"ожа" ;
                                                Pl => base_1+"огуць"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"агчы" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => base_1+"ажы" ;
                       Pl => base_1+"ажыце"
                     } ;
        infinitive = base_1+"агчы" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"ог" ;
                                 Pl => base_1+"аглі"
                               } ;
                       Fem => table {
                                Sg => base_1+"агла" ;
                                Pl => base_1+"аглі"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"агло" ;
                                   Pl => base_1+"аглі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV021"
  } ;

mkV022 : Str -> V ;
mkV022 base =
  case base of {
    base_1+"ваць" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"ваць" ;
                                                Pl => base_1+"ём"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"еш" ;
                                                Pl => base_1+"яце"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"е" ;
                                                Pl => base_1+"юць"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => base_1+"вай" ;
                       Pl => base_1+"вайце"
                     } ;
        infinitive = base_1+"ваць" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"ваў" ;
                                 Pl => base_1+"валі"
                               } ;
                       Fem => table {
                                Sg => base_1+"вала" ;
                                Pl => base_1+"валі"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"вала" ;
                                   Pl => base_1+"валі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV022"
  } ;

mkV023 : Str -> V ;
mkV023 base =
  case base of {
    "чуць" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => "čucʹ" ;
                                                Pl => "чуем"
                                              } ;
                                        P2 => table {
                                                Sg => "чуеш" ;
                                                Pl => "чуеце"
                                              } ;
                                        P3 => table {
                                                Sg => "чуе" ;
                                                Pl => "чуюць"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => "чуй" ;
                       Pl => "чуйце"
                     } ;
        infinitive = "чуць" ;
        participle = table {
                       Masc => table {
                                 Sg => "чуў" ;
                                 Pl => "чулі"
                               } ;
                       Fem => table {
                                Sg => "чула" ;
                                Pl => "чулі"
                              } ;
                       Neuter => table {
                                   Sg => "чула" ;
                                   Pl => "чулі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => "чуты"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV023"
  } ;

mkV024 : Str -> V ;
mkV024 base =
  case base of {
    "стаць" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => "stacʹ" ;
                                                Pl => nonExist
                                              } ;
                                        P2 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              } ;
                                        P3 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => "стаць" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => "стань" ;
                       Pl => "станьце"
                     } ;
        infinitive = "стаць" ;
        participle = table {
                       Masc => table {
                                 Sg => "стаў" ;
                                 Pl => "сталі"
                               } ;
                       Fem => table {
                                Sg => "стала" ;
                                Pl => "сталі"
                              } ;
                       Neuter => table {
                                   Sg => "стала" ;
                                   Pl => "сталі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV024"
  } ;

mkV025 : Str -> V ;
mkV025 base =
  case base of {
    base_1+"аяць" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"аяць" ;
                                                Pl => base_1+"аім"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"аіш" ;
                                                Pl => base_1+"аіце"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"аіць" ;
                                                Pl => base_1+"аяць"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"аяць" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => base_1+"ой" ;
                       Pl => base_1+"ойце"
                     } ;
        infinitive = base_1+"аяць" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"аяў" ;
                                 Pl => base_1+"аялі"
                               } ;
                       Fem => table {
                                Sg => base_1+"аяла" ;
                                Pl => base_1+"аялі"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"аяла" ;
                                   Pl => base_1+"аялі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV025"
  } ;

mkV026 : Str -> V ;
mkV026 base =
  case base of {
    base_1+"а"+base_2@?+"іцца" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"а"+base_2+"іцца" ;
                                                Pl => base_1+"о"+base_2+"імся"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"о"+base_2+"ішся" ;
                                                Pl => base_1+"о"+base_2+"іцеся"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"о"+base_2+"іцца" ;
                                                Pl => base_1+"о"+base_2+"яцца"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => base_1+"а"+base_2+"іся" ;
                       Pl => base_1+"а"+base_2+"іцеся"
                     } ;
        infinitive = base_1+"а"+base_2+"іцца" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"а"+base_2+"іўся" ;
                                 Pl => base_1+"а"+base_2+"іліся"
                               } ;
                       Fem => table {
                                Sg => base_1+"а"+base_2+"ілася" ;
                                Pl => base_1+"а"+base_2+"іліся"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"а"+base_2+"ілася" ;
                                   Pl => base_1+"а"+base_2+"іліся"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV026"
  } ;

mkV027 : Str -> V ;
mkV027 base =
  case base of {
    "мыць" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => "mycʹ" ;
                                                Pl => "мыем"
                                              } ;
                                        P2 => table {
                                                Sg => "мыеш" ;
                                                Pl => "мыеце"
                                              } ;
                                        P3 => table {
                                                Sg => "мые" ;
                                                Pl => "мыюць"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => "мый" ;
                       Pl => "мыйце"
                     } ;
        infinitive = "мыць" ;
        participle = table {
                       Masc => table {
                                 Sg => "мыў" ;
                                 Pl => "мылі"
                               } ;
                       Fem => table {
                                Sg => "мыла" ;
                                Pl => "мылі"
                              } ;
                       Neuter => table {
                                   Sg => "мыла" ;
                                   Pl => "мылі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => "мыты"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV027"
  } ;

mkV028 : Str -> V ;
mkV028 base =
  case base of {
    base_1+"саць" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"саць" ;
                                                Pl => base_1+"шам"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"шаш" ;
                                                Pl => base_1+"шаце"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"ша" ;
                                                Pl => base_1+"шуць"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"саць" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => base_1+"шы" ;
                       Pl => base_1+"шыце"
                     } ;
        infinitive = base_1+"саць" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"саў" ;
                                 Pl => base_1+"салі"
                               } ;
                       Fem => table {
                                Sg => base_1+"сала" ;
                                Pl => base_1+"салі"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"сала" ;
                                   Pl => base_1+"салі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => base_1+"саны"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"саны"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV028"
  } ;

mkV029 : Str -> V ;
mkV029 base =
  case base of {
    base_1+"аваць" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"аваць" ;
                                                Pl => base_1+"уем"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"уеш" ;
                                                Pl => base_1+"уеце"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"уе" ;
                                                Pl => base_1+"уюць"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"аваць" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => base_1+"уй" ;
                       Pl => base_1+"уйце"
                     } ;
        infinitive = base_1+"аваць" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"аваў" ;
                                 Pl => base_1+"авалі"
                               } ;
                       Fem => table {
                                Sg => base_1+"авала" ;
                                Pl => base_1+"авалі"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"авала" ;
                                   Pl => base_1+"авалі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => base_1+"аваны"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"аваны"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV029"
  } ;

mkV030 : Str -> V ;
mkV030 base =
  case base of {
    base_1+"вацца" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"вацца" ;
                                                Pl => base_1+"ёмся"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"ешся" ;
                                                Pl => base_1+"яцеся"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"ецца" ;
                                                Pl => base_1+"юцца"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => base_1+"вайся" ;
                       Pl => base_1+"вайцеся"
                     } ;
        infinitive = base_1+"вацца" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"ваўся" ;
                                 Pl => base_1+"валіся"
                               } ;
                       Fem => table {
                                Sg => base_1+"валася" ;
                                Pl => base_1+"валіся"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"валася" ;
                                   Pl => base_1+"валіся"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV030"
  } ;

mkV031 : Str -> V ;
mkV031 base =
  case base of {
    base_1+"а"+base_2@?+"ыць" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"а"+base_2+"ыць" ;
                                                Pl => base_1+"о"+base_2+"ым"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"о"+base_2+"ыш" ;
                                                Pl => base_1+"о"+base_2+"ыце"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"о"+base_2+"ыць" ;
                                                Pl => base_1+"о"+base_2+"аць"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => base_1+"а"+base_2+"ы" ;
                       Pl => base_1+"а"+base_2+"ыце"
                     } ;
        infinitive = base_1+"а"+base_2+"ыць" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"а"+base_2+"ыў" ;
                                 Pl => base_1+"а"+base_2+"ылі"
                               } ;
                       Fem => table {
                                Sg => base_1+"а"+base_2+"ыла" ;
                                Pl => base_1+"а"+base_2+"ылі"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"а"+base_2+"ыла" ;
                                   Pl => base_1+"а"+base_2+"ылі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => base_1+"а"+base_2+"оны"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV031"
  } ;

mkV032 : Str -> V ;
mkV032 base =
  case base of {
    "праць" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => "pracʹ" ;
                                                Pl => "пяром"
                                              } ;
                                        P2 => table {
                                                Sg => "пярэш" ;
                                                Pl => "пераце"
                                              } ;
                                        P3 => table {
                                                Sg => "пярэ" ;
                                                Pl => "пяруць"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => "пяры" ;
                       Pl => "пярыце"
                     } ;
        infinitive = "праць" ;
        participle = table {
                       Masc => table {
                                 Sg => "праў" ;
                                 Pl => "пралі"
                               } ;
                       Fem => table {
                                Sg => "прала" ;
                                Pl => "пралі"
                              } ;
                       Neuter => table {
                                   Sg => "прала" ;
                                   Pl => "пралі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV032"
  } ;

mkV033 : Str -> V ;
mkV033 base =
  case base of {
    base_1+"ціць" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"ціць" ;
                                                Pl => base_1+"цім"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"ціш" ;
                                                Pl => base_1+"ціце"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"ціць" ;
                                                Pl => base_1+"цяць"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"ціць" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => base_1+"ці" ;
                       Pl => base_1+"ціце"
                     } ;
        infinitive = base_1+"ціць" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"ціў" ;
                                 Pl => base_1+"цілі"
                               } ;
                       Fem => table {
                                Sg => base_1+"ціла" ;
                                Pl => base_1+"цілі"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"ціла" ;
                                   Pl => base_1+"цілі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => base_1+"чаны"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"чаны"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV033"
  } ;

mkV034 : Str -> V ;
mkV034 base =
  case base of {
    base_1+"каць" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"каць" ;
                                                Pl => base_1+"чам"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"чаш" ;
                                                Pl => base_1+"чаце"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"ча" ;
                                                Pl => base_1+"чуць"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => base_1+"ч" ;
                       Pl => base_1+"чце"
                     } ;
        infinitive = base_1+"каць" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"каў" ;
                                 Pl => base_1+"калі"
                               } ;
                       Fem => table {
                                Sg => base_1+"кала" ;
                                Pl => base_1+"калі"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"кала" ;
                                   Pl => base_1+"калі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => base_1+"каны"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV034"
  } ;

mkV035 : Str -> V ;
mkV035 base =
  case base of {
    base_1+"заць" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"заць" ;
                                                Pl => base_1+"жам"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"жаш" ;
                                                Pl => base_1+"жаце"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"жа" ;
                                                Pl => base_1+"жуць"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => base_1+"ж" ;
                       Pl => base_1+"жце"
                     } ;
        infinitive = base_1+"заць" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"заў" ;
                                 Pl => base_1+"залі"
                               } ;
                       Fem => table {
                                Sg => base_1+"зала" ;
                                Pl => base_1+"залі"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"зала" ;
                                   Pl => base_1+"залі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => base_1+"заны"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV035"
  } ;

mkV036 : Str -> V ;
mkV036 base =
  case base of {
    base_1+"іць" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"іць" ;
                                                Pl => base_1+"ім"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"іш" ;
                                                Pl => base_1+"іце"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"іць" ;
                                                Pl => base_1+"яць"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"іць" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => base_1+"ь" ;
                       Pl => base_1+"ьце"
                     } ;
        infinitive = base_1+"іць" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"іў" ;
                                 Pl => base_1+"ілі"
                               } ;
                       Fem => table {
                                Sg => base_1+"іла" ;
                                Pl => base_1+"ілі"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"іла" ;
                                   Pl => base_1+"ілі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"ены"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV036"
  } ;

mkV037 : Str -> V ;
mkV037 base =
  case base of {
    base_1+"уць" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"уць" ;
                                                Pl => nonExist
                                              } ;
                                        P2 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              } ;
                                        P3 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"уць" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => base_1+"ь" ;
                       Pl => base_1+"ьце"
                     } ;
        infinitive = base_1+"уць" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"уў" ;
                                 Pl => base_1+"улі"
                               } ;
                       Fem => table {
                                Sg => base_1+"ула" ;
                                Pl => base_1+"улі"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"ула" ;
                                   Pl => base_1+"улі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"уты"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV037"
  } ;

mkV038 : Str -> V ;
mkV038 base =
  case base of {
    base_1+"аць" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"аць" ;
                                                Pl => nonExist
                                              } ;
                                        P2 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              } ;
                                        P3 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"аць" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => base_1+"ні" ;
                       Pl => base_1+"ніце"
                     } ;
        infinitive = base_1+"аць" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"аў" ;
                                 Pl => base_1+"алі"
                               } ;
                       Fem => table {
                                Sg => base_1+"ала" ;
                                Pl => base_1+"алі"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"ало" ;
                                   Pl => base_1+"алі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"аты"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV038"
  } ;

mkV039 : Str -> V ;
mkV039 base =
  case base of {
    base_1+"аць" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"аць" ;
                                                Pl => base_1+"ём"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"еш" ;
                                                Pl => base_1+"яце"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"е" ;
                                                Pl => base_1+"уць"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"аць" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"іце"
                     } ;
        infinitive = base_1+"аць" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"аў" ;
                                 Pl => base_1+"алі"
                               } ;
                       Fem => table {
                                Sg => base_1+"ала" ;
                                Pl => base_1+"алі"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"ала" ;
                                   Pl => base_1+"алі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => base_1+"аны"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"ланы"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV039"
  } ;

mkV040 : Str -> V ;
mkV040 base =
  case base of {
    base_1+"а"+base_2@?+"аць" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"а"+base_2+"аць" ;
                                                Pl => base_1+"о"+base_2+"ім"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"о"+base_2+"іш" ;
                                                Pl => base_1+"о"+base_2+"іце"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"о"+base_2+"іць" ;
                                                Pl => base_1+"о"+base_2+"яць"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => base_1+"а"+base_2+"і" ;
                       Pl => base_1+"а"+base_2+"іце"
                     } ;
        infinitive = base_1+"а"+base_2+"аць" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"а"+base_2+"аў" ;
                                 Pl => base_1+"а"+base_2+"алі"
                               } ;
                       Fem => table {
                                Sg => base_1+"а"+base_2+"ала" ;
                                Pl => base_1+"а"+base_2+"алі"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"а"+base_2+"ала" ;
                                   Pl => base_1+"а"+base_2+"алі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV040"
  } ;

mkV041 : Str -> V ;
mkV041 base =
  case base of {
    "у"+base_1+"яць" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => "у"+base_1+"яць" ;
                                                Pl => nonExist
                                              } ;
                                        P2 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              } ;
                                        P3 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => "у"+base_1+"яць" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => "ва"+base_1+"ьмі" ;
                       Pl => "ва"+base_1+"ьміце"
                     } ;
        infinitive = "у"+base_1+"яць" ;
        participle = table {
                       Masc => table {
                                 Sg => "у"+base_1+"яў" ;
                                 Pl => "у"+base_1+"ялі"
                               } ;
                       Fem => table {
                                Sg => "у"+base_1+"яла" ;
                                Pl => "у"+base_1+"ялі"
                              } ;
                       Neuter => table {
                                   Sg => "у"+base_1+"яло" ;
                                   Pl => "у"+base_1+"ялі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => "у"+base_1+"яты"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV041"
  } ;

mkV042 : Str -> V ;
mkV042 base =
  case base of {
    "браць" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => "bracʹ" ;
                                                Pl => "бяром"
                                              } ;
                                        P2 => table {
                                                Sg => "бярэш" ;
                                                Pl => "бераце"
                                              } ;
                                        P3 => table {
                                                Sg => "бярэ" ;
                                                Pl => "бяруць"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => "бяры" ;
                       Pl => "бярыце"
                     } ;
        infinitive = "браць" ;
        participle = table {
                       Masc => table {
                                 Sg => "браў" ;
                                 Pl => "бралі"
                               } ;
                       Fem => table {
                                Sg => "брала" ;
                                Pl => "бралі"
                              } ;
                       Neuter => table {
                                   Sg => "брала" ;
                                   Pl => "бралі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV042"
  } ;

mkV043 : Str -> V ;
mkV043 base =
  case base of {
    base_1+"цца" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"цца" ;
                                                Pl => base_1+"емся"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"ешся" ;
                                                Pl => base_1+"ецеся"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"ецца" ;
                                                Pl => base_1+"юцца"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"цца" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => base_1+"йся" ;
                       Pl => base_1+"йцеся"
                     } ;
        infinitive = base_1+"цца" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"ўся" ;
                                 Pl => base_1+"ліся"
                               } ;
                       Fem => table {
                                Sg => base_1+"лася" ;
                                Pl => base_1+"ліся"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"лася" ;
                                   Pl => base_1+"ліся"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV043"
  } ;

mkV044 : Str -> V ;
mkV044 base =
  case base of {
    "ўзяць" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => "ŭzjacʹ" ;
                                                Pl => nonExist
                                              } ;
                                        P2 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              } ;
                                        P3 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => "ўзяць" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => "вазьмі" ;
                       Pl => "вазьміце"
                     } ;
        infinitive = "ўзяць" ;
        participle = table {
                       Masc => table {
                                 Sg => "ўзяў" ;
                                 Pl => "ўзялі"
                               } ;
                       Fem => table {
                                Sg => "ўзяла" ;
                                Pl => "ўзялі"
                              } ;
                       Neuter => table {
                                   Sg => "ўзяло" ;
                                   Pl => "ўзялі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => "ўзяты"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV044"
  } ;

mkV045 : Str -> V ;
mkV045 base =
  case base of {
    base_1+"уць" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"уць" ;
                                                Pl => base_1+"ем"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"еш" ;
                                                Pl => base_1+"еце"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"е" ;
                                                Pl => base_1+"уць"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"уць" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"іце"
                     } ;
        infinitive = base_1+"уць" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"уў" ;
                                 Pl => base_1+"улі"
                               } ;
                       Fem => table {
                                Sg => base_1+"ула" ;
                                Pl => base_1+"улі"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"ула" ;
                                   Pl => base_1+"улі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"уты"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV045"
  } ;

mkV046 : Str -> V ;
mkV046 base =
  case base of {
    base_1+"цца" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"цца" ;
                                                Pl => nonExist
                                              } ;
                                        P2 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              } ;
                                        P3 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"цца" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => base_1+"ся" ;
                       Pl => base_1+"цеся"
                     } ;
        infinitive = base_1+"цца" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"ўся" ;
                                 Pl => base_1+"ліся"
                               } ;
                       Fem => table {
                                Sg => base_1+"лася" ;
                                Pl => base_1+"ліся"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"лася" ;
                                   Pl => base_1+"ліся"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV046"
  } ;

mkV047 : Str -> V ;
mkV047 base =
  case base of {
    base_1+"іць" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"іць" ;
                                                Pl => base_1+"ім" --guessed
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"іш" ; --guessed
                                                Pl => base_1+"іце" --guessed
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"іць" ; --guessed
                                                Pl => base_1+"яць" --guessed
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"іць" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"іце"
                     } ;
        infinitive = base_1+"іць" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"іў" ;
                                 Pl => base_1+"ілі"
                               } ;
                       Fem => table {
                                Sg => base_1+"іла" ;
                                Pl => base_1+"ілі"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"іла" ;
                                   Pl => base_1+"ілі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => base_1+"ены" --guessed
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"лены"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV047"
  } ;

mkV048 : Str -> V ;
mkV048 base =
  case base of {
    base_1+"эць" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"эць" ;
                                                Pl => base_1+"ым"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"ыш" ;
                                                Pl => base_1+"ыце"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"ыць" ;
                                                Pl => base_1+"аць"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"эць" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => base_1+"ы" ;
                       Pl => base_1+"ыце"
                     } ;
        infinitive = base_1+"эць" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"эў" ;
                                 Pl => base_1+"элі"
                               } ;
                       Fem => table {
                                Sg => base_1+"эла" ;
                                Pl => base_1+"элі"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"эла" ;
                                   Pl => base_1+"элі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV048"
  } ;

mkV049 : Str -> V ;
mkV049 base =
  case base of {
    base_1+"е"+base_2@?+"ці" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"е"+base_2+"ці" ;
                                                Pl => base_1+"я"+base_2+"ём"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"я"+base_2+"еш" ;
                                                Pl => base_1+"е"+base_2+"яце"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"я"+base_2+"е" ;
                                                Pl => base_1+"я"+base_2+"уць"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"е"+base_2+"ці" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => base_1+"я"+base_2+"і" ;
                       Pl => base_1+"я"+base_2+"іце"
                     } ;
        infinitive = base_1+"е"+base_2+"ці" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"ё"+base_2 ;
                                 Pl => base_1+"е"+base_2+"лі"
                               } ;
                       Fem => table {
                                Sg => base_1+"е"+base_2+"ла" ;
                                Pl => base_1+"е"+base_2+"лі"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"е"+base_2+"ла" ;
                                   Pl => base_1+"е"+base_2+"лі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"е"+base_2+"ены"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV049"
  } ;

mkV050 : Str -> V ;
mkV050 base =
  case base of {
    base_1+base_2@?+"сіць" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+base_2+"сіць" ;
                                                Pl => nonExist
                                              } ;
                                        P2 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              } ;
                                        P3 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+base_2+"сіць" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => base_1+base_2+"сі" ;
                       Pl => base_1+base_2+"сіце"
                     } ;
        infinitive = base_1+base_2+"сіць" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+base_2+"сіў" ;
                                 Pl => base_1+base_2+"сілі"
                               } ;
                       Fem => table {
                                Sg => base_1+base_2+"сіла" ;
                                Pl => base_1+base_2+"сілі"
                              } ;
                       Neuter => table {
                                   Sg => base_1+base_2+"сіла" ;
                                   Pl => base_1+base_2+"сілі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"ош"+base_2+"ны"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV050"
  } ;

mkV051 : Str -> V ;
mkV051 base =
  case base of {
    base_1+"асіць" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"асіць" ;
                                                Pl => base_1+"осім"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"осіш" ;
                                                Pl => base_1+"осіце"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"осіць" ;
                                                Pl => base_1+"осяць"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => base_1+"асі" ;
                       Pl => base_1+"асіце"
                     } ;
        infinitive = base_1+"асіць" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"асіў" ;
                                 Pl => base_1+"асілі"
                               } ;
                       Fem => table {
                                Sg => base_1+"асіла" ;
                                Pl => base_1+"асілі"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"асіла" ;
                                   Pl => base_1+"асілі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => base_1+"ошаны"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV051"
  } ;

mkV052 : Str -> V ;
mkV052 base =
  case base of {
    base_1+"сці" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"сці" ;
                                                Pl => base_1+"дзём"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"дзеш" ;
                                                Pl => base_1+"дзяце"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"дзе" ;
                                                Pl => base_1+"дуць"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"сці" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => base_1+"дзі" ;
                       Pl => base_1+"дзіце"
                     } ;
        infinitive = base_1+"сці" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"ў" ;
                                 Pl => base_1+"лі"
                               } ;
                       Fem => table {
                                Sg => base_1+"ла" ;
                                Pl => base_1+"лі"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"ла" ;
                                   Pl => base_1+"лі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => base_1+"дзены"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"дзены"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV052"
  } ;

mkV053 : Str -> V ;
mkV053 base =
  case base of {
    base_1+"ыць" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"ыць" ;
                                                Pl => nonExist
                                              } ;
                                        P2 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              } ;
                                        P3 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"ыць" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => base_1+"удзь" ;
                       Pl => base_1+"удзьце"
                     } ;
        infinitive = base_1+"ыць" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"ыў" ;
                                 Pl => base_1+"ылі"
                               } ;
                       Fem => table {
                                Sg => base_1+"ыла" ;
                                Pl => base_1+"ылі"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"ыла" ;
                                   Pl => base_1+"ылі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"ыты"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV053"
  } ;

mkV054 : Str -> V ;
mkV054 base =
  case base of {
    base_1+"сці" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"сці" ;
                                                Pl => base_1+"дзем"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"дзеш" ;
                                                Pl => base_1+"дзеце"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"дзе" ;
                                                Pl => base_1+"дуць"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"сці" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => base_1+"дзь" ;
                       Pl => base_1+"дзьце"
                     } ;
        infinitive = base_1+"сці" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"ў" ;
                                 Pl => base_1+"лі"
                               } ;
                       Fem => table {
                                Sg => base_1+"ла" ;
                                Pl => base_1+"лі"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"ла" ;
                                   Pl => base_1+"лі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => base_1+"дзены"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"дзены"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV054"
  } ;

mkV055 : Str -> V ;
mkV055 base =
  case base of {
    base_1+"ць" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"ць" ;
                                                Pl => "будзем "+base_1+"ць"
                                              } ;
                                        P2 => table {
                                                Sg => "будзеш "+base_1+"ць" ;
                                                Pl => "будзеце "+base_1+"ць"
                                              } ;
                                        P3 => table {
                                                Sg => "будзе "+base_1+"ць" ;
                                                Pl => "будуць "+base_1+"ць"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"ць" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => base_1+"й" ;
                       Pl => base_1+"йце"
                     } ;
        infinitive = base_1+"ць" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"ў" ;
                                 Pl => base_1+"лі"
                               } ;
                       Fem => table {
                                Sg => base_1+"ла" ;
                                Pl => base_1+"лі"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"ла" ;
                                   Pl => base_1+"лі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => base_1+"ны"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"ты"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV055"
  } ;

mkV056 : Str -> V ;
mkV056 base =
  case base of {
    base_1+"есці" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"есці" ;
                                                Pl => base_1+"яцём"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"яцеш" ;
                                                Pl => base_1+"ецяце"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"яце" ;
                                                Pl => base_1+"ятуць"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => base_1+"яці" ;
                       Pl => base_1+"яціце"
                     } ;
        infinitive = base_1+"есці" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"ёў" ;
                                 Pl => base_1+"ялі"
                               } ;
                       Fem => table {
                                Sg => base_1+"яла" ;
                                Pl => base_1+"ялі"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"яло" ;
                                   Pl => base_1+"ялі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => base_1+"ецены"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV056"
  } ;

mkV057 : Str -> V ;
mkV057 base =
  case base of {
    base_1+"а"+base_2@?+base_3@?+"ць" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"а"+base_2+base_3+"ць" ;
                                                Pl => nonExist
                                              } ;
                                        P2 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              } ;
                                        P3 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"а"+base_2+base_3+"ць" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => base_1+"а"+base_2+base_3 ;
                       Pl => base_1+"а"+base_2+base_3+"це"
                     } ;
        infinitive = base_1+"а"+base_2+base_3+"ць" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"а"+base_2+base_3+"ў" ;
                                 Pl => base_1+"а"+base_2+base_3+"лі"
                               } ;
                       Fem => table {
                                Sg => base_1+"а"+base_2+base_3+"ла" ;
                                Pl => base_1+"а"+base_2+base_3+"лі"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"а"+base_2+base_3+"ла" ;
                                   Pl => base_1+"а"+base_2+base_3+"лі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"о"+base_2+"ан"+base_3
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV057"
  } ;

mkV058 : Str -> V ;
mkV058 base =
  case base of {
    base_1+"ць" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"ць" ;
                                                Pl => nonExist
                                              } ;
                                        P2 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"е" ; --guessed
                                                Pl => base_1+"юць" --guessed
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"ць" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => base_1 ;
                       Pl => base_1+"це"
                     } ;
        infinitive = base_1+"ць" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"ў" ;
                                 Pl => base_1+"лі"
                               } ;
                       Fem => table {
                                Sg => base_1+"ла" ;
                                Pl => base_1+"лі"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"ла" ;
                                   Pl => base_1+"лі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"ты"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV058"
  } ;

mkV059 : Str -> V ;
mkV059 base =
  case base of {
    "даць" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => "dacʹ" ;
                                                Pl => nonExist
                                              } ;
                                        P2 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              } ;
                                        P3 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => "даць" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => "дай" ;
                       Pl => "дайце"
                     } ;
        infinitive = "даць" ;
        participle = table {
                       Masc => table {
                                 Sg => "даў" ;
                                 Pl => "далі"
                               } ;
                       Fem => table {
                                Sg => "дала" ;
                                Pl => "далі"
                              } ;
                       Neuter => table {
                                   Sg => "дало" ;
                                   Pl => "далі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => "дадзены"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV059"
  } ;

mkV060 : Str -> V ;
mkV060 base =
  case base of {
    base_1+"ціць" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"ціць" ;
                                                Pl => base_1+"цім"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"ціш" ;
                                                Pl => base_1+"ціце"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"ціць" ;
                                                Pl => base_1+"цяць"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"ціць" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => base_1+"ць" ;
                       Pl => base_1+"цьце"
                     } ;
        infinitive = base_1+"ціць" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"ціў" ;
                                 Pl => base_1+"цілі"
                               } ;
                       Fem => table {
                                Sg => base_1+"ціла" ;
                                Pl => base_1+"цілі"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"ціла" ;
                                   Pl => base_1+"цілі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => base_1+"чаны"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"чаны"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV060"
  } ;

mkV061 : Str -> V ;
mkV061 base =
  case base of {
    base_1+"яць" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"яць" ;
                                                Pl => nonExist
                                              } ;
                                        P2 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              } ;
                                        P3 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"яць" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => base_1+"імі" ;
                       Pl => base_1+"іміце"
                     } ;
        infinitive = base_1+"яць" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"яў" ;
                                 Pl => base_1+"ялі"
                               } ;
                       Fem => table {
                                Sg => base_1+"яла" ;
                                Pl => base_1+"ялі"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"яло" ;
                                   Pl => base_1+"ялі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"яты"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV061"
  } ;

mkV062 : Str -> V ;
mkV062 base =
  case base of {
    base_1+"уць" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"уць" ;
                                                Pl => base_1+"ем" --guessed
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"еш" ; --guessed
                                                Pl => base_1+"еце" --guessed
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"е" ; --guessed
                                                Pl => base_1+"уць" --guessed
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"уць" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"іце"
                     } ;
        infinitive = base_1+"уць" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"уў" ;
                                 Pl => base_1+"улі"
                               } ;
                       Fem => table {
                                Sg => base_1+"ула" ;
                                Pl => base_1+"улі"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"ула" ;
                                   Pl => base_1+"улі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"ёны"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV062"
  } ;

mkV063 : Str -> V ;
mkV063 base =
  case base of {
    base_1+"ць" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"ць" ;
                                                Pl => nonExist
                                              } ;
                                        P2 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"е" ; --guessed
                                                Pl => base_1+"юць" --guessed
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"ць" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => base_1+"нь" ;
                       Pl => base_1+"ньце"
                     } ;
        infinitive = base_1+"ць" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"ў" ;
                                 Pl => base_1+"лі"
                               } ;
                       Fem => table {
                                Sg => base_1+"ла" ;
                                Pl => base_1+"лі"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"ла" ;
                                   Pl => base_1+"лі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"ты"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV063"
  } ;

mkV064 : Str -> V ;
mkV064 base =
  case base of {
    base_1+"ыць" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"ыць" ;
                                                Pl => base_1+"ым"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"ыш" ;
                                                Pl => base_1+"ыце"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"ыць" ;
                                                Pl => base_1+"аць"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => base_1+"ы" ;
                       Pl => base_1+"ыце"
                     } ;
        infinitive = base_1+"ыць" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"ыў" ;
                                 Pl => base_1+"ылі"
                               } ;
                       Fem => table {
                                Sg => base_1+"ыла" ;
                                Pl => base_1+"ылі"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"ыла" ;
                                   Pl => base_1+"ылі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => base_1+"аны"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV064"
  } ;

mkV065 : Str -> V ;
mkV065 base =
  case base of {
    base_1+"сці" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"сці" ;
                                                Pl => nonExist
                                              } ;
                                        P2 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              } ;
                                        P3 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"сці" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => base_1+"дзі" ;
                       Pl => base_1+"дзіце"
                     } ;
        infinitive = base_1+"сці" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"шаў" ;
                                 Pl => base_1+"шлі"
                               } ;
                       Fem => table {
                                Sg => base_1+"шла" ;
                                Pl => base_1+"шлі"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"шла" ;
                                   Pl => base_1+"шлі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV065"
  } ;

mkV066 : Str -> V ;
mkV066 base =
  case base of {
    base_1+"заць" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"заць" ;
                                                Pl => base_1+"жам"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"жаш" ;
                                                Pl => base_1+"жаце"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"жа" ;
                                                Pl => base_1+"жуць"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"заць" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => base_1+"жы" ;
                       Pl => base_1+"жыце"
                     } ;
        infinitive = base_1+"заць" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"заў" ;
                                 Pl => base_1+"залі"
                               } ;
                       Fem => table {
                                Sg => base_1+"зала" ;
                                Pl => base_1+"залі"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"зала" ;
                                   Pl => base_1+"залі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => base_1+"заны"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"заны"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV066"
  } ;

mkV067 : Str -> V ;
mkV067 base =
  case base of {
    base_1+"ць" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"ць" ;
                                                Pl => nonExist
                                              } ;
                                        P2 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              } ;
                                        P3 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"ць" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => base_1+"й" ;
                       Pl => base_1+"йце"
                     } ;
        infinitive = base_1+"ць" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"ў" ;
                                 Pl => base_1+"лі"
                               } ;
                       Fem => table {
                                Sg => base_1+"ла" ;
                                Pl => base_1+"лі"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"ло" ;
                                   Pl => base_1+"лі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"дзены"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV067"
  } ;

mkV068 : Str -> V ;
mkV068 base =
  case base of {
    base_1+"ацца" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"ацца" ;
                                                Pl => nonExist
                                              } ;
                                        P2 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              } ;
                                        P3 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"ацца" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => base_1+"ніся" ;
                       Pl => base_1+"ніцеся"
                     } ;
        infinitive = base_1+"ацца" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"аўся" ;
                                 Pl => base_1+"аліся"
                               } ;
                       Fem => table {
                                Sg => base_1+"алася" ;
                                Pl => base_1+"аліся"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"алося" ;
                                   Pl => base_1+"аліся"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV068"
  } ;

mkV069 : Str -> V ;
mkV069 base =
  case base of {
    base_1+"ець" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"ець" ;
                                                Pl => base_1+"ім"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"іш" ;
                                                Pl => base_1+"іце"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"іць" ;
                                                Pl => base_1+"яць"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"ець" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"іце"
                     } ;
        infinitive = base_1+"ець" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"еў" ;
                                 Pl => base_1+"елі"
                               } ;
                       Fem => table {
                                Sg => base_1+"ела" ;
                                Pl => base_1+"елі"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"ела" ;
                                   Pl => base_1+"елі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV069"
  } ;

mkV070 : Str -> V ;
mkV070 base =
  case base of {
    base_1+base_2@?+"ць" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+base_2+"ць" ;
                                                Pl => nonExist
                                              } ;
                                        P2 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              } ;
                                        P3 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+base_2+"ць" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => base_1+base_2 ;
                       Pl => base_1+base_2+"це"
                     } ;
        infinitive = base_1+base_2+"ць" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+base_2+"ў" ;
                                 Pl => base_1+base_2+"лі"
                               } ;
                       Fem => table {
                                Sg => base_1+base_2+"ла" ;
                                Pl => base_1+base_2+"лі"
                              } ;
                       Neuter => table {
                                   Sg => base_1+base_2+"ла" ;
                                   Pl => base_1+base_2+"лі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"ан"+base_2
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV070"
  } ;

mkV071 : Str -> V ;
mkV071 base =
  case base of {
    "мець" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => "mjecʹ" ;
                                                Pl => "маем"
                                              } ;
                                        P2 => table {
                                                Sg => "маеш" ;
                                                Pl => "маеце"
                                              } ;
                                        P3 => table {
                                                Sg => "мае" ;
                                                Pl => "маюць"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => "май" ;
                       Pl => "майце"
                     } ;
        infinitive = "мець" ;
        participle = table {
                       Masc => table {
                                 Sg => "меў" ;
                                 Pl => "мелі"
                               } ;
                       Fem => table {
                                Sg => "мела" ;
                                Pl => "мелі"
                              } ;
                       Neuter => table {
                                   Sg => "мела" ;
                                   Pl => "мелі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV071"
  } ;

mkV072 : Str -> V ;
mkV072 base =
  case base of {
    base_1+"ячы" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"ячы" ;
                                                Pl => base_1+"ячом"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"ячэш" ;
                                                Pl => base_1+"ечаце"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"ячэ" ;
                                                Pl => base_1+"якуць"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"ячы" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => base_1+"ячы" ;
                       Pl => base_1+"ячыце"
                     } ;
        infinitive = base_1+"ячы" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"ёк" ;
                                 Pl => base_1+"яклі"
                               } ;
                       Fem => table {
                                Sg => base_1+"якла" ;
                                Pl => base_1+"яклі"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"якло" ;
                                   Pl => base_1+"яклі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => base_1+"ечаны"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"ечаны"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV072"
  } ;

mkV073 : Str -> V ;
mkV073 base =
  case base of {
    "плыць" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => "plycʹ" ;
                                                Pl => "плывём"
                                              } ;
                                        P2 => table {
                                                Sg => "плывеш" ;
                                                Pl => "плывяце"
                                              } ;
                                        P3 => table {
                                                Sg => "плыве" ;
                                                Pl => "плывуць"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => "плыві" ;
                       Pl => "плывіце"
                     } ;
        infinitive = "плыць" ;
        participle = table {
                       Masc => table {
                                 Sg => "плыў" ;
                                 Pl => "плылі"
                               } ;
                       Fem => table {
                                Sg => "плыла" ;
                                Pl => "плылі"
                              } ;
                       Neuter => table {
                                   Sg => "плыло" ;
                                   Pl => "плылі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV073"
  } ;

mkV074 : Str -> V ;
mkV074 base =
  case base of {
    base_1+"нуць" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"нуць" ;
                                                Pl => base_1+"нем"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"неш" ;
                                                Pl => base_1+"неце"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"не" ;
                                                Pl => base_1+"нуць"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"нуць" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => base_1+"ні" ;
                       Pl => base_1+"ніце"
                     } ;
        infinitive = base_1+"нуць" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1 ;
                                 Pl => base_1+"лі"
                               } ;
                       Fem => table {
                                Sg => base_1+"ла" ;
                                Pl => base_1+"лі"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"ла" ;
                                   Pl => base_1+"лі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV074"
  } ;

mkV075 : Str -> V ;
mkV075 base =
  case base of {
    base_1+"сці" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"сці" ;
                                                Pl => nonExist
                                              } ;
                                        P2 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              } ;
                                        P3 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"сці" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => base_1+"ш" ;
                       Pl => base_1+"шце"
                     } ;
        infinitive = base_1+"сці" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"ў" ;
                                 Pl => base_1+"лі"
                               } ;
                       Fem => table {
                                Sg => base_1+"ла" ;
                                Pl => base_1+"лі"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"ла" ;
                                   Pl => base_1+"лі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"дзены"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV075"
  } ;

mkV076 : Str -> V ;
mkV076 base =
  case base of {
    base_1+base_2@?+"ціць" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+base_2+"ціць" ;
                                                Pl => nonExist
                                              } ;
                                        P2 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              } ;
                                        P3 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+base_2+"ціць" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => base_1+base_2+"ці" ;
                       Pl => base_1+base_2+"ціце"
                     } ;
        infinitive = base_1+base_2+"ціць" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+base_2+"ціў" ;
                                 Pl => base_1+base_2+"цілі"
                               } ;
                       Fem => table {
                                Sg => base_1+base_2+"ціла" ;
                                Pl => base_1+base_2+"цілі"
                              } ;
                       Neuter => table {
                                   Sg => base_1+base_2+"ціла" ;
                                   Pl => base_1+base_2+"цілі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"оч"+base_2+"ны"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV076"
  } ;

mkV077 : Str -> V ;
mkV077 base =
  case base of {
    base_1+"я"+base_2@?+"зець" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"я"+base_2+"зець" ;
                                                Pl => base_1+"я"+base_2+"зім"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"я"+base_2+"зіш" ;
                                                Pl => base_1+"е"+base_2+"зіце"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"я"+base_2+"зіць" ;
                                                Pl => base_1+"я"+base_2+"зяць"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => base_1+"я"+base_2+"зі" ;
                       Pl => base_1+"я"+base_2+"зіце"
                     } ;
        infinitive = base_1+"я"+base_2+"зець" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"я"+base_2+"зеў" ;
                                 Pl => base_1+"я"+base_2+"зелі"
                               } ;
                       Fem => table {
                                Sg => base_1+"я"+base_2+"зела" ;
                                Pl => base_1+"я"+base_2+"зелі"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"я"+base_2+"зела" ;
                                   Pl => base_1+"я"+base_2+"зелі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => base_1+"е"+base_2+"жаны"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV077"
  } ;

mkV078 : Str -> V ;
mkV078 base =
  case base of {
    base_1+"сціць" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"сціць" ;
                                                Pl => base_1+"сцім"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"сціш" ;
                                                Pl => base_1+"сціце"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"сціць" ;
                                                Pl => base_1+"сцяць"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"сціць" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => base_1+"сці" ;
                       Pl => base_1+"сціце"
                     } ;
        infinitive = base_1+"сціць" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"сціў" ;
                                 Pl => base_1+"сцілі"
                               } ;
                       Fem => table {
                                Sg => base_1+"сціла" ;
                                Pl => base_1+"сцілі"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"сціла" ;
                                   Pl => base_1+"сцілі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => base_1+"шчаны"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"шчаны"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV078"
  } ;

mkV079 : Str -> V ;
mkV079 base =
  case base of {
    base_1+"я"+base_2@?+"іць" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"я"+base_2+"іць" ;
                                                Pl => nonExist
                                              } ;
                                        P2 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              } ;
                                        P3 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"я"+base_2+"іць" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => base_1+"я"+base_2+"і" ;
                       Pl => base_1+"я"+base_2+"іце"
                     } ;
        infinitive = base_1+"я"+base_2+"іць" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"я"+base_2+"іў" ;
                                 Pl => base_1+"я"+base_2+"ілі"
                               } ;
                       Fem => table {
                                Sg => base_1+"я"+base_2+"іла" ;
                                Pl => base_1+"я"+base_2+"ілі"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"я"+base_2+"іла" ;
                                   Pl => base_1+"я"+base_2+"ілі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"е"+base_2+"ены"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV079"
  } ;

mkV080 : Str -> V ;
mkV080 base =
  case base of {
    base_1+"цца" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"цца" ;
                                                Pl => nonExist
                                              } ;
                                        P2 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              } ;
                                        P3 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"цца" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => base_1+"нься" ;
                       Pl => base_1+"ньцеся"
                     } ;
        infinitive = base_1+"цца" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"ўся" ;
                                 Pl => base_1+"ліся"
                               } ;
                       Fem => table {
                                Sg => base_1+"лася" ;
                                Pl => base_1+"ліся"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"лася" ;
                                   Pl => base_1+"ліся"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV080"
  } ;

mkV081 : Str -> V ;
mkV081 base =
  case base of {
    "ўмець" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => "ŭmjecʹ" ;
                                                Pl => "ўмеем"
                                              } ;
                                        P2 => table {
                                                Sg => "ўмееш" ;
                                                Pl => "ўмееце"
                                              } ;
                                        P3 => table {
                                                Sg => "ўмее" ;
                                                Pl => "ўмеюць"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => "ўмей" ;
                       Pl => "ўмейце"
                     } ;
        infinitive = "ўмець" ;
        participle = table {
                       Masc => table {
                                 Sg => "ўмеў" ;
                                 Pl => "ўмелі"
                               } ;
                       Fem => table {
                                Sg => "ўмела" ;
                                Pl => "ўмелі"
                              } ;
                       Neuter => table {
                                   Sg => "ўмела" ;
                                   Pl => "ўмелі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV081"
  } ;

mkV082 : Str -> V ;
mkV082 base =
  case base of {
    base_1+"ацца" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"ацца" ;
                                                Pl => nonExist
                                              } ;
                                        P2 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              } ;
                                        P3 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"ацца" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => base_1+"іся" ;
                       Pl => base_1+"іцеся"
                     } ;
        infinitive = base_1+"ацца" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"аўся" ;
                                 Pl => base_1+"аліся"
                               } ;
                       Fem => table {
                                Sg => base_1+"алася" ;
                                Pl => base_1+"аліся"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"алася" ;
                                   Pl => base_1+"аліся"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV082"
  } ;

mkV083 : Str -> V ;
mkV083 base =
  case base of {
    base_1+"а"+base_2@?+"ацца" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"а"+base_2+"ацца" ;
                                                Pl => base_1+"о"+base_2+"імся"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"о"+base_2+"ішся" ;
                                                Pl => base_1+"о"+base_2+"іцеся"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"о"+base_2+"іцца" ;
                                                Pl => base_1+"о"+base_2+"яцца"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => base_1+"а"+base_2+"іся" ;
                       Pl => base_1+"а"+base_2+"іцеся"
                     } ;
        infinitive = base_1+"а"+base_2+"ацца" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"а"+base_2+"аўся" ;
                                 Pl => base_1+"а"+base_2+"аліся"
                               } ;
                       Fem => table {
                                Sg => base_1+"а"+base_2+"алася" ;
                                Pl => base_1+"а"+base_2+"аліся"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"а"+base_2+"алася" ;
                                   Pl => base_1+"а"+base_2+"аліся"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV083"
  } ;

mkV084 : Str -> V ;
mkV084 base =
  case base of {
    base_1+"яваць" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"яваць" ;
                                                Pl => base_1+"юём"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"юеш" ;
                                                Pl => base_1+"юяце"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"юе" ;
                                                Pl => base_1+"ююць"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"яваць" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => base_1+"юй" ;
                       Pl => base_1+"юйце"
                     } ;
        infinitive = base_1+"яваць" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"яваў" ;
                                 Pl => base_1+"явалі"
                               } ;
                       Fem => table {
                                Sg => base_1+"явала" ;
                                Pl => base_1+"явалі"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"явала" ;
                                   Pl => base_1+"явалі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => base_1+"яваны" --guessed
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV084"
  } ;

mkV085 : Str -> V ;
mkV085 base =
  case base of {
    "біць" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => "bicʹ" ;
                                                Pl => "б'ём"
                                              } ;
                                        P2 => table {
                                                Sg => "б'еш" ;
                                                Pl => "б'яце"
                                              } ;
                                        P3 => table {
                                                Sg => "б'е" ;
                                                Pl => "б'юць"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => "бі" ;
                       Pl => "біце"
                     } ;
        infinitive = "біць" ;
        participle = table {
                       Masc => table {
                                 Sg => "біў" ;
                                 Pl => "білі"
                               } ;
                       Fem => table {
                                Sg => "біла" ;
                                Pl => "білі"
                              } ;
                       Neuter => table {
                                   Sg => "біла" ;
                                   Pl => "білі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => "біты"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV085"
  } ;

mkV086 : Str -> V ;
mkV086 base =
  case base of {
    base_1+"аць" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"аць" ;
                                                Pl => base_1+"ом"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"эш" ;
                                                Pl => base_1+"аце"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"э" ;
                                                Pl => base_1+"уць"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => base_1+"ы" ;
                       Pl => base_1+"ыце"
                     } ;
        infinitive = base_1+"аць" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"аў" ;
                                 Pl => base_1+"алі"
                               } ;
                       Fem => table {
                                Sg => base_1+"ала" ;
                                Pl => base_1+"алі"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"ала" ;
                                   Pl => base_1+"алі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV086"
  } ;

mkV087 : Str -> V ;
mkV087 base =
  case base of {
    base_1+"ыцца" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"ыцца" ;
                                                Pl => nonExist
                                              } ;
                                        P2 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"ыцца" ;
                                                Pl => base_1+"ацца"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"ыцца" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => base_1+"ся" ;
                       Pl => base_1+"цеся"
                     } ;
        infinitive = base_1+"ыцца" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"ыўся" ;
                                 Pl => base_1+"ыліся"
                               } ;
                       Fem => table {
                                Sg => base_1+"ылася" ;
                                Pl => base_1+"ыліся"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"ылася" ;
                                   Pl => base_1+"ыліся"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV087"
  } ;

mkV088 : Str -> V ;
mkV088 base =
  case base of {
    "са"+base_1+base_2@?+"аць" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => "са"+base_1+base_2+"аць" ;
                                                Pl => nonExist
                                              } ;
                                        P2 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              } ;
                                        P3 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => "са"+base_1+base_2+"аць" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => "з"+base_1+"я"+base_2+"ы" ;
                       Pl => "з"+base_1+"я"+base_2+"ыце"
                     } ;
        infinitive = "са"+base_1+base_2+"аць" ;
        participle = table {
                       Masc => table {
                                 Sg => "са"+base_1+base_2+"аў" ;
                                 Pl => "са"+base_1+base_2+"алі"
                               } ;
                       Fem => table {
                                Sg => "са"+base_1+base_2+"ала" ;
                                Pl => "са"+base_1+base_2+"алі"
                              } ;
                       Neuter => table {
                                   Sg => "са"+base_1+base_2+"ала" ;
                                   Pl => "са"+base_1+base_2+"алі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => "са"+base_1+base_2+"аны"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV088"
  } ;

mkV089 : Str -> V ;
mkV089 base =
  case base of {
    base_1+"ць" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"ць" ;
                                                Pl => nonExist
                                              } ;
                                        P2 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              } ;
                                        P3 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"ць" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => base_1+"ві" ;
                       Pl => base_1+"віце"
                     } ;
        infinitive = base_1+"ць" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"ў" ;
                                 Pl => base_1+"лі"
                               } ;
                       Fem => table {
                                Sg => base_1+"ла" ;
                                Pl => base_1+"лі"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"ло" ;
                                   Pl => base_1+"лі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"ты"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV089"
  } ;

mkV090 : Str -> V ;
mkV090 base =
  case base of {
    "гнаць" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => "hnacʹ" ;
                                                Pl => "гонім"
                                              } ;
                                        P2 => table {
                                                Sg => "гоніш" ;
                                                Pl => "гоніце"
                                              } ;
                                        P3 => table {
                                                Sg => "гоніць" ;
                                                Pl => "гоняць"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => "гані" ;
                       Pl => "ганіце"
                     } ;
        infinitive = "гнаць" ;
        participle = table {
                       Masc => table {
                                 Sg => "гнаў" ;
                                 Pl => "гналі"
                               } ;
                       Fem => table {
                                Sg => "гнала" ;
                                Pl => "гналі"
                              } ;
                       Neuter => table {
                                   Sg => "гнала" ;
                                   Pl => "гналі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => "гнаны"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV090"
  } ;

mkV091 : Str -> V ;
mkV091 base =
  case base of {
    "ўжыць" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => "ŭžycʹ" ;
                                                Pl => nonExist
                                              } ;
                                        P2 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              } ;
                                        P3 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => "ўжыць" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => "ўжыві" ;
                       Pl => "ўжывіце"
                     } ;
        infinitive = "ўжыць" ;
        participle = table {
                       Masc => table {
                                 Sg => "ўжыў" ;
                                 Pl => "ўжылі"
                               } ;
                       Fem => table {
                                Sg => "ўжыла" ;
                                Pl => "ўжылі"
                              } ;
                       Neuter => table {
                                   Sg => "ўжыло" ;
                                   Pl => "ўжылі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => "ўжыты"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV091"
  } ;

mkV092 : Str -> V ;
mkV092 base =
  case base of {
    base_1+"ці" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"ці" ;
                                                Pl => base_1+"ем"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"еш" ;
                                                Pl => base_1+"еце"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"е" ;
                                                Pl => base_1+"уць"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"ці" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => base_1+"ь" ;
                       Pl => base_1+"ьце"
                     } ;
        infinitive = base_1+"ці" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1 ;
                                 Pl => base_1+"лі"
                               } ;
                       Fem => table {
                                Sg => base_1+"ла" ;
                                Pl => base_1+"лі"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"ла" ;
                                   Pl => base_1+"лі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV092"
  } ;

mkV093 : Str -> V ;
mkV093 base =
  case base of {
    base_1+base_2@?+"яцца" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+base_2+"яцца" ;
                                                Pl => base_1+base_2+"ёмся"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+base_2+"ешся" ;
                                                Pl => base_1+"е"+base_2+"цеся"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+base_2+"ецца" ;
                                                Pl => base_1+base_2+"юцца"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => base_1+"ейс"+base_2 ;
                       Pl => base_1+"ейцес"+base_2
                     } ;
        infinitive = base_1+base_2+"яцца" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+base_2+"яўся" ;
                                 Pl => base_1+base_2+"яліся"
                               } ;
                       Fem => table {
                                Sg => base_1+base_2+"ялася" ;
                                Pl => base_1+base_2+"яліся"
                              } ;
                       Neuter => table {
                                   Sg => base_1+base_2+"ялася" ;
                                   Pl => base_1+base_2+"яліся"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV093"
  } ;

mkV094 : Str -> V ;
mkV094 base =
  case base of {
    "слаць" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => "slacʹ" ;
                                                Pl => "шлём"
                                              } ;
                                        P2 => table {
                                                Sg => "шлеш" ;
                                                Pl => "шляце"
                                              } ;
                                        P3 => table {
                                                Sg => "шле" ;
                                                Pl => "шлюць"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => "шлі" ;
                       Pl => "шліце"
                     } ;
        infinitive = "слаць" ;
        participle = table {
                       Masc => table {
                                 Sg => "слаў" ;
                                 Pl => "слалі"
                               } ;
                       Fem => table {
                                Sg => "слала" ;
                                Pl => "слалі"
                              } ;
                       Neuter => table {
                                   Sg => "слала" ;
                                   Pl => "слалі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => "сланы"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV094"
  } ;

mkV095 : Str -> V ;
mkV095 base =
  case base of {
    "слаць" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => "slacʹ" ;
                                                Pl => "сцелем"
                                              } ;
                                        P2 => table {
                                                Sg => "сцелеш" ;
                                                Pl => "сцелеце"
                                              } ;
                                        P3 => table {
                                                Sg => "сцеле" ;
                                                Pl => "сцелюць"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => "сцялі" ;
                       Pl => "сцяліце"
                     } ;
        infinitive = "слаць" ;
        participle = table {
                       Masc => table {
                                 Sg => "слаў" ;
                                 Pl => "слалі"
                               } ;
                       Fem => table {
                                Sg => "слала" ;
                                Pl => "слалі"
                              } ;
                       Neuter => table {
                                   Sg => "слала" ;
                                   Pl => "слалі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => "сланы"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV095"
  } ;

mkV096 : Str -> V ;
mkV096 base =
  case base of {
    base_1+"а"+base_2@?+"іць" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"а"+base_2+"іць" ;
                                                Pl => nonExist
                                              } ;
                                        P2 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              } ;
                                        P3 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"а"+base_2+"іць" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => base_1+"а"+base_2+"і" ;
                       Pl => base_1+"а"+base_2+"іце"
                     } ;
        infinitive = base_1+"а"+base_2+"іць" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"а"+base_2+"іў" ;
                                 Pl => base_1+"а"+base_2+"ілі"
                               } ;
                       Fem => table {
                                Sg => base_1+"а"+base_2+"іла" ;
                                Pl => base_1+"а"+base_2+"ілі"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"а"+base_2+"іла" ;
                                   Pl => base_1+"а"+base_2+"ілі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"о"+base_2+"ены"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV096"
  } ;

mkV097 : Str -> V ;
mkV097 base =
  case base of {
    "я"+base_1+"аць" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => "я"+base_1+"аць" ;
                                                Pl => "я"+base_1+"ём"
                                              } ;
                                        P2 => table {
                                                Sg => "я"+base_1+"еш" ;
                                                Pl => "е"+base_1+"яце"
                                              } ;
                                        P3 => table {
                                                Sg => "я"+base_1+"е" ;
                                                Pl => "я"+base_1+"уць"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => "я"+base_1+"і" ;
                       Pl => "я"+base_1+"іце"
                     } ;
        infinitive = "я"+base_1+"аць" ;
        participle = table {
                       Masc => table {
                                 Sg => "я"+base_1+"аў" ;
                                 Pl => "я"+base_1+"алі"
                               } ;
                       Fem => table {
                                Sg => "я"+base_1+"ала" ;
                                Pl => "я"+base_1+"алі"
                              } ;
                       Neuter => table {
                                   Sg => "я"+base_1+"ала" ;
                                   Pl => "я"+base_1+"алі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => "я"+base_1+"аны"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV097"
  } ;

mkV098 : Str -> V ;
mkV098 base =
  case base of {
    "ўстаць" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => "ŭstacʹ" ;
                                                Pl => nonExist
                                              } ;
                                        P2 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              } ;
                                        P3 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => "ўстаць" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => "ўстань" ;
                       Pl => "ўстаньце"
                     } ;
        infinitive = "ўстаць" ;
        participle = table {
                       Masc => table {
                                 Sg => "ўстаў" ;
                                 Pl => "ўсталі"
                               } ;
                       Fem => table {
                                Sg => "ўстала" ;
                                Pl => "ўсталі"
                              } ;
                       Neuter => table {
                                   Sg => "ўстала" ;
                                   Pl => "ўсталі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV098"
  } ;

mkV099 : Str -> V ;
mkV099 base =
  case base of {
    base_1+"есці" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"есці" ;
                                                Pl => base_1+"ядзём"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"ядзеш" ;
                                                Pl => base_1+"едзяце"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"ядзе" ;
                                                Pl => base_1+"ядуць"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"есці" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => base_1+"ядзі" ;
                       Pl => base_1+"ядзіце"
                     } ;
        infinitive = base_1+"есці" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"ёў" ;
                                 Pl => base_1+"ялі"
                               } ;
                       Fem => table {
                                Sg => base_1+"яла" ;
                                Pl => base_1+"ялі"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"яло" ;
                                   Pl => base_1+"ялі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"едзены"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV099"
  } ;

mkV100 : Str -> V ;
mkV100 base =
  case base of {
    base_1+"с"+base_2@?+"аць" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"с"+base_2+"аць" ;
                                                Pl => nonExist
                                              } ;
                                        P2 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              } ;
                                        P3 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"с"+base_2+"аць" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => base_1+"ш"+base_2+"і" ;
                       Pl => base_1+"ш"+base_2+"іце"
                     } ;
        infinitive = base_1+"с"+base_2+"аць" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"с"+base_2+"аў" ;
                                 Pl => base_1+"с"+base_2+"алі"
                               } ;
                       Fem => table {
                                Sg => base_1+"с"+base_2+"ала" ;
                                Pl => base_1+"с"+base_2+"алі"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"с"+base_2+"ала" ;
                                   Pl => base_1+"с"+base_2+"алі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"с"+base_2+"аны"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV100"
  } ;

mkV101 : Str -> V ;
mkV101 base =
  case base of {
    base_1+base_2@?+"аць" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+base_2+"аць" ;
                                                Pl => nonExist
                                              } ;
                                        P2 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              } ;
                                        P3 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+base_2+"аць" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => base_1+"це"+base_2+"і" ;
                       Pl => base_1+"це"+base_2+"іце"
                     } ;
        infinitive = base_1+base_2+"аць" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+base_2+"аў" ;
                                 Pl => base_1+base_2+"алі"
                               } ;
                       Fem => table {
                                Sg => base_1+base_2+"ала" ;
                                Pl => base_1+base_2+"алі"
                              } ;
                       Neuter => table {
                                   Sg => base_1+base_2+"ала" ;
                                   Pl => base_1+base_2+"алі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+base_2+"аны"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV101"
  } ;

mkV102 : Str -> V ;
mkV102 base =
  case base of {
    base_1+base_2@?+"аць" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+base_2+"аць" ;
                                                Pl => nonExist
                                              } ;
                                        P2 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              } ;
                                        P3 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+base_2+"аць" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => base_1+"а"+base_2+"і" ;
                       Pl => base_1+"а"+base_2+"іце"
                     } ;
        infinitive = base_1+base_2+"аць" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+base_2+"аў" ;
                                 Pl => base_1+base_2+"алі"
                               } ;
                       Fem => table {
                                Sg => base_1+base_2+"ала" ;
                                Pl => base_1+base_2+"алі"
                              } ;
                       Neuter => table {
                                   Sg => base_1+base_2+"ала" ;
                                   Pl => base_1+base_2+"алі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+base_2+"аны"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV102"
  } ;

mkV103 : Str -> V ;
mkV103 base =
  case base of {
    base_1+"уцца" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"уцца" ;
                                                Pl => nonExist
                                              } ;
                                        P2 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              } ;
                                        P3 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"уцца" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => base_1+"іся" ;
                       Pl => base_1+"іцеся"
                     } ;
        infinitive = base_1+"уцца" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"уўся" ;
                                 Pl => base_1+"уліся"
                               } ;
                       Fem => table {
                                Sg => base_1+"улася" ;
                                Pl => base_1+"уліся"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"улася" ;
                                   Pl => base_1+"уліся"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV103"
  } ;

mkV104 : Str -> V ;
mkV104 base =
  case base of {
    base_1+"ць" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"ць" ;
                                                Pl => "будзем "+base_1+"ць" --guessed
                                              } ;
                                        P2 => table {
                                                Sg => "будзеш "+base_1+"ць" ; --guessed
                                                Pl => "будзеце "+base_1+"ць" --guessed
                                              } ;
                                        P3 => table {
                                                Sg => "будзе "+base_1+"ць" ; --guessed
                                                Pl => "будуць "+base_1+"ць" --guessed
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"ць" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => base_1+"й" ;
                       Pl => base_1+"йце"
                     } ;
        infinitive = base_1+"ць" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"ў" ;
                                 Pl => base_1+"лі"
                               } ;
                       Fem => table {
                                Sg => base_1+"ла" ;
                                Pl => base_1+"лі"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"ла" ;
                                   Pl => base_1+"лі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => base_1+"ны" --guessed
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"дзены"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV104"
  } ;

mkV105 : Str -> V ;
mkV105 base =
  case base of {
    "пазнаёміць" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => "paznajómicʹ" ;
                                                Pl => nonExist
                                              } ;
                                        P2 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              } ;
                                        P3 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => "пазнаёміць" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => "пазнаёмь" ;
                       Pl => "пазнаёмьце"
                     } ;
        infinitive = "пазнаёміць" ;
        participle = table {
                       Masc => table {
                                 Sg => "пазнаёміў" ;
                                 Pl => "пазнаёмілі"
                               } ;
                       Fem => table {
                                Sg => "пазнаёміла" ;
                                Pl => "пазнаёмілі"
                              } ;
                       Neuter => table {
                                   Sg => "пазнаёміла" ;
                                   Pl => "пазнаёмілі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => "пазнаёмлены"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV105"
  } ;

mkV106 : Str -> V ;
mkV106 base =
  case base of {
    base_1+"іць" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"іць" ;
                                                Pl => base_1+"ім" --guessed
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"іш" ; --guessed
                                                Pl => base_1+"іце" --guessed
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"іць" ; --guessed
                                                Pl => base_1+"яць" --guessed
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"іць" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => base_1+"ь" ;
                       Pl => base_1+"ьце"
                     } ;
        infinitive = base_1+"іць" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"іў" ;
                                 Pl => base_1+"ілі"
                               } ;
                       Fem => table {
                                Sg => base_1+"іла" ;
                                Pl => base_1+"ілі"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"іла" ;
                                   Pl => base_1+"ілі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"лены"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV106"
  } ;

mkV107 : Str -> V ;
mkV107 base =
  case base of {
    "знаёміць" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => "znajómicʹ" ;
                                                Pl => "знаёмім"
                                              } ;
                                        P2 => table {
                                                Sg => "знаёміш" ;
                                                Pl => "знаёміце"
                                              } ;
                                        P3 => table {
                                                Sg => "знаёміць" ;
                                                Pl => "знаёмяць"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => "знаёмь" ;
                       Pl => "знаёмьце"
                     } ;
        infinitive = "знаёміць" ;
        participle = table {
                       Masc => table {
                                 Sg => "знаёміў" ;
                                 Pl => "знаёмілі"
                               } ;
                       Fem => table {
                                Sg => "знаёміла" ;
                                Pl => "знаёмілі"
                              } ;
                       Neuter => table {
                                   Sg => "знаёміла" ;
                                   Pl => "знаёмілі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV107"
  } ;

mkV108 : Str -> V ;
mkV108 base =
  case base of {
    "ўчуць" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => "ŭčucʹ" ;
                                                Pl => nonExist
                                              } ;
                                        P2 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              } ;
                                        P3 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => "ўчуць" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => "ўчуй" ;
                       Pl => "ўчуйце"
                     } ;
        infinitive = "ўчуць" ;
        participle = table {
                       Masc => table {
                                 Sg => "ўчуў" ;
                                 Pl => "ўчулі"
                               } ;
                       Fem => table {
                                Sg => "ўчула" ;
                                Pl => "ўчулі"
                              } ;
                       Neuter => table {
                                   Sg => "ўчула" ;
                                   Pl => "ўчулі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => "ўчуты"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV108"
  } ;

mkV109 : Str -> V ;
mkV109 base =
  case base of {
    base_1+"зець" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"зець" ;
                                                Pl => nonExist
                                              } ;
                                        P2 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              } ;
                                        P3 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"зець" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => base_1+"зь" ;
                       Pl => base_1+"зьце"
                     } ;
        infinitive = base_1+"зець" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"зеў" ;
                                 Pl => base_1+"зелі"
                               } ;
                       Fem => table {
                                Sg => base_1+"зела" ;
                                Pl => base_1+"зелі"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"зела" ;
                                   Pl => base_1+"зелі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"жаны"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV109"
  } ;

mkV110 : Str -> V ;
mkV110 base =
  case base of {
    base_1+base_2@?+"рціць" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+base_2+"рціць" ;
                                                Pl => nonExist
                                              } ;
                                        P2 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              } ;
                                        P3 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+base_2+"рціць" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => base_1+base_2+"рці" ;
                       Pl => base_1+base_2+"рціце"
                     } ;
        infinitive = base_1+base_2+"рціць" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+base_2+"рціў" ;
                                 Pl => base_1+base_2+"рцілі"
                               } ;
                       Fem => table {
                                Sg => base_1+base_2+"рціла" ;
                                Pl => base_1+base_2+"рцілі"
                              } ;
                       Neuter => table {
                                   Sg => base_1+base_2+"рціла" ;
                                   Pl => base_1+base_2+"рцілі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"эрч"+base_2+"ны"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV110"
  } ;

mkV111 : Str -> V ;
mkV111 base =
  case base of {
    base_1+"а"+base_2@?+"ціць" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"а"+base_2+"ціць" ;
                                                Pl => base_1+"э"+base_2+"цім"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"э"+base_2+"ціш" ;
                                                Pl => base_1+"э"+base_2+"ціце"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"э"+base_2+"ціць" ;
                                                Pl => base_1+"э"+base_2+"цяць"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => base_1+"а"+base_2+"ці" ;
                       Pl => base_1+"а"+base_2+"ціце"
                     } ;
        infinitive = base_1+"а"+base_2+"ціць" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"а"+base_2+"ціў" ;
                                 Pl => base_1+"а"+base_2+"цілі"
                               } ;
                       Fem => table {
                                Sg => base_1+"а"+base_2+"ціла" ;
                                Pl => base_1+"а"+base_2+"цілі"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"а"+base_2+"ціла" ;
                                   Pl => base_1+"а"+base_2+"цілі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => base_1+"э"+base_2+"чаны"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV111"
  } ;

mkV112 : Str -> V ;
mkV112 base =
  case base of {
    base_1+base_2@?+"р"+base_3@?+"ць" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+base_2+"р"+base_3+"ць" ;
                                                Pl => nonExist
                                              } ;
                                        P2 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              } ;
                                        P3 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+base_2+"р"+base_3+"ць" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => base_1+base_2+"р"+base_3 ;
                       Pl => base_1+base_2+"р"+base_3+"це"
                     } ;
        infinitive = base_1+base_2+"р"+base_3+"ць" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+base_2+"р"+base_3+"ў" ;
                                 Pl => base_1+base_2+"р"+base_3+"лі"
                               } ;
                       Fem => table {
                                Sg => base_1+base_2+"р"+base_3+"ла" ;
                                Pl => base_1+base_2+"р"+base_3+"лі"
                              } ;
                       Neuter => table {
                                   Sg => base_1+base_2+"р"+base_3+"ла" ;
                                   Pl => base_1+base_2+"р"+base_3+"лі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"ор"+base_2+"н"+base_3
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV112"
  } ;

mkV113 : Str -> V ;
mkV113 base =
  case base of {
    base_1+"ыцца" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"ыцца" ;
                                                Pl => base_1+"ымся"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"ышся" ;
                                                Pl => base_1+"ыцеся"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"ыцца" ;
                                                Pl => base_1+"ацца"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => base_1+"ыся" ;
                       Pl => base_1+"ыцеся"
                     } ;
        infinitive = base_1+"ыцца" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"ыўся" ;
                                 Pl => base_1+"ыліся"
                               } ;
                       Fem => table {
                                Sg => base_1+"ылася" ;
                                Pl => base_1+"ыліся"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"ылася" ;
                                   Pl => base_1+"ыліся"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV113"
  } ;

mkV114 : Str -> V ;
mkV114 base =
  case base of {
    "ліць" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => "licʹ" ;
                                                Pl => "льём"
                                              } ;
                                        P2 => table {
                                                Sg => "льеш" ;
                                                Pl => "льяце"
                                              } ;
                                        P3 => table {
                                                Sg => "лье" ;
                                                Pl => "льюць"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => "лі" ;
                       Pl => "ліце"
                     } ;
        infinitive = "ліць" ;
        participle = table {
                       Masc => table {
                                 Sg => "ліў" ;
                                 Pl => "лілі"
                               } ;
                       Fem => table {
                                Sg => "ліла" ;
                                Pl => "лілі"
                              } ;
                       Neuter => table {
                                   Sg => "ліло" ;
                                   Pl => "лілі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => "літы"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV114"
  } ;

mkV115 : Str -> V ;
mkV115 base =
  case base of {
    base_1@("см"|?)+"я"+base_2+"ець" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"я"+base_2+"ець" ;
                                                Pl => base_1+"я"+base_2+"ім"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"я"+base_2+"іш" ;
                                                Pl => base_1+"е"+base_2+"іце"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"я"+base_2+"іць" ;
                                                Pl => base_1+"я"+base_2+"яць"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => base_1+"я"+base_2+"і" ;
                       Pl => base_1+"я"+base_2+"іце"
                     } ;
        infinitive = base_1+"я"+base_2+"ець" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"я"+base_2+"еў" ;
                                 Pl => base_1+"я"+base_2+"елі"
                               } ;
                       Fem => table {
                                Sg => base_1+"я"+base_2+"ела" ;
                                Pl => base_1+"я"+base_2+"елі"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"я"+base_2+"ела" ;
                                   Pl => base_1+"я"+base_2+"елі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV115"
  } ;

mkV116 : Str -> V ;
mkV116 base =
  case base of {
    base_1+"а"+base_2@?+"таць" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"а"+base_2+"таць" ;
                                                Pl => base_1+"о"+base_2+"чам"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"о"+base_2+"чаш" ;
                                                Pl => base_1+"о"+base_2+"чаце"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"о"+base_2+"ча" ;
                                                Pl => base_1+"о"+base_2+"чуць"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => base_1+"а"+base_2+"чы" ;
                       Pl => base_1+"а"+base_2+"чыце"
                     } ;
        infinitive = base_1+"а"+base_2+"таць" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"а"+base_2+"таў" ;
                                 Pl => base_1+"а"+base_2+"талі"
                               } ;
                       Fem => table {
                                Sg => base_1+"а"+base_2+"тала" ;
                                Pl => base_1+"а"+base_2+"талі"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"а"+base_2+"тала" ;
                                   Pl => base_1+"а"+base_2+"талі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV116"
  } ;

mkV117 : Str -> V ;
mkV117 base =
  case base of {
    base_1+"а"+base_2@?+"оць" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"а"+base_2+"оць" ;
                                                Pl => base_1+"о"+base_2+"ем"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"о"+base_2+"еш" ;
                                                Pl => base_1+"о"+base_2+"еце"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"о"+base_2+"е" ;
                                                Pl => base_1+"о"+base_2+"юць"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => base_1+"а"+base_2+"і" ;
                       Pl => base_1+"а"+base_2+"іце"
                     } ;
        infinitive = base_1+"а"+base_2+"оць" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"а"+base_2+"оў" ;
                                 Pl => base_1+"а"+base_2+"олі"
                               } ;
                       Fem => table {
                                Sg => base_1+"а"+base_2+"ола" ;
                                Pl => base_1+"а"+base_2+"олі"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"а"+base_2+"ола" ;
                                   Pl => base_1+"а"+base_2+"олі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => base_1+"о"+base_2+"аты"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV117"
  } ;

mkV118 : Str -> V ;
mkV118 base =
  case base of {
    base_1+"я"+base_2@?+"аць" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"я"+base_2+"аць" ;
                                                Pl => base_1+"я"+base_2+"ым"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"я"+base_2+"ыш" ;
                                                Pl => base_1+"е"+base_2+"ыце"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"я"+base_2+"ыць" ;
                                                Pl => base_1+"я"+base_2+"аць"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => base_1+"я"+base_2+"ы" ;
                       Pl => base_1+"я"+base_2+"ыце"
                     } ;
        infinitive = base_1+"я"+base_2+"аць" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"я"+base_2+"аў" ;
                                 Pl => base_1+"я"+base_2+"алі"
                               } ;
                       Fem => table {
                                Sg => base_1+"я"+base_2+"ала" ;
                                Pl => base_1+"я"+base_2+"алі"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"я"+base_2+"ала" ;
                                   Pl => base_1+"я"+base_2+"алі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV118"
  } ;

mkV119 : Str -> V ;
mkV119 base =
  case base of {
    base_1+"ць" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"ць" ;
                                                Pl => nonExist
                                              } ;
                                        P2 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              } ;
                                        P3 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"ць" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => base_1 ;
                       Pl => base_1+"це"
                     } ;
        infinitive = base_1+"ць" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"ў" ;
                                 Pl => base_1+"лі"
                               } ;
                       Fem => table {
                                Sg => base_1+"ла" ;
                                Pl => base_1+"лі"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"ло" ;
                                   Pl => base_1+"лі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"ты"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV119"
  } ;

mkV120 : Str -> V ;
mkV120 base =
  case base of {
    base_1+"яваць" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"яваць" ;
                                                Pl => base_1+"юем"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"юеш" ;
                                                Pl => base_1+"юеце"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"юе" ;
                                                Pl => base_1+"ююць"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => base_1+"юй" ;
                       Pl => base_1+"юйце"
                     } ;
        infinitive = base_1+"яваць" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"яваў" ;
                                 Pl => base_1+"явалі"
                               } ;
                       Fem => table {
                                Sg => base_1+"явала" ;
                                Pl => base_1+"явалі"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"явала" ;
                                   Pl => base_1+"явалі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => base_1+"яваны"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV120"
  } ;

mkV121 : Str -> V ;
mkV121 base =
  case base of {
    "дзьмуць" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => "dzʹmucʹ" ;
                                                Pl => "дзьмём"
                                              } ;
                                        P2 => table {
                                                Sg => "дзьмеш" ;
                                                Pl => "дзьмяце"
                                              } ;
                                        P3 => table {
                                                Sg => "дзьме" ;
                                                Pl => "дзьмуць"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => "дзьмі" ;
                       Pl => "дзьміце"
                     } ;
        infinitive = "дзьмуць" ;
        participle = table {
                       Masc => table {
                                 Sg => "дзьмуў" ;
                                 Pl => "дзьмулі"
                               } ;
                       Fem => table {
                                Sg => "дзьмула" ;
                                Pl => "дзьмулі"
                              } ;
                       Neuter => table {
                                   Sg => "дзьмула" ;
                                   Pl => "дзьмулі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV121"
  } ;

mkV122 : Str -> V ;
mkV122 base =
  case base of {
    "шыць" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => "šycʹ" ;
                                                Pl => "шыем"
                                              } ;
                                        P2 => table {
                                                Sg => "шыеш" ;
                                                Pl => "шыеце"
                                              } ;
                                        P3 => table {
                                                Sg => "шые" ;
                                                Pl => "шыюць"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => "шый" ;
                       Pl => "шыйце"
                     } ;
        infinitive = "шыць" ;
        participle = table {
                       Masc => table {
                                 Sg => "шыў" ;
                                 Pl => "шылі"
                               } ;
                       Fem => table {
                                Sg => "шыла" ;
                                Pl => "шылі"
                              } ;
                       Neuter => table {
                                   Sg => "шыла" ;
                                   Pl => "шылі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => "шыты"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV122"
  } ;

mkV123 : Str -> V ;
mkV123 base =
  case base of {
    "рыць" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => "rycʹ" ;
                                                Pl => "рыем"
                                              } ;
                                        P2 => table {
                                                Sg => "рыеш" ;
                                                Pl => "рыеце"
                                              } ;
                                        P3 => table {
                                                Sg => "рые" ;
                                                Pl => "рыюць"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => "рый" ;
                       Pl => "рыйце"
                     } ;
        infinitive = "рыць" ;
        participle = table {
                       Masc => table {
                                 Sg => "рыў" ;
                                 Pl => "рылі"
                               } ;
                       Fem => table {
                                Sg => "рыла" ;
                                Pl => "рылі"
                              } ;
                       Neuter => table {
                                   Sg => "рыла" ;
                                   Pl => "рылі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => "рыты"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV123"
  } ;

mkV124 : Str -> V ;
mkV124 base =
  case base of {
    "па"+base_1+"яць" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => "па"+base_1+"яць" ;
                                                Pl => nonExist
                                              } ;
                                        P2 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              } ;
                                        P3 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => "па"+base_1+"яць" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => base_1+"ні" ;
                       Pl => base_1+"ніце"
                     } ;
        infinitive = "па"+base_1+"яць" ;
        participle = table {
                       Masc => table {
                                 Sg => "па"+base_1+"яў" ;
                                 Pl => "па"+base_1+"ялі"
                               } ;
                       Fem => table {
                                Sg => "па"+base_1+"яла" ;
                                Pl => "па"+base_1+"ялі"
                              } ;
                       Neuter => table {
                                   Sg => "па"+base_1+"яла" ;
                                   Pl => "па"+base_1+"ялі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => "па"+base_1+"яты"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV124"
  } ;

mkV125 : Str -> V ;
mkV125 base =
  case base of {
    base_1+"гаць" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"гаць" ;
                                                Pl => base_1+"жом"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"жэш" ;
                                                Pl => base_1+"жаце"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"жэ" ;
                                                Pl => base_1+"гуць"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"гаць" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => base_1+"жы" ;
                       Pl => base_1+"жыце"
                     } ;
        infinitive = base_1+"гаць" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"гаў" ;
                                 Pl => base_1+"галі"
                               } ;
                       Fem => table {
                                Sg => base_1+"гала" ;
                                Pl => base_1+"галі"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"гала" ;
                                   Pl => base_1+"галі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV125"
  } ;

mkV126 : Str -> V ;
mkV126 base =
  case base of {
    base_1+base_2@?+"дзіць" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+base_2+"дзіць" ;
                                                Pl => nonExist
                                              } ;
                                        P2 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              } ;
                                        P3 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+base_2+"дзіць" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => base_1+base_2+"дзі" ;
                       Pl => base_1+base_2+"дзіце"
                     } ;
        infinitive = base_1+base_2+"дзіць" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+base_2+"дзіў" ;
                                 Pl => base_1+base_2+"дзілі"
                               } ;
                       Fem => table {
                                Sg => base_1+base_2+"дзіла" ;
                                Pl => base_1+base_2+"дзілі"
                              } ;
                       Neuter => table {
                                   Sg => base_1+base_2+"дзіла" ;
                                   Pl => base_1+base_2+"дзілі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"одж"+base_2+"ны"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV126"
  } ;

mkV127 : Str -> V ;
mkV127 base =
  case base of {
    "джгаць" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => "džhacʹ" ;
                                                Pl => "джгаем"
                                              } ;
                                        P2 => table {
                                                Sg => "джгаеш" ;
                                                Pl => "джгаеце"
                                              } ;
                                        P3 => table {
                                                Sg => "джгае" ;
                                                Pl => "джгаюць"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => "джгай" ;
                       Pl => "джгайце"
                     } ;
        infinitive = "джгаць" ;
        participle = table {
                       Masc => table {
                                 Sg => "джгаў" ;
                                 Pl => "джгалі"
                               } ;
                       Fem => table {
                                Sg => "джгала" ;
                                Pl => "джгалі"
                              } ;
                       Neuter => table {
                                   Sg => "джгала" ;
                                   Pl => "джгалі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV127"
  } ;

mkV128 : Str -> V ;
mkV128 base =
  case base of {
    base_1+"яць" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"яць" ;
                                                Pl => base_1+"ем"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"еш" ;
                                                Pl => base_1+"еце"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"е" ;
                                                Pl => base_1+"юць"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => base_1+"й" ;
                       Pl => base_1+"йце"
                     } ;
        infinitive = base_1+"яць" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"яў" ;
                                 Pl => base_1+"ялі"
                               } ;
                       Fem => table {
                                Sg => base_1+"яла" ;
                                Pl => base_1+"ялі"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"яла" ;
                                   Pl => base_1+"ялі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => base_1+"яны"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV128"
  } ;

mkV129 : Str -> V ;
mkV129 base =
  case base of {
    "ссаць" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => "ssacʹ" ;
                                                Pl => "ссём"
                                              } ;
                                        P2 => table {
                                                Sg => "ссеш" ;
                                                Pl => "ссяце"
                                              } ;
                                        P3 => table {
                                                Sg => "ссе" ;
                                                Pl => "ссуць"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => "ссі" ;
                       Pl => "ссіце"
                     } ;
        infinitive = "ссаць" ;
        participle = table {
                       Masc => table {
                                 Sg => "ссаў" ;
                                 Pl => "ссалі"
                               } ;
                       Fem => table {
                                Sg => "ссала" ;
                                Pl => "ссалі"
                              } ;
                       Neuter => table {
                                   Sg => "ссала" ;
                                   Pl => "ссалі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV129"
  } ;

mkV130 : Str -> V ;
mkV130 base =
  case base of {
    base_1+"аць" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"аць" ;
                                                Pl => base_1+"ым"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"ыш" ;
                                                Pl => base_1+"ыце"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"ыць" ;
                                                Pl => base_1+"аць"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => base_1+"ы" ;
                       Pl => base_1+"ыце"
                     } ;
        infinitive = base_1+"аць" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"аў" ;
                                 Pl => base_1+"алі"
                               } ;
                       Fem => table {
                                Sg => base_1+"ала" ;
                                Pl => base_1+"алі"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"ала" ;
                                   Pl => base_1+"алі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV130"
  } ;

mkV131 : Str -> V ;
mkV131 base =
  case base of {
    base_1+"егчы" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"егчы" ;
                                                Pl => nonExist
                                              } ;
                                        P2 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              } ;
                                        P3 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"егчы" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => base_1+"яж" ;
                       Pl => base_1+"яжце"
                     } ;
        infinitive = base_1+"егчы" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"ёг" ;
                                 Pl => base_1+"яглі"
                               } ;
                       Fem => table {
                                Sg => base_1+"ягла" ;
                                Pl => base_1+"яглі"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"ягло" ;
                                   Pl => base_1+"яглі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV131"
  } ;

mkV132 : Str -> V ;
mkV132 base =
  case base of {
    base_1+"сці" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"сці" ;
                                                Pl => base_1+"вём"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"веш" ;
                                                Pl => base_1+"вяце"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"ве" ;
                                                Pl => base_1+"вуць"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => base_1+"ві" ;
                       Pl => base_1+"віце"
                     } ;
        infinitive = base_1+"сці" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"ў" ;
                                 Pl => base_1+"лі"
                               } ;
                       Fem => table {
                                Sg => base_1+"ла" ;
                                Pl => base_1+"лі"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"ло" ;
                                   Pl => base_1+"лі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV132"
  } ;

mkV133 : Str -> V ;
mkV133 base =
  case base of {
    base_1+"е"+base_2@?+"агчы" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"е"+base_2+"агчы" ;
                                                Pl => base_1+"е"+base_2+"ажом"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"е"+base_2+"ажэш" ;
                                                Pl => base_1+"е"+base_2+"ажаце"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"е"+base_2+"ажэ" ;
                                                Pl => base_1+"е"+base_2+"агуць"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"е"+base_2+"агчы" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => base_1+"е"+base_2+"ажы" ;
                       Pl => base_1+"е"+base_2+"ажыце"
                     } ;
        infinitive = base_1+"е"+base_2+"агчы" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"я"+base_2+"ог" ;
                                 Pl => base_1+"е"+base_2+"аглі"
                               } ;
                       Fem => table {
                                Sg => base_1+"е"+base_2+"агла" ;
                                Pl => base_1+"е"+base_2+"аглі"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"е"+base_2+"агло" ;
                                   Pl => base_1+"е"+base_2+"аглі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => base_1+"е"+base_2+"ажоны"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"е"+base_2+"ажоны"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV133"
  } ;

mkV134 : Str -> V ;
mkV134 base =
  case base of {
    base_1+"а"+base_2@(?+?)+"ці" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"а"+base_2+"ці" ;
                                                Pl => base_1+"а"+base_2+"ём"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"а"+base_2+"еш" ;
                                                Pl => base_1+"а"+base_2+"яце"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"а"+base_2+"е" ;
                                                Pl => base_1+"а"+base_2+"уць"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => base_1+"а"+base_2+"і" ;
                       Pl => base_1+"а"+base_2+"іце"
                     } ;
        infinitive = base_1+"а"+base_2+"ці" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"о"+base_2 ;
                                 Pl => base_1+"а"+base_2+"лі"
                               } ;
                       Fem => table {
                                Sg => base_1+"а"+base_2+"ла" ;
                                Pl => base_1+"а"+base_2+"лі"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"а"+base_2+"ло" ;
                                   Pl => base_1+"а"+base_2+"лі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV134"
  } ;

mkV135 : Str -> V ;
mkV135 base =
  case base of {
    base_1+"а"+base_2@?+"ці" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"а"+base_2+"ці" ;
                                                Pl => base_1+"а"+base_2+"цём"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"а"+base_2+"цеш" ;
                                                Pl => base_1+"а"+base_2+"цяце"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"а"+base_2+"це" ;
                                                Pl => base_1+"а"+base_2+"туць"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => base_1+"а"+base_2+"ці" ;
                       Pl => base_1+"а"+base_2+"ціце"
                     } ;
        infinitive = base_1+"а"+base_2+"ці" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"о"+base_2 ;
                                 Pl => base_1+"а"+base_2+"лі"
                               } ;
                       Fem => table {
                                Sg => base_1+"а"+base_2+"ла" ;
                                Pl => base_1+"а"+base_2+"лі"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"а"+base_2+"ло" ;
                                   Pl => base_1+"а"+base_2+"лі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV135"
  } ;

mkV136 : Str -> V ;
mkV136 base =
  case base of {
    base_1+"ці" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"ці" ;
                                                Pl => base_1+"ём"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"еш" ;
                                                Pl => base_1+"яце"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"е" ;
                                                Pl => base_1+"уць"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"іце"
                     } ;
        infinitive = base_1+"ці" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1 ;
                                 Pl => base_1+"лі"
                               } ;
                       Fem => table {
                                Sg => base_1+"ла" ;
                                Pl => base_1+"лі"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"ла" ;
                                   Pl => base_1+"лі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => base_1+"ены"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV136"
  } ;

mkV137 : Str -> V ;
mkV137 base =
  case base of {
    base_1+"э"+base_2@?+"ці" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"э"+base_2+"ці" ;
                                                Pl => base_1+"а"+base_2+"ём"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"а"+base_2+"еш" ;
                                                Pl => base_1+"а"+base_2+"яце"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"а"+base_2+"е" ;
                                                Pl => base_1+"а"+base_2+"уць"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => base_1+"а"+base_2+"і" ;
                       Pl => base_1+"а"+base_2+"іце"
                     } ;
        infinitive = base_1+"э"+base_2+"ці" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"о"+base_2 ;
                                 Pl => base_1+"э"+base_2+"лі"
                               } ;
                       Fem => table {
                                Sg => base_1+"э"+base_2+"ла" ;
                                Pl => base_1+"э"+base_2+"лі"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"э"+base_2+"ла" ;
                                   Pl => base_1+"э"+base_2+"лі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV137"
  } ;

mkV138 : Str -> V ;
mkV138 base =
  case base of {
    base_1+"есці" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"есці" ;
                                                Pl => nonExist
                                              } ;
                                        P2 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              } ;
                                        P3 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"есці" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => base_1+"ядзь" ;
                       Pl => base_1+"ядзьце"
                     } ;
        infinitive = base_1+"есці" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"еў" ;
                                 Pl => base_1+"елі"
                               } ;
                       Fem => table {
                                Sg => base_1+"ела" ;
                                Pl => base_1+"елі"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"ела" ;
                                   Pl => base_1+"елі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV138"
  } ;

mkV139 : Str -> V ;
mkV139 base =
  case base of {
    base_1+"віць" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"віць" ;
                                                Pl => base_1+"вім"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"віш" ;
                                                Pl => base_1+"віце"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"віць" ;
                                                Pl => base_1+"вяць"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"віць" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => base_1+"ў" ;
                       Pl => base_1+"ўце"
                     } ;
        infinitive = base_1+"віць" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"віў" ;
                                 Pl => base_1+"вілі"
                               } ;
                       Fem => table {
                                Sg => base_1+"віла" ;
                                Pl => base_1+"вілі"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"віла" ;
                                   Pl => base_1+"вілі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => base_1+"ўлены"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"ўлены"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV139"
  } ;

mkV140 : Str -> V ;
mkV140 base =
  case base of {
    base_1+"сці" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"сці" ;
                                                Pl => base_1+"цём"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"цеш" ;
                                                Pl => base_1+"цяце"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"це" ;
                                                Pl => base_1+"туць"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => base_1+"ці" ;
                       Pl => base_1+"ціце"
                     } ;
        infinitive = base_1+"сці" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"ў" ;
                                 Pl => base_1+"лі"
                               } ;
                       Fem => table {
                                Sg => base_1+"ла" ;
                                Pl => base_1+"лі"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"ло" ;
                                   Pl => base_1+"лі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV140"
  } ;

mkV141 : Str -> V ;
mkV141 base =
  case base of {
    base_1+"гчы" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"гчы" ;
                                                Pl => base_1+"жом"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"жэш" ;
                                                Pl => base_1+"жаце"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"жэ" ;
                                                Pl => base_1+"гуць"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => base_1+"жы" ;
                       Pl => base_1+"жыце"
                     } ;
        infinitive = base_1+"гчы" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"г" ;
                                 Pl => base_1+"глі"
                               } ;
                       Fem => table {
                                Sg => base_1+"гла" ;
                                Pl => base_1+"глі"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"гла" ;
                                   Pl => base_1+"глі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => base_1+"жаны"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV141"
  } ;

mkV142 : Str -> V ;
mkV142 base =
  case base of {
    "це"+base_1+"ці" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => "це"+base_1+"ці" ;
                                                Pl => "т"+base_1+"ом"
                                              } ;
                                        P2 => table {
                                                Sg => "т"+base_1+"эш" ;
                                                Pl => "т"+base_1+"аце"
                                              } ;
                                        P3 => table {
                                                Sg => "т"+base_1+"э" ;
                                                Pl => "т"+base_1+"уць"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => "т"+base_1+"ы" ;
                       Pl => "т"+base_1+"ыце"
                     } ;
        infinitive = "це"+base_1+"ці" ;
        participle = table {
                       Masc => table {
                                 Sg => "цё"+base_1 ;
                                 Pl => "цё"+base_1+"лі"
                               } ;
                       Fem => table {
                                Sg => "цё"+base_1+"ла" ;
                                Pl => "цё"+base_1+"лі"
                              } ;
                       Neuter => table {
                                   Sg => "цё"+base_1+"ла" ;
                                   Pl => "цё"+base_1+"лі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => "цё"+base_1+"ты"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV142"
  } ;

mkV143 : Str -> V ;
mkV143 base =
  case base of {
    base_1+"егчы" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"егчы" ;
                                                Pl => base_1+"яжым"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"яжыш" ;
                                                Pl => base_1+"яжыце"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"яжыць" ;
                                                Pl => base_1+"ягуць"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"егчы" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => base_1+"яжы" ;
                       Pl => base_1+"яжыце"
                     } ;
        infinitive = base_1+"егчы" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"ег" ;
                                 Pl => base_1+"еглі"
                               } ;
                       Fem => table {
                                Sg => base_1+"егла" ;
                                Pl => base_1+"еглі"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"егла" ;
                                   Pl => base_1+"еглі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV143"
  } ;

mkV144 : Str -> V ;
mkV144 base =
  case base of {
    base_1+"ачы" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"ачы" ;
                                                Pl => base_1+"ачом"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"ачэш" ;
                                                Pl => base_1+"ачаце"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"ачэ" ;
                                                Pl => base_1+"акуць"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => base_1+"ачы" ;
                       Pl => base_1+"ачыце"
                     } ;
        infinitive = base_1+"ачы" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"ок" ;
                                 Pl => base_1+"аклі"
                               } ;
                       Fem => table {
                                Sg => base_1+"акла" ;
                                Pl => base_1+"аклі"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"акло" ;
                                   Pl => base_1+"аклі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV144"
  } ;

mkV145 : Str -> V ;
mkV145 base =
  case base of {
    base_1+"аць" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"аць" ;
                                                Pl => base_1+"ём" --guessed
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"еш" ; --guessed
                                                Pl => base_1+"яце" --guessed
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"е" ; --guessed
                                                Pl => base_1+"уць" --guessed
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"аць" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"іце"
                     } ;
        infinitive = base_1+"аць" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"аў" ;
                                 Pl => base_1+"алі"
                               } ;
                       Fem => table {
                                Sg => base_1+"ала" ;
                                Pl => base_1+"алі"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"ала" ;
                                   Pl => base_1+"алі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => base_1+"аны" --guessed
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"аны"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV145"
  } ;

mkV146 : Str -> V ;
mkV146 base =
  case base of {
    "лгаць" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => "lhacʹ" ;
                                                Pl => "лжом"
                                              } ;
                                        P2 => table {
                                                Sg => "лжэш" ;
                                                Pl => "лжаце"
                                              } ;
                                        P3 => table {
                                                Sg => "лжэ" ;
                                                Pl => "лгуць"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => "лжы" ;
                       Pl => "лжыце"
                     } ;
        infinitive = "лгаць" ;
        participle = table {
                       Masc => table {
                                 Sg => "лгаў" ;
                                 Pl => "лгалі"
                               } ;
                       Fem => table {
                                Sg => "лгала" ;
                                Pl => "лгалі"
                              } ;
                       Neuter => table {
                                   Sg => "лгала" ;
                                   Pl => "лгалі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV146"
  } ;

mkV147 : Str -> V ;
mkV147 base =
  case base of {
    "ржаць" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => "ržacʹ" ;
                                                Pl => "ржом"
                                              } ;
                                        P2 => table {
                                                Sg => "ржэш" ;
                                                Pl => "ржаце"
                                              } ;
                                        P3 => table {
                                                Sg => "ржэ" ;
                                                Pl => "ржуць"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => "ржы" ;
                       Pl => "ржыце"
                     } ;
        infinitive = "ржаць" ;
        participle = table {
                       Masc => table {
                                 Sg => "ржаў" ;
                                 Pl => "ржалі"
                               } ;
                       Fem => table {
                                Sg => "ржала" ;
                                Pl => "ржалі"
                              } ;
                       Neuter => table {
                                   Sg => "ржала" ;
                                   Pl => "ржалі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV147"
  } ;

mkV148 : Str -> V ;
mkV148 base =
  case base of {
    "граць" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => "hracʹ" ;
                                                Pl => "граем"
                                              } ;
                                        P2 => table {
                                                Sg => "граеш" ;
                                                Pl => "граеце"
                                              } ;
                                        P3 => table {
                                                Sg => "грае" ;
                                                Pl => "граюць"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => "грай" ;
                       Pl => "грайце"
                     } ;
        infinitive = "граць" ;
        participle = table {
                       Masc => table {
                                 Sg => "граў" ;
                                 Pl => "гралі"
                               } ;
                       Fem => table {
                                Sg => "грала" ;
                                Pl => "гралі"
                              } ;
                       Neuter => table {
                                   Sg => "грала" ;
                                   Pl => "гралі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => "граны"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV148"
  } ;

mkV149 : Str -> V ;
mkV149 base =
  case base of {
    "рваць" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => "rvacʹ" ;
                                                Pl => "рвём"
                                              } ;
                                        P2 => table {
                                                Sg => "рвеш" ;
                                                Pl => "рвяце"
                                              } ;
                                        P3 => table {
                                                Sg => "рве" ;
                                                Pl => "рвуць"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => "рві" ;
                       Pl => "рвіце"
                     } ;
        infinitive = "рваць" ;
        participle = table {
                       Masc => table {
                                 Sg => "рваў" ;
                                 Pl => "рвалі"
                               } ;
                       Fem => table {
                                Sg => "рвала" ;
                                Pl => "рвалі"
                              } ;
                       Neuter => table {
                                   Sg => "рвала" ;
                                   Pl => "рвалі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => "рваны"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV149"
  } ;

mkV150 : Str -> V ;
mkV150 base =
  case base of {
    "мяць" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => "mjacʹ" ;
                                                Pl => "мнём"
                                              } ;
                                        P2 => table {
                                                Sg => "мнеш" ;
                                                Pl => "мняце"
                                              } ;
                                        P3 => table {
                                                Sg => "мне" ;
                                                Pl => "мнуць"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => "мні" ;
                       Pl => "мніце"
                     } ;
        infinitive = "мяць" ;
        participle = table {
                       Masc => table {
                                 Sg => "мяў" ;
                                 Pl => "мялі"
                               } ;
                       Fem => table {
                                Sg => "мяла" ;
                                Pl => "мялі"
                              } ;
                       Neuter => table {
                                   Sg => "мяла" ;
                                   Pl => "мялі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => "мяты"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV150"
  } ;

mkV151 : Str -> V ;
mkV151 base =
  case base of {
    "гнуць" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => "hnucʹ" ;
                                                Pl => "гнём"
                                              } ;
                                        P2 => table {
                                                Sg => "гнеш" ;
                                                Pl => "гняце"
                                              } ;
                                        P3 => table {
                                                Sg => "гне" ;
                                                Pl => "гнуць"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => "гні" ;
                       Pl => "гніце"
                     } ;
        infinitive = "гнуць" ;
        participle = table {
                       Masc => table {
                                 Sg => "гнуў" ;
                                 Pl => "гнулі"
                               } ;
                       Fem => table {
                                Sg => "гнула" ;
                                Pl => "гнулі"
                              } ;
                       Neuter => table {
                                   Sg => "гнула" ;
                                   Pl => "гнулі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => "гнуты"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV151"
  } ;

mkV152 : Str -> V ;
mkV152 base =
  case base of {
    "зваць" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => "zvacʹ" ;
                                                Pl => "завём"
                                              } ;
                                        P2 => table {
                                                Sg => "завеш" ;
                                                Pl => "завяце"
                                              } ;
                                        P3 => table {
                                                Sg => "заве" ;
                                                Pl => "завуць"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => "заві" ;
                       Pl => "завіце"
                     } ;
        infinitive = "зваць" ;
        participle = table {
                       Masc => table {
                                 Sg => "зваў" ;
                                 Pl => "звалі"
                               } ;
                       Fem => table {
                                Sg => "звала" ;
                                Pl => "звалі"
                              } ;
                       Neuter => table {
                                   Sg => "звала" ;
                                   Pl => "звалі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => "званы"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV152"
  } ;

mkV153 : Str -> V ;
mkV153 base =
  case base of {
    "дзець" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => "dzjecʹ" ;
                                                Pl => nonExist
                                              } ;
                                        P2 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              } ;
                                        P3 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => "дзець" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => "дзень" ;
                       Pl => "дзеньце"
                     } ;
        infinitive = "дзець" ;
        participle = table {
                       Masc => table {
                                 Sg => "дзеў" ;
                                 Pl => "дзелі"
                               } ;
                       Fem => table {
                                Sg => "дзела" ;
                                Pl => "дзелі"
                              } ;
                       Neuter => table {
                                   Sg => "дзела" ;
                                   Pl => "дзелі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => "дзеты"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV153"
  } ;

mkV154 : Str -> V ;
mkV154 base =
  case base of {
    base_1+"ець" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"ець" ;
                                                Pl => base_1+"ім"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"іш" ;
                                                Pl => base_1+"іце"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"іць" ;
                                                Pl => base_1+"яць"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => base_1+"ь" ;
                       Pl => base_1+"ьце"
                     } ;
        infinitive = base_1+"ець" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"еў" ;
                                 Pl => base_1+"елі"
                               } ;
                       Fem => table {
                                Sg => base_1+"ела" ;
                                Pl => base_1+"елі"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"ела" ;
                                   Pl => base_1+"елі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV154"
  } ;

mkV155 : Str -> V ;
mkV155 base =
  case base of {
    base_1+"аіць" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"аіць" ;
                                                Pl => base_1+"оім"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"оіш" ;
                                                Pl => base_1+"оіце"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"оіць" ;
                                                Pl => base_1+"ояць"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => base_1+"аі" ;
                       Pl => base_1+"аіце"
                     } ;
        infinitive = base_1+"аіць" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"аіў" ;
                                 Pl => base_1+"аілі"
                               } ;
                       Fem => table {
                                Sg => base_1+"аіла" ;
                                Pl => base_1+"аілі"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"аіла" ;
                                   Pl => base_1+"аілі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => base_1+"оены"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV155"
  } ;

mkV156 : Str -> V ;
mkV156 base =
  case base of {
    base_1+"іць" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"іць" ;
                                                Pl => base_1+"ім"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"іш" ;
                                                Pl => base_1+"іце"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"іць" ;
                                                Pl => base_1+"яць"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"іць" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => base_1+"й" ;
                       Pl => base_1+"йце"
                     } ;
        infinitive = base_1+"іць" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"іў" ;
                                 Pl => base_1+"ілі"
                               } ;
                       Fem => table {
                                Sg => base_1+"іла" ;
                                Pl => base_1+"ілі"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"іла" ;
                                   Pl => base_1+"ілі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"ены"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV156"
  } ;

mkV157 : Str -> V ;
mkV157 base =
  case base of {
    base_1+"аяцца" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"аяцца" ;
                                                Pl => base_1+"аімся"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"аішся" ;
                                                Pl => base_1+"аіцеся"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"аіцца" ;
                                                Pl => base_1+"аяцца"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => base_1+"ойся" ;
                       Pl => base_1+"ойцеся"
                     } ;
        infinitive = base_1+"аяцца" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"аяўся" ;
                                 Pl => base_1+"аяліся"
                               } ;
                       Fem => table {
                                Sg => base_1+"аялася" ;
                                Pl => base_1+"аяліся"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"аялася" ;
                                   Pl => base_1+"аяліся"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV157"
  } ;

mkV158 : Str -> V ;
mkV158 base =
  case base of {
    base_1+"віць" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"віць" ;
                                                Pl => nonExist
                                              } ;
                                        P2 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              } ;
                                        P3 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"віць" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => base_1+"ві" ;
                       Pl => base_1+"віце"
                     } ;
        infinitive = base_1+"віць" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"віў" ;
                                 Pl => base_1+"вілі"
                               } ;
                       Fem => table {
                                Sg => base_1+"віла" ;
                                Pl => base_1+"вілі"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"віла" ;
                                   Pl => base_1+"вілі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"ўлёны"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV158"
  } ;

mkV159 : Str -> V ;
mkV159 base =
  case base of {
    base_1+"сці" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"сці" ;
                                                Pl => nonExist
                                              } ;
                                        P2 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              } ;
                                        P3 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"сці" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => base_1+"дзі" ;
                       Pl => base_1+"дзіце"
                     } ;
        infinitive = base_1+"сці" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"ў" ;
                                 Pl => base_1+"лі"
                               } ;
                       Fem => table {
                                Sg => base_1+"ла" ;
                                Pl => base_1+"лі"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"ло" ;
                                   Pl => base_1+"лі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV159"
  } ;

mkV160 : Str -> V ;
mkV160 base =
  case base of {
    "зняць" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => "znjacʹ" ;
                                                Pl => nonExist
                                              } ;
                                        P2 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              } ;
                                        P3 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => "зняць" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => "здымі" ;
                       Pl => "здыміце"
                     } ;
        infinitive = "зняць" ;
        participle = table {
                       Masc => table {
                                 Sg => "зняў" ;
                                 Pl => "знялі"
                               } ;
                       Fem => table {
                                Sg => "зняла" ;
                                Pl => "знялі"
                              } ;
                       Neuter => table {
                                   Sg => "зняла" ;
                                   Pl => "знялі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => "зняты"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV160"
  } ;

mkV161 : Str -> V ;
mkV161 base =
  case base of {
    base_1+"іць" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"іць" ;
                                                Pl => base_1+"ім"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"іш" ;
                                                Pl => base_1+"іце"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"іць" ;
                                                Pl => base_1+"яць"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"іце"
                     } ;
        infinitive = base_1+"іць" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"іў" ;
                                 Pl => base_1+"ілі"
                               } ;
                       Fem => table {
                                Sg => base_1+"іла" ;
                                Pl => base_1+"ілі"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"іла" ;
                                   Pl => base_1+"ілі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => base_1+"лёны"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV161"
  } ;

mkV162 : Str -> V ;
mkV162 base =
  case base of {
    base_1+"аўці" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"аўці" ;
                                                Pl => base_1+"авём"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"авеш" ;
                                                Pl => base_1+"авяце"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"аве" ;
                                                Pl => base_1+"авуць"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => base_1+"аві" ;
                       Pl => base_1+"авіце"
                     } ;
        infinitive = base_1+"аўці" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"оў" ;
                                 Pl => base_1+"аўлі"
                               } ;
                       Fem => table {
                                Sg => base_1+"аўла" ;
                                Pl => base_1+"аўлі"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"аўло" ;
                                   Pl => base_1+"аўлі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV162"
  } ;

mkV163 : Str -> V ;
mkV163 base =
  case base of {
    base_1+"іцца" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"іцца" ;
                                                Pl => base_1+"імся"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"ішся" ;
                                                Pl => base_1+"іцеся"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"іцца" ;
                                                Pl => base_1+"яцца"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => base_1+"іся" ;
                       Pl => base_1+"іцеся"
                     } ;
        infinitive = base_1+"іцца" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"іўся" ;
                                 Pl => base_1+"іліся"
                               } ;
                       Fem => table {
                                Sg => base_1+"ілася" ;
                                Pl => base_1+"іліся"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"ілася" ;
                                   Pl => base_1+"іліся"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV163"
  } ;

mkV164 : Str -> V ;
mkV164 base =
  case base of {
    "сраць" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => "sracʹ" ;
                                                Pl => "серам"
                                              } ;
                                        P2 => table {
                                                Sg => "сераш" ;
                                                Pl => "сераце"
                                              } ;
                                        P3 => table {
                                                Sg => "сера" ;
                                                Pl => "серуць"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => "сяры" ;
                       Pl => "сярыце"
                     } ;
        infinitive = "сраць" ;
        participle = table {
                       Masc => table {
                                 Sg => "сраў" ;
                                 Pl => "сралі"
                               } ;
                       Fem => table {
                                Sg => "срала" ;
                                Pl => "сралі"
                              } ;
                       Neuter => table {
                                   Sg => "срала" ;
                                   Pl => "сралі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => "сраны"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV164"
  } ;

mkV165 : Str -> V ;
mkV165 base =
  case base of {
    "сцаць" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => "scacʹ" ;
                                                Pl => nonExist
                                              } ;
                                        P2 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              } ;
                                        P3 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => nonExist ;
                       Pl => nonExist
                     } ;
        infinitive = "сцаць" ;
        participle = table {
                       Masc => table {
                                 Sg => nonExist ;
                                 Pl => nonExist
                               } ;
                       Fem => table {
                                Sg => nonExist ;
                                Pl => nonExist
                              } ;
                       Neuter => table {
                                   Sg => nonExist ;
                                   Pl => nonExist
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV165"
  } ;

mkV166 : Str -> V ;
mkV166 base =
  case base of {
    base_1+"а"+base_2@?+"чы" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"а"+base_2+"чы" ;
                                                Pl => base_1+"а"+base_2+"чом"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"а"+base_2+"чэш" ;
                                                Pl => base_1+"а"+base_2+"чаце"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"а"+base_2+"чэ" ;
                                                Pl => base_1+"а"+base_2+"куць"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => base_1+"а"+base_2+"чы" ;
                       Pl => base_1+"а"+base_2+"чыце"
                     } ;
        infinitive = base_1+"а"+base_2+"чы" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"о"+base_2+"к" ;
                                 Pl => base_1+"а"+base_2+"клі"
                               } ;
                       Fem => table {
                                Sg => base_1+"а"+base_2+"кла" ;
                                Pl => base_1+"а"+base_2+"клі"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"а"+base_2+"кло" ;
                                   Pl => base_1+"а"+base_2+"клі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => base_1+"о"+base_2+"чаны"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV166"
  } ;

mkV167 : Str -> V ;
mkV167 base =
  case base of {
    base_1+"ахаць" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"ахаць" ;
                                                Pl => base_1+"эшам"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"эшаш" ;
                                                Pl => base_1+"эшаце"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"эша" ;
                                                Pl => base_1+"эшуць"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => base_1+"ашы" ;
                       Pl => base_1+"ашыце"
                     } ;
        infinitive = base_1+"ахаць" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"ахаў" ;
                                 Pl => base_1+"ахалі"
                               } ;
                       Fem => table {
                                Sg => base_1+"ахала" ;
                                Pl => base_1+"ахалі"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"ахала" ;
                                   Pl => base_1+"ахалі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV167"
  } ;

mkV168 : Str -> V ;
mkV168 base =
  case base of {
    base_1+"сціся" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"сціся" ;
                                                Pl => base_1+"дзёмся"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"дзешся" ;
                                                Pl => base_1+"дзяцеся"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"дзецца" ;
                                                Pl => base_1+"дуцца"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => base_1+"дзіся" ;
                       Pl => base_1+"дзіцеся"
                     } ;
        infinitive = base_1+"сціся" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"ўся" ;
                                 Pl => base_1+"ліся"
                               } ;
                       Fem => table {
                                Sg => base_1+"лася" ;
                                Pl => base_1+"ліся"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"лася" ;
                                   Pl => base_1+"ліся"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV168"
  } ;

mkV169 : Str -> V ;
mkV169 base =
  case base of {
    base_1+"аваць" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"аваць" ;
                                                Pl => base_1+"уём"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"уеш" ;
                                                Pl => base_1+"уяце"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"уе" ;
                                                Pl => base_1+"уюць"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => base_1+"уй" ;
                       Pl => base_1+"уйце"
                     } ;
        infinitive = base_1+"аваць" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"аваў" ;
                                 Pl => base_1+"авалі"
                               } ;
                       Fem => table {
                                Sg => base_1+"авала" ;
                                Pl => base_1+"авалі"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"авала" ;
                                   Pl => base_1+"авалі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV169"
  } ;

mkV170 : Str -> V ;
mkV170 base =
  case base of {
    base_1+"явацца" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"явацца" ;
                                                Pl => base_1+"юемся"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"юешся" ;
                                                Pl => base_1+"юецеся"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"юецца" ;
                                                Pl => base_1+"ююцца"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => base_1+"юйся" ;
                       Pl => base_1+"юйцеся"
                     } ;
        infinitive = base_1+"явацца" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"яваўся" ;
                                 Pl => base_1+"яваліся"
                               } ;
                       Fem => table {
                                Sg => base_1+"явалася" ;
                                Pl => base_1+"яваліся"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"явалася" ;
                                   Pl => base_1+"яваліся"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV170"
  } ;

mkV171 : Str -> V ;
mkV171 base =
  case base of {
    base_1+"ыцца" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"ыцца" ;
                                                Pl => nonExist
                                              } ;
                                        P2 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              } ;
                                        P3 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"ыцца" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => base_1+"удзься" ;
                       Pl => base_1+"удзьцеся"
                     } ;
        infinitive = base_1+"ыцца" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"ыўся" ;
                                 Pl => base_1+"ыліся"
                               } ;
                       Fem => table {
                                Sg => base_1+"ылася" ;
                                Pl => base_1+"ыліся"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"ылося" ;
                                   Pl => base_1+"ыліся"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV171"
  } ;

mkV172 : Str -> V ;
mkV172 base =
  case base of {
    "дбаць" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => "dbacʹ" ;
                                                Pl => "дбаем"
                                              } ;
                                        P2 => table {
                                                Sg => "дбаеш" ;
                                                Pl => "дбаеце"
                                              } ;
                                        P3 => table {
                                                Sg => "дбае" ;
                                                Pl => "дбаюць"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => "дбай" ;
                       Pl => "дбайце"
                     } ;
        infinitive = "дбаць" ;
        participle = table {
                       Masc => table {
                                 Sg => "дбаў" ;
                                 Pl => "дбалі"
                               } ;
                       Fem => table {
                                Sg => "дбала" ;
                                Pl => "дбалі"
                              } ;
                       Neuter => table {
                                   Sg => "дбала" ;
                                   Pl => "дбалі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV172"
  } ;

mkV173 : Str -> V ;
mkV173 base =
  case base of {
    base_1+"іцца" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"іцца" ;
                                                Pl => base_1+"імся"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"ішся" ;
                                                Pl => base_1+"іцеся"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"іцца" ;
                                                Pl => base_1+"яцца"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => base_1+"ься" ;
                       Pl => base_1+"ьцеся"
                     } ;
        infinitive = base_1+"іцца" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"іўся" ;
                                 Pl => base_1+"іліся"
                               } ;
                       Fem => table {
                                Sg => base_1+"ілася" ;
                                Pl => base_1+"іліся"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"ілася" ;
                                   Pl => base_1+"іліся"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV173"
  } ;

mkV174 : Str -> V ;
mkV174 base =
  case base of {
    base_1+"аваць" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"аваць" ;
                                                Pl => "будзем "+base_1+"аваць"
                                              } ;
                                        P2 => table {
                                                Sg => "будзеш "+base_1+"аваць" ;
                                                Pl => "будзеце "+base_1+"аваць"
                                              } ;
                                        P3 => table {
                                                Sg => "будзе "+base_1+"аваць" ;
                                                Pl => "будуць "+base_1+"аваць"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => base_1+"уй" ;
                       Pl => base_1+"уйце"
                     } ;
        infinitive = base_1+"аваць" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"аваў" ;
                                 Pl => base_1+"авалі"
                               } ;
                       Fem => table {
                                Sg => base_1+"авала" ;
                                Pl => base_1+"авалі"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"авала" ;
                                   Pl => base_1+"авалі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => base_1+"аваны"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV174"
  } ;

mkV175 : Str -> V ;
mkV175 base =
  case base of {
    base_1+base_2@?+"ць" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+base_2+"ць" ;
                                                Pl => nonExist
                                              } ;
                                        P2 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              } ;
                                        P3 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+base_2+"ць" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => base_1+base_2 ;
                       Pl => base_1+base_2+"це"
                     } ;
        infinitive = base_1+base_2+"ць" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+base_2+"ў" ;
                                 Pl => base_1+base_2+"лі"
                               } ;
                       Fem => table {
                                Sg => base_1+base_2+"ла" ;
                                Pl => base_1+base_2+"лі"
                              } ;
                       Neuter => table {
                                   Sg => base_1+base_2+"ла" ;
                                   Pl => base_1+base_2+"лі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"он"+base_2
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV175"
  } ;

mkV176 : Str -> V ;
mkV176 base =
  case base of {
    base_1+"авацца" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"авацца" ;
                                                Pl => base_1+"уемся"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"уешся" ;
                                                Pl => base_1+"уецеся"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"уецца" ;
                                                Pl => base_1+"уюцца"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => base_1+"уйся" ;
                       Pl => base_1+"уйцеся"
                     } ;
        infinitive = base_1+"авацца" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"аваўся" ;
                                 Pl => base_1+"аваліся"
                               } ;
                       Fem => table {
                                Sg => base_1+"авалася" ;
                                Pl => base_1+"аваліся"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"авалася" ;
                                   Pl => base_1+"аваліся"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV176"
  } ;

mkV177 : Str -> V ;
mkV177 base =
  case base of {
    base_1+"зіць" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"зіць" ;
                                                Pl => base_1+"зім"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"зіш" ;
                                                Pl => base_1+"зіце"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"зіць" ;
                                                Pl => base_1+"зяць"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => base_1+"зі" ;
                       Pl => base_1+"зіце"
                     } ;
        infinitive = base_1+"зіць" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"зіў" ;
                                 Pl => base_1+"зілі"
                               } ;
                       Fem => table {
                                Sg => base_1+"зіла" ;
                                Pl => base_1+"зілі"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"зіла" ;
                                   Pl => base_1+"зілі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => base_1+"жаны"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV177"
  } ;

mkV178 : Str -> V ;
mkV178 base =
  case base of {
    "пхаць" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => "pxacʹ" ;
                                                Pl => "пхаем"
                                              } ;
                                        P2 => table {
                                                Sg => "пхаеш" ;
                                                Pl => "пхаеце"
                                              } ;
                                        P3 => table {
                                                Sg => "пхае" ;
                                                Pl => "пхаюць"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => "пхай" ;
                       Pl => "пхайце"
                     } ;
        infinitive = "пхаць" ;
        participle = table {
                       Masc => table {
                                 Sg => "пхаў" ;
                                 Pl => "пхалі"
                               } ;
                       Fem => table {
                                Sg => "пхала" ;
                                Pl => "пхалі"
                              } ;
                       Neuter => table {
                                   Sg => "пхала" ;
                                   Pl => "пхалі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV178"
  } ;

mkV179 : Str -> V ;
mkV179 base =
  case base of {
    base_1+"зіць" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"зіць" ;
                                                Pl => base_1+"зім"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"зіш" ;
                                                Pl => base_1+"зіце"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"зіць" ;
                                                Pl => base_1+"зяць"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"зіць" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => base_1+"зь" ;
                       Pl => base_1+"зьце"
                     } ;
        infinitive = base_1+"зіць" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"зіў" ;
                                 Pl => base_1+"зілі"
                               } ;
                       Fem => table {
                                Sg => base_1+"зіла" ;
                                Pl => base_1+"зілі"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"зіла" ;
                                   Pl => base_1+"зілі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => base_1+"жаны"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"жаны"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV179"
  } ;

mkV180 : Str -> V ;
mkV180 base =
  case base of {
    base_1+"а"+base_2@?+"уць" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"а"+base_2+"уць" ;
                                                Pl => base_1+"о"+base_2+"ем"
                                              } ;
                                        P2 => table {
                                                Sg => base_1+"о"+base_2+"еш" ;
                                                Pl => base_1+"о"+base_2+"еце"
                                              } ;
                                        P3 => table {
                                                Sg => base_1+"о"+base_2+"е" ;
                                                Pl => base_1+"о"+base_2+"уць"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => base_1+"а"+base_2+"і" ;
                       Pl => base_1+"а"+base_2+"іце"
                     } ;
        infinitive = base_1+"а"+base_2+"уць" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"а"+base_2+"уў" ;
                                 Pl => base_1+"а"+base_2+"улі"
                               } ;
                       Fem => table {
                                Sg => base_1+"а"+base_2+"ула" ;
                                Pl => base_1+"а"+base_2+"улі"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"а"+base_2+"ула" ;
                                   Pl => base_1+"а"+base_2+"улі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV180"
  } ;

mkV181 : Str -> V ;
mkV181 base =
  case base of {
    base_1+"уць" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"уць" ;
                                                Pl => nonExist
                                              } ;
                                        P2 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              } ;
                                        P3 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"уць" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => base_1+"і" ;
                       Pl => base_1+"іце"
                     } ;
        infinitive = base_1+"уць" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"уў" ;
                                 Pl => base_1+"улі"
                               } ;
                       Fem => table {
                                Sg => base_1+"ула" ;
                                Pl => base_1+"улі"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"ула" ;
                                   Pl => base_1+"улі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"ены"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV181"
  } ;

mkV182 : Str -> V ;
mkV182 base =
  case base of {
    "хлёбаць" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => "xljóbacʹ" ;
                                                Pl => "хлёбаем"
                                              } ;
                                        P2 => table {
                                                Sg => "хлёбаеш" ;
                                                Pl => "хлёбаеце"
                                              } ;
                                        P3 => table {
                                                Sg => "хлёбае" ;
                                                Pl => "хлёбаюць"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => "хлёбай" ;
                       Pl => "хлёбайце"
                     } ;
        infinitive = "хлёбаць" ;
        participle = table {
                       Masc => table {
                                 Sg => "хлёбаў" ;
                                 Pl => "хлёбалі"
                               } ;
                       Fem => table {
                                Sg => "хлёбала" ;
                                Pl => "хлёбалі"
                              } ;
                       Neuter => table {
                                   Sg => "хлёбала" ;
                                   Pl => "хлёбалі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV182"
  } ;

mkV183 : Str -> V ;
mkV183 base =
  case base of {
    base_1+"аваць" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"аваць" ;
                                                Pl => "будзем "+base_1+"аваць"
                                              } ;
                                        P2 => table {
                                                Sg => "будзеш "+base_1+"аваць" ;
                                                Pl => "будзеце "+base_1+"аваць"
                                              } ;
                                        P3 => table {
                                                Sg => "будзе "+base_1+"аваць" ;
                                                Pl => "будуць "+base_1+"аваць"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => base_1+"уй" ;
                       Pl => base_1+"уйце"
                     } ;
        infinitive = base_1+"аваць" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"аваў" ;
                                 Pl => base_1+"авалі"
                               } ;
                       Fem => table {
                                Sg => base_1+"авала" ;
                                Pl => base_1+"авалі"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"авала" ;
                                   Pl => base_1+"авалі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => base_1+"ованы"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV183"
  } ;

mkV184 : Str -> V ;
mkV184 base =
  case base of {
    "і"+base_1+"аваць" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => "і"+base_1+"аваць" ;
                                                Pl => "будзем і"+base_1+"аваць"
                                              } ;
                                        P2 => table {
                                                Sg => "будзеш і"+base_1+"аваць" ;
                                                Pl => "будзеце й"+base_1+"аваць"
                                              } ;
                                        P3 => table {
                                                Sg => "будзе й"+base_1+"аваць" ;
                                                Pl => "будуць і"+base_1+"аваць"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => "і"+base_1+"уй" ;
                       Pl => "і"+base_1+"уйце"
                     } ;
        infinitive = "і"+base_1+"аваць" ;
        participle = table {
                       Masc => table {
                                 Sg => "і"+base_1+"аваў" ;
                                 Pl => "і"+base_1+"авалі"
                               } ;
                       Fem => table {
                                Sg => "і"+base_1+"авала" ;
                                Pl => "і"+base_1+"авалі"
                              } ;
                       Neuter => table {
                                   Sg => "і"+base_1+"авала" ;
                                   Pl => "і"+base_1+"авалі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => "і"+base_1+"ованы"
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV184"
  } ;

mkV185 : Str -> V ;
mkV185 base =
  case base of {
    "грэць" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => "hrecʹ" ;
                                                Pl => "грэем"
                                              } ;
                                        P2 => table {
                                                Sg => "грэеш" ;
                                                Pl => "грэеце"
                                              } ;
                                        P3 => table {
                                                Sg => "грэе" ;
                                                Pl => "грэюць"
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => "грэй" ;
                       Pl => "грэйце"
                     } ;
        infinitive = "грэць" ;
        participle = table {
                       Masc => table {
                                 Sg => "грэў" ;
                                 Pl => "грэлі"
                               } ;
                       Fem => table {
                                Sg => "грэла" ;
                                Pl => "грэлі"
                              } ;
                       Neuter => table {
                                   Sg => "грэла" ;
                                   Pl => "грэлі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => nonExist
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV185"
  } ;

mkV186 : Str -> V ;
mkV186 base =
  case base of {
    base_1+"сіць" => lin V
      { active = table {
                   Imperf => { Past = nonExist ;
                               Pres = table {
                                        P1 => table {
                                                Sg => base_1+"сіць" ;
                                                Pl => nonExist
                                              } ;
                                        P2 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              } ;
                                        P3 => table {
                                                Sg => nonExist ;
                                                Pl => nonExist
                                              }
                                      }
                             } ;
                   Perf => { Past = nonExist ;
                             Pres = table {
                                      P1 => table {
                                              Sg => base_1+"сіць" ;
                                              Pl => nonExist
                                            } ;
                                      P2 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            } ;
                                      P3 => table {
                                              Sg => nonExist ;
                                              Pl => nonExist
                                            }
                                    }
                           }
                 } ;
        imperative = table {
                       Sg => base_1+"сь" ;
                       Pl => base_1+"сьце"
                     } ;
        infinitive = base_1+"сіць" ;
        participle = table {
                       Masc => table {
                                 Sg => base_1+"сіў" ;
                                 Pl => base_1+"сілі"
                               } ;
                       Fem => table {
                                Sg => base_1+"сіла" ;
                                Pl => base_1+"сілі"
                              } ;
                       Neuter => table {
                                   Sg => base_1+"сіла" ;
                                   Pl => base_1+"сілі"
                                 }
                     } ;
        passive = table {
                    Imperf => table {
                                Pres => nonExist ;
                                Past => nonExist
                              } ;
                    Perf => table {
                              Pres => nonExist ;
                              Past => base_1+"шаны"
                            }
                  }
      };
    _ => error "Can't apply paradigm mkV186"
  } ;

mkA001 : Str -> A ;
mkA001 base =
  case base of {
    base_1+"ы" => lin A
      { s = table {
              Nom => table {
                       GSg Masc => base_1+"ы" ;
                       GSg Fem => base_1+"ая" ;
                       GSg Neuter => base_1+"ае" ;
                       GPl => base_1+"ыя"
                     } ;
              Acc => table {
                       GSg Masc => base_1+"ага" ;
                       GSg Fem => base_1+"ую" ;
                       GSg Neuter => base_1+"ае" ;
                       GPl => base_1+"ых"
                     } ;
              Dat => table {
                       GSg Fem => base_1+"ай" ;
                       GSg _ => base_1+"аму" ;
                       GPl => base_1+"ым"
                     } ;
              Gen => table {
                       GSg Fem => base_1+"ай" ;
                       GSg _ => base_1+"ага" ;
                       GPl => base_1+"ых"
                     } ;
              Loc => table {
                       GSg Fem => base_1+"ай" ;
                       GSg _ => base_1+"ым" ;
                       GPl => base_1+"ых"
                     } ;
              Instr => table {
                         GSg Fem => base_1+"ай" ;
                         GSg _ => base_1+"ым" ;
                         GPl => base_1+"ымі"
                       }
            }
      };
    _ => error "Can't apply paradigm mkA001"
  } ;

mkA002 : Str -> A ;
mkA002 base =
  case base of {
    base_1+"ы" => lin A
      { s = table {
              Nom => table {
                       GSg Masc => base_1+"ы" ;
                       GSg Fem => base_1+"ая" ;
                       GSg Neuter => base_1+"ое" ;
                       GPl => base_1+"ыя"
                     } ;
              Acc => table {
                       GSg Masc => base_1+"ога" ;
                       GSg Fem => base_1+"ую" ;
                       GSg Neuter => base_1+"ое" ;
                       GPl => base_1+"ых"
                     } ;
              Dat => table {
                       GSg Fem => base_1+"ой" ;
                       GSg _ => base_1+"ому" ;
                       GPl => base_1+"ым"
                     } ;
              Gen => table {
                       GSg Fem => base_1+"ой" ;
                       GSg _ => base_1+"ога" ;
                       GPl => base_1+"ых"
                     } ;
              Loc => table {
                       GSg Fem => base_1+"ой" ;
                       GSg _ => base_1+"ым" ;
                       GPl => base_1+"ых"
                     } ;
              Instr => table {
                         GSg Fem => base_1+"ой" ;
                         GSg _ => base_1+"ым" ;
                         GPl => base_1+"ымі"
                       }
            }
      };
    _ => error "Can't apply paradigm mkA002"
  } ;

mkA003 : Str -> A ;
mkA003 base =
  case base of {
    base_1+"і" => lin A
      { s = table {
              Nom => table {
                       GSg Masc => base_1+"і" ;
                       GSg Fem => base_1+"ая" ;
                       GSg Neuter => base_1+"ае" ;
                       GPl => base_1+"ія"
                     } ;
              Acc => table {
                       GSg Masc => base_1+"ага" ;
                       GSg Fem => base_1+"ую" ;
                       GSg Neuter => base_1+"ае" ;
                       GPl => base_1+"іх"
                     } ;
              Dat => table {
                       GSg Fem => base_1+"ай" ;
                       GSg _ => base_1+"аму" ;
                       GPl => base_1+"ім"
                     } ;
              Gen => table {
                       GSg Fem => base_1+"ай" ;
                       GSg _ => base_1+"ага" ;
                       GPl => base_1+"іх"
                     } ;
              Loc => table {
                       GSg Fem => base_1+"ай" ;
                       GSg _ => base_1+"ім" ;
                       GPl => base_1+"іх"
                     } ;
              Instr => table {
                         GSg Fem => base_1+"ай" ;
                         GSg _ => base_1+"ім" ;
                         GPl => base_1+"імі"
                       }
            }
      };
    _ => error "Can't apply paradigm mkA003"
  } ;

mkA004 : Str -> A ;
mkA004 base =
  case base of {
    base_1 => lin A
      { s = table {
              Nom => table {
                       GSg Masc => base_1 ;
                       GSg Fem => base_1+"яя" ;
                       GSg Neuter => base_1+"яе" ;
                       GPl => base_1+"ія"
                     } ;
              Acc => table {
                       GSg Masc => base_1+"яга" ;
                       GSg Fem => base_1+"юю" ;
                       GSg Neuter => base_1+"яе" ;
                       GPl => base_1+"іх"
                     } ;
              Dat => table {
                       GSg Fem => base_1+"яй" ;
                       GSg _ => base_1+"яму" ;
                       GPl => base_1+"ім"
                     } ;
              Gen => table {
                       GSg Fem => base_1+"яй" ;
                       GSg _ => base_1+"яга" ;
                       GPl => base_1+"іх"
                     } ;
              Loc => table {
                       GSg Fem => base_1+"яй" ;
                       GSg _ => base_1+"ім" ;
                       GPl => base_1+"іх"
                     } ;
              Instr => table {
                         GSg Fem => base_1+"яй" ;
                         GSg _ => base_1+"ім" ;
                         GPl => base_1+"імі"
                       }
            }
      };
    _ => error "Can't apply paradigm mkA004"
  } ;

mkA005 : Str -> A ;
mkA005 base =
  case base of {
    base_1+"і" => lin A
      { s = table {
              Nom => table {
                       GSg Masc => base_1+"і" ;
                       GSg Fem => base_1+"яя" ;
                       GSg Neuter => base_1+"яе" ;
                       GPl => base_1+"ія"
                     } ;
              Acc => table {
                       GSg Masc => base_1+"яга" ;
                       GSg Fem => base_1+"юю" ;
                       GSg Neuter => base_1+"яе" ;
                       GPl => base_1+"іх"
                     } ;
              Dat => table {
                       GSg Fem => base_1+"яй" ;
                       GSg _ => base_1+"яму" ;
                       GPl => base_1+"ім"
                     } ;
              Gen => table {
                       GSg Fem => base_1+"яй" ;
                       GSg _ => base_1+"яга" ;
                       GPl => base_1+"іх"
                     } ;
              Loc => table {
                       GSg Fem => base_1+"яй" ;
                       GSg _ => base_1+"ім" ;
                       GPl => base_1+"іх"
                     } ;
              Instr => table {
                         GSg Fem => base_1+"яй" ;
                         GSg _ => base_1+"ім" ;
                         GPl => base_1+"імі"
                       }
            }
      };
    _ => error "Can't apply paradigm mkA005"
  } ;

mkA006 : Str -> A ;
mkA006 base =
  case base of {
    base_1+"і" => lin A
      { s = table {
              Nom => table {
                       GSg Masc => base_1+"і" ;
                       GSg Fem => base_1+"ая" ;
                       GSg Neuter => base_1+"ое" ;
                       GPl => base_1+"ія"
                     } ;
              Acc => table {
                       GSg Masc => base_1+"ога" ;
                       GSg Fem => base_1+"ую" ;
                       GSg Neuter => base_1+"ое" ;
                       GPl => base_1+"іх"
                     } ;
              Dat => table {
                       GSg Fem => base_1+"ой" ;
                       GSg _ => base_1+"ому" ;
                       GPl => base_1+"ім"
                     } ;
              Gen => table {
                       GSg Fem => base_1+"ой" ;
                       GSg _ => base_1+"ога" ;
                       GPl => base_1+"іх"
                     } ;
              Loc => table {
                       GSg Fem => base_1+"ой" ;
                       GSg _ => base_1+"ім" ;
                       GPl => base_1+"іх"
                     } ;
              Instr => table {
                         GSg Fem => base_1+"ой" ;
                         GSg _ => base_1+"ім" ;
                         GPl => base_1+"імі"
                       }
            }
      };
    _ => error "Can't apply paradigm mkA006"
  } ;

mkA007 : Str -> A ;
mkA007 base =
  case base of {
    base_1+"ны" => lin A
      { s = table {
              Nom => table {
                       GSg Masc => base_1+"ны" ;
                       GSg Fem => base_1+"ая" ;
                       GSg Neuter => base_1+"ае" ;
                       GPl => base_1+"ыя"
                     } ;
              Acc => table {
                       GSg Masc => base_1+"ага" ;
                       GSg Fem => base_1+"ую" ;
                       GSg Neuter => base_1+"ае" ;
                       GPl => base_1+"ых"
                     } ;
              Dat => table {
                       GSg Fem => base_1+"ай" ;
                       GSg _ => base_1+"аму" ;
                       GPl => base_1+"ым"
                     } ;
              Gen => table {
                       GSg Fem => base_1+"ай" ;
                       GSg _ => base_1+"ага" ;
                       GPl => base_1+"ых"
                     } ;
              Loc => table {
                       GSg Fem => base_1+"ай" ;
                       GSg _ => base_1+"ым" ;
                       GPl => base_1+"ых"
                     } ;
              Instr => table {
                         GSg Fem => base_1+"ай" ;
                         GSg _ => base_1+"ым" ;
                         GPl => base_1+"ымі"
                       }
            }
      };
    _ => error "Can't apply paradigm mkA007"
  } ;

mkA008 : Str -> A ;
mkA008 base =
  case base of {
    "м"+base_1+"ўк"+base_2@(?+?+?)+"ы" => lin A
      { s = table {
              Nom => table {
                       GSg Masc => "м"+base_1+"ўк"+base_2+"ы" ;
                       GSg Fem => "гав"+base_1+"р"+base_2+"ая" ;
                       GSg Neuter => "гав"+base_1+"р"+base_2+"ае" ;
                       GPl => "гав"+base_1+"р"+base_2+"ыя"
                     } ;
              Acc => table {
                       GSg Masc => "гав"+base_1+"р"+base_2+"ага" ;
                       GSg Fem => "гав"+base_1+"р"+base_2+"ую" ;
                       GSg Neuter => "гав"+base_1+"р"+base_2+"ае" ;
                       GPl => "гав"+base_1+"р"+base_2+"ых"
                     } ;
              Dat => table {
                       GSg Fem => "гав"+base_1+"р"+base_2+"ай" ;
                       GSg _ => "гав"+base_1+"р"+base_2+"аму" ;
                       GPl => "гав"+base_1+"р"+base_2+"ым"
                     } ;
              Gen => table {
                       GSg Fem => "гав"+base_1+"р"+base_2+"ай" ;
                       GSg _ => "гав"+base_1+"р"+base_2+"ага" ;
                       GPl => "гав"+base_1+"р"+base_2+"ых"
                     } ;
              Loc => table {
                       GSg Fem => "гав"+base_1+"р"+base_2+"ай" ;
                       GSg _ => "гав"+base_1+"р"+base_2+"ым" ;
                       GPl => "гав"+base_1+"р"+base_2+"ых"
                     } ;
              Instr => table {
                         GSg Fem => "гав"+base_1+"р"+base_2+"ай" ;
                         GSg _ => "гав"+base_1+"р"+base_2+"ым" ;
                         GPl => "гав"+base_1+"р"+base_2+"ымі"
                       }
            }
      };
    _ => error "Can't apply paradigm mkA008"
  } ;

mkA009 : Str -> A ;
mkA009 base =
  case base of {
    "невым"+base_1+"ы" => lin A
      { s = table {
              Nom => table {
                       GSg Masc => "невым"+base_1+"ы" ;
                       GSg Fem => "ах"+base_1+"ая" ;
                       GSg Neuter => "ах"+base_1+"ае" ;
                       GPl => "ах"+base_1+"ыя"
                     } ;
              Acc => table {
                       GSg Masc => "ах"+base_1+"ага" ;
                       GSg Fem => "ах"+base_1+"ую" ;
                       GSg Neuter => "ах"+base_1+"ае" ;
                       GPl => "ах"+base_1+"ых"
                     } ;
              Dat => table {
                       GSg Fem => "ах"+base_1+"ай" ;
                       GSg _ => "ах"+base_1+"аму" ;
                       GPl => "ах"+base_1+"ым"
                     } ;
              Gen => table {
                       GSg Fem => "ах"+base_1+"ай" ;
                       GSg _ => "ах"+base_1+"ага" ;
                       GPl => "ах"+base_1+"ых"
                     } ;
              Loc => table {
                       GSg Fem => "ах"+base_1+"ай" ;
                       GSg _ => "ах"+base_1+"ым" ;
                       GPl => "ах"+base_1+"ых"
                     } ;
              Instr => table {
                         GSg Fem => "ах"+base_1+"ай" ;
                         GSg _ => "ах"+base_1+"ым" ;
                         GPl => "ах"+base_1+"ымі"
                       }
            }
      };
    _ => error "Can't apply paradigm mkA009"
  } ;

mkA010 : Str -> A ;
mkA010 base =
  case base of {
    base_1+"е"+base_2@(?+?+?)+"ы" => lin A
      { s = table {
              Nom => table {
                       GSg Masc => base_1+"е"+base_2+"ы" ;
                       GSg Fem => base_1+"я"+base_2+"ая" ;
                       GSg Neuter => base_1+"я"+base_2+"ае" ;
                       GPl => base_1+"я"+base_2+"ыя"
                     } ;
              Acc => table {
                       GSg Masc => base_1+"я"+base_2+"ага" ;
                       GSg Fem => base_1+"я"+base_2+"ую" ;
                       GSg Neuter => base_1+"я"+base_2+"ае" ;
                       GPl => base_1+"я"+base_2+"ых"
                     } ;
              Dat => table {
                       GSg Fem => base_1+"я"+base_2+"ай" ;
                       GSg _ => base_1+"я"+base_2+"аму" ;
                       GPl => base_1+"я"+base_2+"ым"
                     } ;
              Gen => table {
                       GSg Fem => base_1+"я"+base_2+"ай" ;
                       GSg _ => base_1+"я"+base_2+"ага" ;
                       GPl => base_1+"я"+base_2+"ых"
                     } ;
              Loc => table {
                       GSg Fem => base_1+"я"+base_2+"ай" ;
                       GSg _ => base_1+"я"+base_2+"ым" ;
                       GPl => base_1+"я"+base_2+"ых"
                     } ;
              Instr => table {
                         GSg Fem => base_1+"я"+base_2+"ай" ;
                         GSg _ => base_1+"я"+base_2+"ым" ;
                         GPl => base_1+"я"+base_2+"ымі"
                       }
            }
      };
    _ => error "Can't apply paradigm mkA010"
  } ;
}
